<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.domain.pattern="http://dataquality.domain.pattern" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_kV_qgDgOEeiv1bKJKPS_Mg" name="Member_column_Analysis" creationDate="2018-04-04T09:46:23.155-0400" defaultContext="Default">
    <clientDependency href="../../../metadata/connections/EZCAP_ECD_0.1.item#_thRe0DeAEeionMhtIoBHVw"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Gmail_from_Google_0.1.pattern#_9IJVgDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Yahoo_0.1.pattern#_9Ic3gDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_9IjlMjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_9IyOsjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_9I48YjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_9JCtYjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_9JKCIjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#_9JRW4jgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_9JYElDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_9Jh1kjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_9JpKUjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/code/Key_in_properties_file_0.1.pattern#_9Jv4BDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_9J8FQjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_9KFPMjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_9KPANDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_9KYxMjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/French_VATNumber_0.1.pattern#_9Kh7IjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_9KpP5DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/SEDOL_0.1.pattern#_9KwkpDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_9K35ZDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/Current_Century_Date_0.1.pattern#_9LDfkjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_9LK0UjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_9LT-QDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_9LbTADgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_9LinwTgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_9Lp8gjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/IP_Address_0.1.pattern#_9LzGdDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/MAC_Address_0.1.pattern#_9L83cDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/American_Express_Card_Number_0.1.pattern#_9MEMMjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Bank_Routing_Transit_Number__RTN__0.1.pattern#_9MNWIjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Contains_numbers_0.1.pattern#_9MXHIDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/FR_SSN_0.1.pattern#_9Md00DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/GPS_Coordinate_0.1.pattern#_9MlJkjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_Checker_0.1.pattern#_9MseUjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/International_Passport_0.1.pattern#_9M2PUDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Istat_Code_0.1.pattern#_9M_ZQDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Longitude_Validation_0.1.pattern#_9NGuAjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Master_Card_Number_0.1.pattern#_9NQfADgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Non_Zero_1st_Digit_0.1.pattern#_9NXMsjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Numeric_0.1.pattern#_9Ng9sDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/UK_SSN_0.1.pattern#_9NqHoDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/UK_Vehicle_Registration_Plate_Number_Plate_0.1.pattern#_9Nz4oDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/US_SSN_0.1.pattern#_9N9poDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number_0.1.pattern#_9OEXUjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number__Local_or_International___0.1.pattern#_9OQkkjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/International_phone_number_0.1.pattern#_9Ocx0DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/Mobile_number_of_India_0.1.pattern#_9OjfgjgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Brazil_0.1.pattern#_9OvswDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Number_0.1.pattern#_9O42sDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Blank_text_0.1.pattern#_9PCnsDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Empty_text_0.1.pattern#_9PO08DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Home_Row_Text_0.1.pattern#_9PX-4DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Linux_Path_Verify_0.1.pattern#_9Phv4DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/No_special_chart_0.1.pattern#_9Pq50DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Random_sequence_of_text_0.1.pattern#_9QA4EDgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_blank_0.1.pattern#_9QKCADgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_space_0.1.pattern#_9QTzADgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_uppercase_0.1.pattern#_9Qc88DgOEeiv1bKJKPS_Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Uppercased_Single_Word_0.1.pattern#_9Qmt8DgOEeiv1bKJKPS_Mg"/>
    <taggedValue xmi:id="_kV_qgTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
    <taggedValue xmi:id="_kV_qgjgOEeiv1bKJKPS_Mg" tag="Author" value="HighPoint6@medpointmanagement.com"/>
    <taggedValue xmi:id="_kV_qgzgOEeiv1bKJKPS_Mg" tag="Purpose" value=""/>
    <taggedValue xmi:id="_kV_qhDgOEeiv1bKJKPS_Mg" tag="Description" value=""/>
    <taggedValue xmi:id="_kV_qhTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_zO9p4TgOEeiv1bKJKPS_Mg" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_zO9p4jgOEeiv1bKJKPS_Mg" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_zO9p4zgOEeiv1bKJKPS_Mg" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_zPCiYDgOEeiv1bKJKPS_Mg" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_kV_qhjgOEeiv1bKJKPS_Mg">
      <connection href="../../../metadata/connections/EZCAP_ECD_0.1.item#_mrtVoDSVEeiA5eC6W0k7dg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
    </context>
    <results xmi:id="_kV_qhzgOEeiv1bKJKPS_Mg">
      <resultMetadata xmi:id="_kV_qiDgOEeiv1bKJKPS_Mg" executionDate="2018-04-04T09:52:47.056-0400" message="Unsupported use of regular expressions on this database. Remove all Pattern indicators from this analysis, please." executionNumber="2"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_9ICn0DgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn0TgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWcDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__A18gDgOEeiv1bKJKPS_Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="__A18gTgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="__A18gjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="__A18gzgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_9ICn0jgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn0zgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWczgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE &quot;LASTNM&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__BL6wDgOEeiv1bKJKPS_Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="__BL6wTgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="__BL6wjgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="__BL6wzgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_9ICn1DgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn1TgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWdDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;LASTNM&quot; FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__BcZcDgOEeiv1bKJKPS_Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="__BcZcTgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="__BcZcjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="__BcZczgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_9ICn1jgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn1zgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWdTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &quot;LASTNM&quot;, COUNT(*) mycount FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  GROUP BY &quot;LASTNM&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__Bqb4DgOEeiv1bKJKPS_Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="__Bqb4TgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="__Bqb4jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="__Bqb4zgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="__Bqb5DgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="__Bqb5TgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="__Bqb5jgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="__Bqb5zgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__Bqb6DgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="__Bqb6TgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_9ICn2DgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn2TgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWdjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &quot;LASTNM&quot;, COUNT(*) mycount FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  m  GROUP BY &quot;LASTNM&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__B7hoDgOEeiv1bKJKPS_Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="__B7hoTgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="__B7hojgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="__B7hozgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="__B7hpDgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="__B7hpTgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="__B7hpjgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="__B7hpzgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__B7hqDgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="__B7hqTgOEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_9ICn2jgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn2zgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWdzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&quot;LASTNM&quot;) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  WHERE LTRIM(RTRIM(&quot;LASTNM&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__CQ40DgOEeiv1bKJKPS_Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="__CQ40TgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="__CQ40jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="__CQ40zgOEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="__CQ41DgOEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="__CQ41TgOEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="__CQ41jgOEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__CQ41zgOEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_9ICn3DgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICn3TgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_9ICn3jgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn3zgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn4DgOEeiv1bKJKPS_Mg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWeDgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(&quot;LASTNM&quot;)), COUNT(&quot;LASTNM&quot;) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;LASTNM&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;LASTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__CosQDgOEeiv1bKJKPS_Mg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="__CosQTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="__CosQjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="__CosQzgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__CosRDgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__CosRTgOEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__CosRjgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__CosRzgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__CosSDgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__CosSTgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__CosSjgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__CosSzgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__CosTDgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__CosTTgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__CosTjgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_9ICn4TgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn4jgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn4zgOEeiv1bKJKPS_Mg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWeTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&quot;LASTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;LASTNM&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;LASTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__C-DcDgOEeiv1bKJKPS_Mg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="__C-DcTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="__C-DcjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="__C-DczgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__C-DdDgOEeiv1bKJKPS_Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="__C-DdTgOEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__C-DdjgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__C-DdzgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__C-DeDgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__C-DeTgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="__C-DejgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__C-DezgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__C-DfDgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__C-DfTgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__C-DfjgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_9ICn5DgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn5TgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn5jgOEeiv1bKJKPS_Mg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWejgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&quot;LASTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;LASTNM&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;LASTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__DQ-YDgOEeiv1bKJKPS_Mg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="__DQ-YTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="__DQ-YjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="__DQ-YzgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__DQ-ZDgOEeiv1bKJKPS_Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__DQ-ZTgOEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__DQ-ZjgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__DQ-ZzgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__DQ-aDgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__DQ-aTgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__DQ-ajgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__DQ-azgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__DQ-bDgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__DQ-bTgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__DQ-bjgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_9ICn5zgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn6DgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn6TgOEeiv1bKJKPS_Mg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWgTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&quot;LASTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;LASTNM&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__FGKYDgOEeiv1bKJKPS_Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="__FGKYTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="__FGKYjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="__FGKYzgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__FGKZDgOEeiv1bKJKPS_Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__FGKZTgOEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__FGKZjgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__FGKZzgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__FGKaDgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__FGKaTgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__FGKajgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__FGKazgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__FGKbDgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__FGKbTgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_9ICn6jgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn6zgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn7DgOEeiv1bKJKPS_Mg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWgjgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;LASTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__FUM0DgOEeiv1bKJKPS_Mg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="__FUM0TgOEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="__FUM0jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="__FUM0zgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__FUM1DgOEeiv1bKJKPS_Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__FUM1TgOEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__FUM1jgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__FUM1zgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__FUM2DgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__FUM2TgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__FUM2jgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__FUM2zgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__FUM3DgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__FUM3TgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__FUM3jgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_9ICn7TgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn7jgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn7zgOEeiv1bKJKPS_Mg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWgzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__FnHwDgOEeiv1bKJKPS_Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="__FnHwTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="__FnHwjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="__FnHwzgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__FnHxDgOEeiv1bKJKPS_Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__FnHxTgOEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__FnHxjgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__FnHxzgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__FnHyDgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__FnHyTgOEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__FnHyjgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__FnHyzgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__FnHzDgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__FnHzTgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__FnHzjgOEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_9ICn8DgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn8TgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn8jgOEeiv1bKJKPS_Mg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWfjgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&quot;LASTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;LASTNM&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__EY_wDgOEeiv1bKJKPS_Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="__EY_wTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="__EY_wjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="__EY_wzgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__EY_xDgOEeiv1bKJKPS_Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__EY_xTgOEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__EY_xjgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__EY_xzgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__EY_yDgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__EY_yTgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__EY_yjgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__EY_yzgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__EY_zDgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__EY_zTgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_9ICn8zgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn9DgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn9TgOEeiv1bKJKPS_Mg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWfzgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;LASTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__EnCMDgOEeiv1bKJKPS_Mg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="__EnCMTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="__EnCMjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="__EnCMzgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__EnCNDgOEeiv1bKJKPS_Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__EnCNTgOEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__EnCNjgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__EnCNzgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__EnCODgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__EnCOTgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="__EnCOjgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__EnCOzgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__EnCPDgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__EnCPTgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__EnCPjgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_9ICn9jgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn9zgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn-DgOEeiv1bKJKPS_Mg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWgDgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__E3g4DgOEeiv1bKJKPS_Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="__E3g4TgOEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="__E3g4jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="__E3g4zgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__E3g5DgOEeiv1bKJKPS_Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__E3g5TgOEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__E3g5jgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__E3g5zgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__E3g6DgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__E3g6TgOEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__E3g6jgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__E3g6zgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__E3g7DgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__E3g7TgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__E3g7jgOEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_9ICn-TgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn-jgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn-zgOEeiv1bKJKPS_Mg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWezgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;LASTNM&quot;)) )=0  THEN '' ELSE  &quot;LASTNM&quot; END)), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;LASTNM&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__DrOEDgOEeiv1bKJKPS_Mg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="__DrOETgOEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="__DrOEjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="__DrOEzgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__DrOFDgOEeiv1bKJKPS_Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__DrOFTgOEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__DrOFjgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__DrOFzgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__DrOGDgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__DrOGTgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__DrOGjgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__DrOGzgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__DrOHDgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__DrOHTgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_9ICn_DgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICn_TgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICn_jgOEeiv1bKJKPS_Mg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWfDgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END)), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;LASTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;LASTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__D8T0DgOEeiv1bKJKPS_Mg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="__D8T0TgOEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="__D8T0jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="__D8T0zgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__D8T1DgOEeiv1bKJKPS_Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__D8T1TgOEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__D8T1jgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__D8T1zgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__D8T2DgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__D8T2TgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__D8T2jgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__D8T2zgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__D8T3DgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__D8T3TgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__D8T3jgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_9ICn_zgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICoADgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICoATgOEeiv1bKJKPS_Mg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWfTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;LASTNM&quot; IS NULL  THEN '' ELSE &quot;LASTNM&quot; END  END)), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="__EKWQDgOEeiv1bKJKPS_Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="__EKWQTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="__EKWQjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="__EKWQzgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="__EKWRDgOEeiv1bKJKPS_Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="__EKWRTgOEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="__EKWRjgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="__EKWRzgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="__EKWSDgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="__EKWSTgOEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="__EKWSjgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="__EKWSzgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="__EKWTDgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="__EKWTTgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="__EKWTjgOEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:ModeIndicator" xmi:id="_9ICoAjgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoAzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Mode_0.1.definition#_ccIR4RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWhDgPEeiv1bKJKPS_Mg" body="SELECT TOP 1   &quot;LASTNM&quot;, COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; m  GROUP BY &quot;LASTNM&quot; ORDER BY COUNT(*) DESC " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__F-7MDgOEeiv1bKJKPS_Mg" name="Mode" label="Mode">
          <taggedValue xmi:id="__F-7MTgOEeiv1bKJKPS_Mg" tag="Description" value="computes the mode (most probable value). For numerical data or continuous data, bins can be set in the parameters of this indicator. It is different from the average and from the median. Generalization of it is an histogram. It is good for addressing categorical attributes"/>
          <taggedValue xmi:id="__F-7MjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent value"/>
          <sqlGenericExpression xmi:id="__F-7MzgOEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="SQL"/>
          <sqlGenericExpression xmi:id="__F-7NDgOEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="Oracle"/>
          <sqlGenericExpression xmi:id="__F-7NTgOEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="DB2"/>
          <sqlGenericExpression xmi:id="__F-7NjgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__F-7NzgOEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="__F-7ODgOEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC " language="Hive" version=""/>
          <sqlGenericExpression xmi:id="__F-7OTgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:FrequencyIndicator" xmi:id="_9ICoBDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoBTgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Frequency_Table_0.1.definition#_ccIR4hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIysDgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  &quot;LASTNM&quot;, COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY &quot;LASTNM&quot; ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__GQA8DgOEeiv1bKJKPS_Mg" name="Frequency Table" label="Frequency Table">
          <taggedValue xmi:id="__GQA8TgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="__GQA8jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="__GQA8zgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="__GQA9DgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__GQA9TgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="__GQA9jgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__GQA9zgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="__GQA-DgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="__GQA-TgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:LowFrequencyIndicator" xmi:id="_9ICoBjgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoBzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Low_Frequency_Table_0.1.definition#_-0C00JOtEd2Iyo0dtkB9pA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIysTgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  &quot;LASTNM&quot;, COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY &quot;LASTNM&quot; ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__GgfoDgOEeiv1bKJKPS_Mg" name="Low Frequency Table" label="Low Frequency Table">
          <taggedValue xmi:id="__GgfoTgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="__GgfojgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="__GgfozgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="__GgfpDgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__GgfpTgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="__GgfpjgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__GgfpzgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="__GgfqDgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_9ICoCDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoCTgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIysjgPEeiv1bKJKPS_Mg" bodyquot;LASTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; tquot;LASTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__GvJIDgOEeiv1bKJKPS_Mg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="__GvJITgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="__GvJIjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="__GvJIzgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="__GvJJDgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__GvJJTgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="__GvJJjgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__GvJJzgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="__GvJKDgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__GvJKTgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="__GvJKjgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="__GvJKzgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="__GvJLDgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="__GvJLTgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="__GvJLjgOEeiv1bKJKPS_Mg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJLzgOEeiv1bKJKPS_Mg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJMDgOEeiv1bKJKPS_Mg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJMTgOEeiv1bKJKPS_Mg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJMjgOEeiv1bKJKPS_Mg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJMzgOEeiv1bKJKPS_Mg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJNDgOEeiv1bKJKPS_Mg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJNTgOEeiv1bKJKPS_Mg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJNjgOEeiv1bKJKPS_Mg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJNzgOEeiv1bKJKPS_Mg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJODgOEeiv1bKJKPS_Mg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__GvJOTgOEeiv1bKJKPS_Mg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternLowFreqIndicator" xmi:id="_9ICoCjgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoCzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Low_Frequency_Table_0.1.definition#_OCTbwJR_Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIyszgPEeiv1bKJKPS_Mg" bodyquot;LASTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9'), COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; tquot;LASTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__G_n0DgOEeiv1bKJKPS_Mg" name="Pattern Low Frequency Table" label="Pattern Low Frequency Table">
          <taggedValue xmi:id="__G_n0TgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of patterns for each distinct pattern"/>
          <taggedValue xmi:id="__G_n0jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent patterns"/>
          <sqlGenericExpression xmi:id="__G_n0zgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="__G_n1DgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__G_n1TgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="__G_n1jgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__G_n1zgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="__G_n2DgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="AS/400"/>
          <sqlGenericExpression xmi:id="__G_n2TgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__G_n2jgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="__G_n2zgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="__G_n3DgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="__G_n3TgOEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Netezza"/>
          <charactersMapping xmi:id="__G_n3jgOEeiv1bKJKPS_Mg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n3zgOEeiv1bKJKPS_Mg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n4DgOEeiv1bKJKPS_Mg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n4TgOEeiv1bKJKPS_Mg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n4jgOEeiv1bKJKPS_Mg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n4zgOEeiv1bKJKPS_Mg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n5DgOEeiv1bKJKPS_Mg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n5TgOEeiv1bKJKPS_Mg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n5jgOEeiv1bKJKPS_Mg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n5zgOEeiv1bKJKPS_Mg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n6DgOEeiv1bKJKPS_Mg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="__G_n6TgOEeiv1bKJKPS_Mg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_9ICoDDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoDTgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIytDgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  MAX(&quot;LASTNM&quot;), SOUNDEX(&quot;LASTNM&quot;), COUNT(*) c, COUNT(DISTINCT &quot;LASTNM&quot;) d FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY SOUNDEX(&quot;LASTNM&quot;) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__HSiwDgOEeiv1bKJKPS_Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="__HSiwTgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="__HSiwjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="__HSiwzgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="__HSixDgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__HSixTgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="__HSixjgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__HSixzgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="__HSiyDgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="__HSiyTgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__HSiyjgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="__HSiyzgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="__HSizDgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_9ICoDjgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoDzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIytTgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  MAX(&quot;LASTNM&quot;), SOUNDEX(&quot;LASTNM&quot;), COUNT(*) c, COUNT(DISTINCT &quot;LASTNM&quot;) d FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY SOUNDEX(&quot;LASTNM&quot;) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__HhMQDgOEeiv1bKJKPS_Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="__HhMQTgOEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="__HhMQjgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="__HhMQzgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="__HhMRDgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="__HhMRTgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="__HhMRjgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__HhMRzgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="__HhMSDgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="__HhMSTgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="__HhMSjgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="__HhMSzgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="Ingres"/>
          <sqlGenericExpression xmi:id="__HhMTDgOEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BenfordLawFrequencyIndicator" xmi:id="_9ICoEDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoETgOEeiv1bKJKPS_Mg" topN="50"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Fraud Detection/Benford_Law_Frequency_0.1.definition#_yRkFIezIEeG0fbygDv6UrQ"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIytjgPEeiv1bKJKPS_Mg" body="SELECT TOP 50  cast(LEFT(&quot;LASTNM&quot;,1) as char), COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY LEFT(&quot;LASTNM&quot;,1) order by LEFT(&quot;LASTNM&quot;,1)" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="__Hxq8DgOEeiv1bKJKPS_Mg" name="Benford Law Frequency" label="Benford Law Frequency">
          <taggedValue xmi:id="__Hxq8TgOEeiv1bKJKPS_Mg" tag="Description" value="Benford's law is used by accountants to detect possible instances of fraud based on the distribution of digits in numbers."/>
          <taggedValue xmi:id="__Hxq8jgOEeiv1bKJKPS_Mg" tag="Purpose" value="evaluate the possible instances of fraud"/>
          <sqlGenericExpression xmi:id="__Hxq8zgOEeiv1bKJKPS_Mg" body="SELECT cast(LEFT(&lt;%=__COLUMN_NAMES__%>,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY LEFT(&lt;%=__COLUMN_NAMES__%>,1) order by LEFT(&lt;%=__COLUMN_NAMES__%>,1)" language="SQL"/>
          <sqlGenericExpression xmi:id="__Hxq9DgOEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) order by SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1)" language="Oracle"/>
          <sqlGenericExpression xmi:id="__Hxq9TgOEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2) order by SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2)" language="Teradata"/>
          <sqlGenericExpression xmi:id="__Hxq9jgOEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2), COUNT(*)  FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2) order by SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2)" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="__Hxq9zgOEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Informix"/>
          <sqlGenericExpression xmi:id="__Hxq-DgOEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1) order by SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1)" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="__Hxq-TgOEeiv1bKJKPS_Mg" body="SELECT substr(&lt;%=__COLUMN_NAMES__%>,1,1), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY substr(&lt;%=__COLUMN_NAMES__%>,1,1)" language="Hive"/>
          <sqlGenericExpression xmi:id="__Hxq-jgOEeiv1bKJKPS_Mg" body="SELECT SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1) , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1) order by SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1)" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="__Hxq-zgOEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,1,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Netezza"/>
          <sqlGenericExpression xmi:id="__Hxq_DgOEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(&lt;%=__COLUMN_NAMES__%>,1,1), COUNT(*)  FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Redshift"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SqlPatternMatchingIndicator" xmi:id="_9ICoEjgOEeiv1bKJKPS_Mg" name="Email Gmail from Google">
        <parameters xmi:id="_9ICoEzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoFDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Gmail_from_Google_0.1.pattern#_5tDp8LoaEd2CVq07lsaT2w"/>
            <builtInPatterns xmi:id="__J05YDgOEeiv1bKJKPS_Mg" name="Email Gmail from Google">
              <taggedValue xmi:id="__J05YTgOEeiv1bKJKPS_Mg" tag="Author" value="Abdelhak KHENOUCHE"/>
              <taggedValue xmi:id="__J05YjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses to gmail.com provider"/>
              <taggedValue xmi:id="__J05YzgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="__J05ZDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__J05ZTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__J05ZjgOEeiv1bKJKPS_Mg" expressionType="SQL like">
                <expression xmi:id="__J05ZzgOEeiv1bKJKPS_Mg" body="'%@gmail.com'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/SQL_Pattern_Matching_0.1.definition#_Z4vXcERgEd2RSqFSgXiIfA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIytzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(CASE WHEN &quot;LASTNM&quot; LIKE '%@gmail.com' THEN 1 END), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SqlPatternMatchingIndicator" xmi:id="_9ICoFTgOEeiv1bKJKPS_Mg" name="Email Yahoo">
        <parameters xmi:id="_9ICoFjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoFzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Yahoo_0.1.pattern#_jyAMQbo4Ed2fB5cidg4eog"/>
            <builtInPatterns xmi:id="__K0-8DgOEeiv1bKJKPS_Mg" name="Email Yahoo">
              <taggedValue xmi:id="__K0-8TgOEeiv1bKJKPS_Mg" tag="Author" value="Abdelhak KHENOUCHE"/>
              <taggedValue xmi:id="__K0-8jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses to Yahoo.com, Yahoo.fr  provider and so on"/>
              <taggedValue xmi:id="__K0-8zgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="__K0-9DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__K0-9TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__K0-9jgOEeiv1bKJKPS_Mg" expressionType="SQL like">
                <expression xmi:id="__K0-9zgOEeiv1bKJKPS_Mg" body="'%@yahoo.%'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/SQL_Pattern_Matching_0.1.definition#_Z4vXcERgEd2RSqFSgXiIfA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLIyuDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(CASE WHEN &quot;LASTNM&quot; LIKE '%@yahoo.%' THEN 1 END), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoGDgOEeiv1bKJKPS_Mg" name="BE Code postal">
        <parameters xmi:id="_9ICoGTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoGjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="__M_iIDgOEeiv1bKJKPS_Mg" name="BE Code postal">
              <taggedValue xmi:id="__M_iITgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Belgian postal codes."/>
              <taggedValue xmi:id="__M_iIjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches standard Belgian postal codes."/>
              <taggedValue xmi:id="__M_iIzgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__M_iJDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__M_iJTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__M_iJjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__M_iJzgOEeiv1bKJKPS_Mg" body="'^(F-[0-9]{4,5}|B-[0-9]{4})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoGzgOEeiv1bKJKPS_Mg" name="DE Postleitzahl (postal code)">
        <parameters xmi:id="_9ICoHDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoHTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_rK7EgD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="__OJYsDgOEeiv1bKJKPS_Mg" name="DE Postleitzahl (postal code)">
              <taggedValue xmi:id="__OJYsTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of German postal codes."/>
              <taggedValue xmi:id="__OJYsjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches standard German postal codes."/>
              <taggedValue xmi:id="__OJYszgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__OJYtDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__OJYtTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__OJYtjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__OJYtzgOEeiv1bKJKPS_Mg" body="'^[0-9]{5}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoHjgOEeiv1bKJKPS_Mg" name="FR Code postal">
        <parameters xmi:id="_9ICoHzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoIDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_EJ_moD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="__PakADgOEeiv1bKJKPS_Mg" name="FR Code postal">
              <taggedValue xmi:id="__PakATgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of French postal codes."/>
              <taggedValue xmi:id="__PakAjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches the French postal codes"/>
              <taggedValue xmi:id="__PakAzgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__PakBDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__PakBTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__PakBjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__PakBzgOEeiv1bKJKPS_Mg" body="'^(0[1-9]|[1-9][0-9])[0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoITgOEeiv1bKJKPS_Mg" name="FR Insee Code">
        <parameters xmi:id="_9ICoIjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoIzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_wXkbQEChEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__QapkDgOEeiv1bKJKPS_Mg" name="FR Insee Code">
              <taggedValue xmi:id="__QapkTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__QapkjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__QapkzgOEeiv1bKJKPS_Mg" tag="Purpose" value=" FRA-2A235 | F-2B128 | FRA 2B356"/>
              <taggedValue xmi:id="__QaplDgOEeiv1bKJKPS_Mg" tag="Description" value="French Insee code of cities with Corsica and colonies"/>
              <taggedValue xmi:id="__QaplTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__QapljgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__QaplzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__QapmDgOEeiv1bKJKPS_Mg" body="'^(F-|FRA?(-| ))?((2[A|B])|[0-9]{2})[0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoJDgOEeiv1bKJKPS_Mg" name="Postal code or Pin code of India">
        <parameters xmi:id="_9ICoJTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoJjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_Ego7UIygEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__RbWMDgOEeiv1bKJKPS_Mg" name="Postal code or Pin code of India">
              <taggedValue xmi:id="__RbWMTgOEeiv1bKJKPS_Mg" tag="Author" value="Nandip Makwana"/>
              <taggedValue xmi:id="__RbWMjgOEeiv1bKJKPS_Mg" tag="Description" value="This expression will be useful to check postal code or pin code of India. This expression will check postal code or pin code in two format. One is code is separated by space after 3 digit and another is code is written in 6 digit."/>
              <taggedValue xmi:id="__RbWMzgOEeiv1bKJKPS_Mg" tag="Purpose" value="360311 ||| 360 311 ||| 360 00136 0311 ||| 3603111 ||| 360 31 ||| 36031"/>
              <taggedValue xmi:id="__RbWNDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__RbWNTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__RbWNjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__RbWNzgOEeiv1bKJKPS_Mg" body="'([0-9]{6}|[0-9]{3}\s[0-9]{3})'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoJzgOEeiv1bKJKPS_Mg" name="Swiss Zip Code validation">
        <parameters xmi:id="_9ICoKDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoKTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#__GBswIyfEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__Sd4ADgOEeiv1bKJKPS_Mg" name="Swiss Zip Code validation">
              <taggedValue xmi:id="__Sd4ATgOEeiv1bKJKPS_Mg" tag="Author" value="Michael Freiermuth"/>
              <taggedValue xmi:id="__Sd4AjgOEeiv1bKJKPS_Mg" tag="Description" value="Zip code validation for Switzerland.&#xA;Forces 4-digits only zipcode starting at 1000"/>
              <taggedValue xmi:id="__Sd4AzgOEeiv1bKJKPS_Mg" tag="Purpose" value="1000 | 1200 | 8200 | 8048 | 9999a-z | aaaa | 123 | 0000"/>
              <taggedValue xmi:id="__Sd4BDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__Sd4BTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__Sd4BjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__Sd4BzgOEeiv1bKJKPS_Mg" body="'^[1-9][0-9][0-9][0-9]$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoKjgOEeiv1bKJKPS_Mg" name="US State Codes">
        <parameters xmi:id="_9ICoKzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoLDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_pWgP8LkgEeSVYtNTxh_-xg"/>
            <builtInPatterns xmi:id="__TXP4DgOEeiv1bKJKPS_Mg" name="US State Codes">
              <taggedValue xmi:id="__TXP4TgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Belgian postal codes."/>
              <taggedValue xmi:id="__TXP4jgOEeiv1bKJKPS_Mg" tag="Description" value="matches US state codes such as AK, AL, AR, ..."/>
              <taggedValue xmi:id="__TXP4zgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__TXP5DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__TXP5TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__TXP5jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__TXP5zgOEeiv1bKJKPS_Mg" body="'^(A[KLRZ]|C[AOT]|DE|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoLTgOEeiv1bKJKPS_Mg" name="US Zipcode Validation">
        <parameters xmi:id="_9ICoLjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoLzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_n2tqUIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__UcN8DgOEeiv1bKJKPS_Mg" name="US Zipcode Validation">
              <taggedValue xmi:id="__UcN8TgOEeiv1bKJKPS_Mg" tag="Author" value="Amith"/>
              <taggedValue xmi:id="__UcN8jgOEeiv1bKJKPS_Mg" tag="Description" value="Zipcode should be of 5 numerics"/>
              <taggedValue xmi:id="__UcN8zgOEeiv1bKJKPS_Mg" tag="Purpose" value="matches only if 5 numerics are presentnot matches if less than 5 numerics"/>
              <taggedValue xmi:id="__UcN9DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__UcN9TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__UcN9jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__UcN9zgOEeiv1bKJKPS_Mg" body="'^[0-9]{5}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoMDgOEeiv1bKJKPS_Mg" name="Valid UK Post Codes Upper and Lower Case">
        <parameters xmi:id="_9ICoMTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoMjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_fi29wIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__VYCEDgOEeiv1bKJKPS_Mg" name="Valid UK Post Codes Upper and Lower Case">
              <taggedValue xmi:id="__VYCETgOEeiv1bKJKPS_Mg" tag="Author" value="Gareth Wright"/>
              <taggedValue xmi:id="__VYCEjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches valid UK post codes in both upper and lower case, allowing for one or zero spaces between outcode and incodes."/>
              <taggedValue xmi:id="__VYCEzgOEeiv1bKJKPS_Mg" tag="Purpose" value="SW112LE | SW11 2LE | sw112le12CR0LE | 12CR 0LE | SWLE05"/>
              <taggedValue xmi:id="__VYCFDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__VYCFTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__VYCFjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__VYCFzgOEeiv1bKJKPS_Mg" body="'^ (([BEGLMNSWbeglmnsw][0-9][0-9]?)|(([A-PR-UWYZa-pr-uwyz][A-HK-Ya-hk-y][0-9][0-9]?)|(([ENWenw][0-9][A-HJKSTUWa-hjkstuw])|([ENWenw][A-HK-Ya-hk-y][0-9][ABEHMNPRVWXYabehmnprvwxy])))) ?[0-9][ABD-HJLNP-UW-Zabd-hjlnp-uw-z]{2}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoMzgOEeiv1bKJKPS_Mg" name="Key in properties file">
        <parameters xmi:id="_9ICoNDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoNTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/code/Key_in_properties_file_0.1.pattern#_DVfAwAMtEd6stMai_3cDIQ"/>
            <builtInPatterns xmi:id="__WRZ8DgOEeiv1bKJKPS_Mg" name="Key in properties file">
              <taggedValue xmi:id="__WRZ8TgOEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="__WRZ8jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches: \ClassFoo.string.1\&quot; &#xA;Non-Matches: \&quot;#ClassFoo\&quot;.&quot;"/>
              <taggedValue xmi:id="__WRZ8zgOEeiv1bKJKPS_Mg" tag="Purpose" value="match the keys of a Java properties file."/>
              <taggedValue xmi:id="__WRZ9DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__WRZ9TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__WRZ9jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__WRZ9zgOEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\[?\\]?$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__WRZ-DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__WRZ-TgOEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\\\[?\\\\]?$'" language="Mysql"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__WRZ-jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__WRZ-zgOEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\[?\\]?$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__WRZ_DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__WRZ_TgOEeiv1bKJKPS_Mg" body="'^[-+&lt;>a-z|0-9._@&amp;*]*\[?\]?$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoNjgOEeiv1bKJKPS_Mg" name="Hex Color Codes">
        <parameters xmi:id="_9ICoNzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoODgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_ly9QgcBQEd2Zap05uF3mKA"/>
            <builtInPatterns xmi:id="__XHugDgOEeiv1bKJKPS_Mg" name="Hex Color Codes">
              <taggedValue xmi:id="__XHugTgOEeiv1bKJKPS_Mg" tag="Author" value="Michael Fienen"/>
              <taggedValue xmi:id="__XHugjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches valid 3 or 6 character hex codes used for HTML or CSS.&#xA;Matches fff | #990000 | #cc3366 | #AAAAAA&#xA;Non-Matches #5555 | #ZJK000 | CDCDCDCD"/>
              <taggedValue xmi:id="__XHugzgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check hex codes used for HTML or CSS"/>
              <taggedValue xmi:id="__XHuhDgOEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="__XHuhTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__XHuhjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__XHuhzgOEeiv1bKJKPS_Mg" body="'^\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__XHuiDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__XHuiTgOEeiv1bKJKPS_Mg" body="'^\\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$'" language="MySQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoOTgOEeiv1bKJKPS_Mg" name="EN Amount Money">
        <parameters xmi:id="_9ICoOjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoOzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_TTN-cEClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__YBGYDgOEeiv1bKJKPS_Mg" name="EN Amount Money">
              <taggedValue xmi:id="__YBGYTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__YBGYjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__YBGYzgOEeiv1bKJKPS_Mg" tag="Purpose" value="$3,000 | CA$3000"/>
              <taggedValue xmi:id="__YBGZDgOEeiv1bKJKPS_Mg" tag="Description" value="Amount of money in English format"/>
              <taggedValue xmi:id="__YBGZTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__YBGZjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__YDioDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__YDioTgOEeiv1bKJKPS_Mg" body="'^((US|CA)?\$|\￡|\€|\￥)(([1-9][0-9]{0,2}(\,[0-9]{3})*)|([1-9][0-9]*)|(0))(\.[0-9]{2}|k|M|G|T)?$'" language="SQL" modificationDate="2015-08-17 14:40:36"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__YDiojgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__YDiozgOEeiv1bKJKPS_Mg" body="'^((US|CA)?\\$|\￡|\€|\￥)(([1-9][0-9]{0,2}(\,[0-9]{3})*)|([1-9][0-9]*)|(0))(\.[0-9]{2}|k|M|G|T)?$'" language="MySQL" modificationDate="2015-08-17 14:27:55"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoPDgOEeiv1bKJKPS_Mg" name="FR Amount Money">
        <parameters xmi:id="_9ICoPTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoPjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_MKEKcEClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__Y6eQDgOEeiv1bKJKPS_Mg" name="FR Amount Money">
              <taggedValue xmi:id="__Y6eQTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__Y6eQjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__Y6eQzgOEeiv1bKJKPS_Mg" tag="Purpose" value="3000 € | 35 k€ | 35 054 T€"/>
              <taggedValue xmi:id="__Y6eRDgOEeiv1bKJKPS_Mg" tag="Description" value="Amount of money in French format"/>
              <taggedValue xmi:id="__Y6eRTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__Y6eRjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__Y6eRzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__Y6eSDgOEeiv1bKJKPS_Mg" body="'^(([1-9][0-9]{0,2}( [0-9]{3})*)|([1-9][0-9]*)|0)((,[0-9]{2} | (k|M|G|T))?| )(\$( (US|CA))?|\￡|\€|\￥)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoPzgOEeiv1bKJKPS_Mg" name="Bulgaria Vat Number">
        <parameters xmi:id="_9ICoQDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoQTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_b95-YIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__Zz2IDgOEeiv1bKJKPS_Mg" name="Bulgaria Vat Number">
              <taggedValue xmi:id="__Zz2ITgOEeiv1bKJKPS_Mg" tag="Author" value="Panayiotis Savva"/>
              <taggedValue xmi:id="__Zz2IjgOEeiv1bKJKPS_Mg" tag="Description" value="Vat number for Bulgaria. Formats are &#xA;BG123456789&#xA;BG1234567890"/>
              <taggedValue xmi:id="__Zz2IzgOEeiv1bKJKPS_Mg" tag="Purpose" value="BG123456789|||BG1234567890|||BG1587963587BG12349|||Bg1234567890|||BG1587963587989"/>
              <taggedValue xmi:id="__Zz2JDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__Zz2JTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__Zz2JjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__Zz2JzgOEeiv1bKJKPS_Mg" body="'^(BG){0,1}([0-9]{9}|[0-9]{10})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoQjgOEeiv1bKJKPS_Mg" name="French VATNumber">
        <parameters xmi:id="_9ICoQzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoRDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/French_VATNumber_0.1.pattern#_ga6fofbIEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="__b2dgDgOEeiv1bKJKPS_Mg" name="French VATNumber">
              <taggedValue xmi:id="__b2dgTgOEeiv1bKJKPS_Mg" tag="Author" value="Vassilis Petroulias"/>
              <taggedValue xmi:id="__b2dgjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches FRAB 123456789 | L7 123456789&#xA;Non-Matches  &#x9;&#xA;FRAB123456789 | L7 L23456789&#x9;"/>
              <taggedValue xmi:id="__b2dgzgOEeiv1bKJKPS_Mg" tag="Purpose" value="VAT Numbers format verification (France) with support for optional member state definition."/>
              <taggedValue xmi:id="__b2dhDgOEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="__b2dhTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__b2dhjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__b2dhzgOEeiv1bKJKPS_Mg" body="'^(FR){0,1}[0-9A-Z]{2}\ [0-9]{9}$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__b2diDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__b2diTgOEeiv1bKJKPS_Mg" body="'^(FR){0,1}[0-9A-Z]{2}\\ [0-9]{9}$'" language="MySQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoRTgOEeiv1bKJKPS_Mg" name="Gender">
        <parameters xmi:id="_9ICoRjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoRzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_TXHDQceCEd2zV_ZhgRMOzA"/>
            <builtInPatterns xmi:id="__cv1YDgOEeiv1bKJKPS_Mg" name="Gender">
              <taggedValue xmi:id="__cv1YTgOEeiv1bKJKPS_Mg" tag="Author" value="Keith Stacy"/>
              <taggedValue xmi:id="__cv1YjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches: F, M, Male, Female, male, female.&#xA;Non-matches: mail, A, S"/>
              <taggedValue xmi:id="__cv1YzgOEeiv1bKJKPS_Mg" tag="Purpose" value="Classic gender descriptor regex."/>
              <taggedValue xmi:id="__cv1ZDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__cv1ZTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__cv1ZjgOEeiv1bKJKPS_Mg">
                <expression xmi:id="__cv1ZzgOEeiv1bKJKPS_Mg" body="'^(m|M|male|Male|f|F|female|Female)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoSDgOEeiv1bKJKPS_Mg" name="SEDOL">
        <parameters xmi:id="_9ICoSTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoSjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/SEDOL_0.1.pattern#_u--T0EClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__drpgDgOEeiv1bKJKPS_Mg" name="SEDOL">
              <taggedValue xmi:id="__drpgTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__drpgjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__drpgzgOEeiv1bKJKPS_Mg" tag="Purpose" value="B01HL06 | 4155586"/>
              <taggedValue xmi:id="__drphDgOEeiv1bKJKPS_Mg" tag="Description" value="Stock Exchange Daily Official List "/>
              <taggedValue xmi:id="__drphTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__drphjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__drphzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__drpiDgOEeiv1bKJKPS_Mg" body="'^([B-Db-dF-Hf-hJ-Nj-nP-Tp-tV-Xv-xYyZz0-9]{6}[0-9])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoSzgOEeiv1bKJKPS_Mg" name="24 Hour Time">
        <parameters xmi:id="_9ICoTDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoTTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_nj3TsD4KEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="__elBYDgOEeiv1bKJKPS_Mg" name="24 Hour Time">
              <taggedValue xmi:id="__elBYTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check time strings in 24 hour format"/>
              <taggedValue xmi:id="__elBYjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches a string if it is a valid time in the format of HH:MM"/>
              <taggedValue xmi:id="__elBYzgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__elBZDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__elBZTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__elBZjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__elBZzgOEeiv1bKJKPS_Mg" body="'^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoTjgOEeiv1bKJKPS_Mg" name="Current Century Date">
        <parameters xmi:id="_9ICoTzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoUDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Current_Century_Date_0.1.pattern#_khsAgIyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__fdyMDgOEeiv1bKJKPS_Mg" name="Current Century Date">
              <taggedValue xmi:id="__fdyMTgOEeiv1bKJKPS_Mg" tag="Author" value="Hallam Mohamed Amine"/>
              <taggedValue xmi:id="__fdyMjgOEeiv1bKJKPS_Mg" tag="Description" value="This regular expression will validate most (current &amp; future) date options. The weaknesses with this one is that it will allow the days to go up to 39 and does not account for leap year. Also, the months can go up to 19, instead of our commonly accepted 12 month year. :)  I designed this expression to validate dates from the year 2000 to 2099. I do not plan on this same code being in place in 2099, so I hope this is sufficient enough..."/>
              <taggedValue xmi:id="__fdyMzgOEeiv1bKJKPS_Mg" tag="Purpose" value="match 2/14/2001 or 12-14-2001 or  12-29-2099  not matches :  2/14/1999"/>
              <taggedValue xmi:id="__fdyNDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__fdyNTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__fdyNjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__fdyNzgOEeiv1bKJKPS_Mg" body="'^([0-1]?[0-9]{1}[/-][0-3]?[0-9]{1}[/-]20[0-9]{2})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoUTgOEeiv1bKJKPS_Mg" name="EN Month">
        <parameters xmi:id="_9ICoUjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoUzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_cfceoEC_EeWBxNQvuPBQ-Q"/>
            <builtInPatterns xmi:id="__gXKEDgOEeiv1bKJKPS_Mg" name="EN Month">
              <taggedValue xmi:id="__gXKETgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__gXKEjgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__gXKEzgOEeiv1bKJKPS_Mg" tag="Purpose" value="January | February"/>
              <taggedValue xmi:id="__gXKFDgOEeiv1bKJKPS_Mg" tag="Description" value="Month in English"/>
              <taggedValue xmi:id="__gXKFTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__gXKFjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__gXKFzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__gXKGDgOEeiv1bKJKPS_Mg" body="'^(January|June|July|February|March|May|April|August|September|October|November|December)$'" language="SQL" modificationDate="2015-08-12 15:53:13"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoVDgOEeiv1bKJKPS_Mg" name="EN Month Abbrev">
        <parameters xmi:id="_9ICoVTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoVjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_T8ZfgEC_EeWBxNQvuPBQ-Q"/>
            <builtInPatterns xmi:id="__hQh8DgOEeiv1bKJKPS_Mg" name="EN Month Abbrev">
              <taggedValue xmi:id="__hQh8TgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__hQh8jgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__hQh8zgOEeiv1bKJKPS_Mg" tag="Purpose" value="Jan | Feb"/>
              <taggedValue xmi:id="__hQh9DgOEeiv1bKJKPS_Mg" tag="Description" value="Month English abbreviation"/>
              <taggedValue xmi:id="__hQh9TgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__hQh9jgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__hQh9zgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__hQh-DgOEeiv1bKJKPS_Mg" body="'^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoVzgOEeiv1bKJKPS_Mg" name="ISO Date">
        <parameters xmi:id="_9ICoWDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoWTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_M4zogD4ZEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="__iJ50DgOEeiv1bKJKPS_Mg" name="ISO Date">
              <taggedValue xmi:id="__iJ50TgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of ISO dates."/>
              <taggedValue xmi:id="__iJ50jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches ISO dates such as 2002-01-31."/>
              <taggedValue xmi:id="__iJ50zgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__iJ51DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__iJ51TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__iJ51jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__iJ51zgOEeiv1bKJKPS_Mg" body="'^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[[:digit:]])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__iJ52DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__iJ52TgOEeiv1bKJKPS_Mg" body="'^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[\d])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoWjgOEeiv1bKJKPS_Mg" name="Month">
        <parameters xmi:id="_9ICoWzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoXDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_ZNaNsD4ZEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="__jCqoDgOEeiv1bKJKPS_Mg" name="Month">
              <taggedValue xmi:id="__jCqoTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of month"/>
              <taggedValue xmi:id="__jCqojgOEeiv1bKJKPS_Mg" tag="Description" value="Matches month written as 2-digit numbers (e.g. '08', '12')."/>
              <taggedValue xmi:id="__jCqozgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__jCqpDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__jCqpTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__jCqpjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__jCqpzgOEeiv1bKJKPS_Mg" body="'^((0[1-9])|(1[0-2]))$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoXTgOEeiv1bKJKPS_Mg" name="Email Address">
        <parameters xmi:id="_9ICoXjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoXzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_rC5TcD4XEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="__kDXQDgOEeiv1bKJKPS_Mg" name="Email Address">
              <taggedValue xmi:id="__kDXQTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="__kDXQjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses"/>
              <taggedValue xmi:id="__kDXQzgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__kDXRDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__kDXRTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__kDXRjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__kDXRzgOEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__kDXSDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__kDXSTgOEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'" language="Mysql"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__kDXSjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__kDXSzgOEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="Java"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__kDXTDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__kDXTTgOEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="SQL" modificationDate="2013-09-19 14:26:31"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoYDgOEeiv1bKJKPS_Mg" name="IP Address">
        <parameters xmi:id="_9ICoYTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoYjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/IP_Address_0.1.pattern#_pOs9MAyEEd6OfvNiP9lrnQ"/>
            <builtInPatterns xmi:id="__mlt4DgOEeiv1bKJKPS_Mg" name="IP Address">
              <taggedValue xmi:id="__mlt4TgOEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="__mlt4jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches: IP addresses such as 10.62.268.9&#xA;Non-matches: 345.2.2.3, 123.1.1.34.4"/>
              <taggedValue xmi:id="__mlt4zgOEeiv1bKJKPS_Mg" tag="Purpose" value="Match IP addresses"/>
              <taggedValue xmi:id="__mlt5DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__mlt5TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__mlt5jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__mlt5zgOEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="MySQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__mlt6DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__mlt6TgOEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__mlt6jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__mlt6zgOEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__mlt7DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__mlt7TgOEeiv1bKJKPS_Mg" body="'^([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoYzgOEeiv1bKJKPS_Mg" name="MAC Address">
        <parameters xmi:id="_9ICoZDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoZTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/MAC_Address_0.1.pattern#_xVVjsECkEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__ooVQDgOEeiv1bKJKPS_Mg" name="MAC Address">
              <taggedValue xmi:id="__ooVQTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__ooVQjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__ooVQzgOEeiv1bKJKPS_Mg" tag="Purpose" value="A4:4E:31:B9:C5:B4"/>
              <taggedValue xmi:id="__ooVRDgOEeiv1bKJKPS_Mg" tag="Description" value="Match MAC Address"/>
              <taggedValue xmi:id="__ooVRTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__ooVRjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__ooVRzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__ooVSDgOEeiv1bKJKPS_Mg" body="'^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoZjgOEeiv1bKJKPS_Mg" name="American Express Card Number">
        <parameters xmi:id="_9ICoZzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoaDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/American_Express_Card_Number_0.1.pattern#_FcDG0D17Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="__qKmUDgOEeiv1bKJKPS_Mg" name="American Express Card Number">
              <taggedValue xmi:id="__qKmUTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Checks the validity of American Express card numbers. "/>
              <taggedValue xmi:id="__qKmUjgOEeiv1bKJKPS_Mg" tag="Description" value="American Express card numbers start with 34 or 37 and have 15 digits."/>
              <taggedValue xmi:id="__qKmUzgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__qKmVDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__qKmVTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__qKmVjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__qKmVzgOEeiv1bKJKPS_Mg" body="'^3[47][0-9]{13}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoaTgOEeiv1bKJKPS_Mg" name="Bank Routing Transit Number (RTN)">
        <parameters xmi:id="_9ICoajgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoazgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Bank_Routing_Transit_Number__RTN__0.1.pattern#_j5FFMIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__rk7kDgOEeiv1bKJKPS_Mg" name="Bank Routing Transit Number (RTN)">
              <taggedValue xmi:id="__rk7kTgOEeiv1bKJKPS_Mg" tag="Author" value="Doug Vanderweide"/>
              <taggedValue xmi:id="__rk7kjgOEeiv1bKJKPS_Mg" tag="Description" value="Ensures a given string matches the basic pattern of a bank routing transit number (RTN), used to identify financial institutions on instruments such as checks. Ensures number is nine digits long and has first two digits that comply with American Bankers Association rules."/>
              <taggedValue xmi:id="__rk7kzgOEeiv1bKJKPS_Mg" tag="Purpose" value="614321634, 114000900, 7034520981145329, 491212012, banana"/>
              <taggedValue xmi:id="__rk7lDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__rk7lTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__rk7ljgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__rk7lzgOEeiv1bKJKPS_Mg" body="'^((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICobDgOEeiv1bKJKPS_Mg" name="Contains numbers">
        <parameters xmi:id="_9ICobTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICobjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Contains_numbers_0.1.pattern#_Lnh0kGUuEd2RuP05jDphQg"/>
            <builtInPatterns xmi:id="__seTcDgOEeiv1bKJKPS_Mg" name="Contains numbers">
              <taggedValue xmi:id="__seTcTgOEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="__seTcjgOEeiv1bKJKPS_Mg" tag="Description" value="This pattern will match any value that contains numeric characters. For example 'DQE123' will match the pattern. "/>
              <taggedValue xmi:id="__seTczgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check whether the field contains numbers"/>
              <taggedValue xmi:id="__seTdDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__seTdTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__seTdjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__seTdzgOEeiv1bKJKPS_Mg" body="'[[:digit:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__seTeDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__seTeTgOEeiv1bKJKPS_Mg" body="'\d'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICobzgOEeiv1bKJKPS_Mg" name="FR SSN">
        <parameters xmi:id="_9ICocDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICocTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/FR_SSN_0.1.pattern#_OuO-UPbPEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="__tXEQDgOEeiv1bKJKPS_Mg" name="FR SSN">
              <taggedValue xmi:id="__tXEQTgOEeiv1bKJKPS_Mg" tag="Author" value="S Correia"/>
              <taggedValue xmi:id="__tXEQjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches  &#x9;&#xA;181049520156962 | 1 81 04 95 201 569 62 | 1 81 04 95 201 569&#xA;Non-Matches &#x9;&#xA;1 81049520156962 | 181049520156962fds | 1810495201569ds"/>
              <taggedValue xmi:id="__tXEQzgOEeiv1bKJKPS_Mg" tag="Purpose" value="French Social Security Number"/>
              <taggedValue xmi:id="__tXERDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__tXERTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__tXERjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__tXERzgOEeiv1bKJKPS_Mg" body="'^[12][0-9]{2}(0[1-9]|1[0-2])(2[AB]|[0-9]{2})[0-9]{6}([0-9]{2})?$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICocjgOEeiv1bKJKPS_Mg" name="GPS Coordinate">
        <parameters xmi:id="_9ICoczgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICodDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/GPS_Coordinate_0.1.pattern#_Xaq7AECwEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__uQcIDgOEeiv1bKJKPS_Mg" name="GPS Coordinate">
              <taggedValue xmi:id="__uQcITgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__uQcIjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__uQcIzgOEeiv1bKJKPS_Mg" tag="Purpose" value="40.7127837,-74.00594130000002"/>
              <taggedValue xmi:id="__uQcJDgOEeiv1bKJKPS_Mg" tag="Description" value="Google Maps style GPS Decimal format"/>
              <taggedValue xmi:id="__uQcJTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__uQcJjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__uQcJzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__uQcKDgOEeiv1bKJKPS_Mg" body="'^([0-9]{1,3}[\\.][0-9]*)[, ]+-?([0-9]{1,3}[\\.][0-9]*)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICodTgOEeiv1bKJKPS_Mg" name="ISBN Checker">
        <parameters xmi:id="_9ICodjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICodzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_Checker_0.1.pattern#_WGxL4IydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__vOsgDgOEeiv1bKJKPS_Mg" name="ISBN Checker">
              <taggedValue xmi:id="__vOsgTgOEeiv1bKJKPS_Mg" tag="Author" value="Alex Richards"/>
              <taggedValue xmi:id="__vOsgjgOEeiv1bKJKPS_Mg" tag="Description" value="Expression to check for a valid ISBN number"/>
              <taggedValue xmi:id="__vOsgzgOEeiv1bKJKPS_Mg" tag="Purpose" value="ISBN 0-596-00681-0   Anything that's not in the above format"/>
              <taggedValue xmi:id="__vOshDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__vOshTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__vOshjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__vOshzgOEeiv1bKJKPS_Mg" body="'^[ISBN]{4}[ ]{0,1}[0-9]{1}[-]{1}[0-9]{3}[-]{1}[0-9]{5}[-]{1}[0-9]{0,1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoeDgOEeiv1bKJKPS_Mg" name="International Passport">
        <parameters xmi:id="_9ICoeTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoejgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/International_Passport_0.1.pattern#_PRL0IIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__wJ5kDgOEeiv1bKJKPS_Mg" name="International Passport">
              <taggedValue xmi:id="__wJ5kTgOEeiv1bKJKPS_Mg" tag="Author" value="Pradeep Dhiman"/>
              <taggedValue xmi:id="__wJ5kjgOEeiv1bKJKPS_Mg" tag="Description" value="? 9 characters made up of a combination of numbers and/or letters. Where less than 9 characters it will be padded out to the right with chevrons (&lt;).&#xA;? 1 number&#xA;? 3 letters&#xA;? 7 numbers&#xA;? 1 letter&#xA;? 7 numbers&#xA;? An international passport will have up to 14 characters in this field (numbers and/or letters). If none exist or where less than 14 characters exist, the field will be padded out, but only to the right, with chevrons (&lt;). You should input the data exactly as it is shown on the actual passport field, i.e. input all chevrons to the left of the characters and do not ignore or leave these as blank spaces. Where less than 14 characters, the field will be padded out to the right with chevrons (&lt;), i.e. Z1234567&lt;&lt;&lt;&lt;&lt;&#xA;? 1 number&#xA;? 1 number"/>
              <taggedValue xmi:id="__wJ5kzgOEeiv1bKJKPS_Mg" tag="Purpose" value="1234567890ABC1234567A1234567&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;12 ||| 0123456781USD5656564M0812120AS34560&lt;&lt;&lt;&lt;&lt;&lt;&lt;36 ||| G0308084&lt;&lt;1ITY9999999Q0410056&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;39ASDFER123AQWE!&quot;%^&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;12 ||| QASASW3&lt;&lt;1WER3as12232&lt;&lt;AS ||| ABCDEF123AQQQ123456789A1&lt;&lt;&lt;&lt;&lt;AS14"/>
              <taggedValue xmi:id="__wJ5lDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__wJ5lTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__wJ5ljgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__wJ5lzgOEeiv1bKJKPS_Mg" body="'^[A-Z0-9&lt;]{9}[0-9]{1}[A-Z]{3}[0-9]{7}[A-Z]{1}[0-9]{7}[A-Z0-9&lt;]{14}[0-9]{2}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoezgOEeiv1bKJKPS_Mg" name="Istat Code">
        <parameters xmi:id="_9ICofDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICofTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Istat_Code_0.1.pattern#_ZYFdkIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__xUXMDgOEeiv1bKJKPS_Mg" name="Istat Code">
              <taggedValue xmi:id="__xUXMTgOEeiv1bKJKPS_Mg" tag="Author" value="Alessandro Forte"/>
              <taggedValue xmi:id="__xUXMjgOEeiv1bKJKPS_Mg" tag="Description" value="This pattern match the Italian Istat Ateco Code (Codice Istat) updated to Istat Declaration Ateco 2004"/>
              <taggedValue xmi:id="__xUXMzgOEeiv1bKJKPS_Mg" tag="Purpose" value="22.12.0|18.24.C||22.12_D|12.56| 1A.56.1"/>
              <taggedValue xmi:id="__xUXNDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__xUXNTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__xUXNjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__xUXNzgOEeiv1bKJKPS_Mg" body="'[0-9]{2}[.]{1}[0-9]{2}[.]{1}[0-9A-Za-z]{1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICofjgOEeiv1bKJKPS_Mg" name="Longitude Validation">
        <parameters xmi:id="_9ICofzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICogDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Longitude_Validation_0.1.pattern#_CwBEgIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__yUcwDgOEeiv1bKJKPS_Mg" name="Longitude Validation">
              <taggedValue xmi:id="__yUcwTgOEeiv1bKJKPS_Mg" tag="Author" value="Jason Rutberg"/>
              <taggedValue xmi:id="__yUcwjgOEeiv1bKJKPS_Mg" tag="Description" value="Longitude validation (similiar to Latitude Validation) and inspired by the same code"/>
              <taggedValue xmi:id="__yUcwzgOEeiv1bKJKPS_Mg" tag="Purpose" value="180.0, -180.0, 98.092391181, 180, -98.0923913"/>
              <taggedValue xmi:id="__yUcxDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__yUcxTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__yUcxjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__yUcxzgOEeiv1bKJKPS_Mg" body="'^-?([1]?[1-7][1-9]|[1]?[1-8][0]|[1-9]?[0-9])\.{1}[0-9]{1,6}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICogTgOEeiv1bKJKPS_Mg" name="Master Card Number">
        <parameters xmi:id="_9ICogjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICogzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Master_Card_Number_0.1.pattern#_6YWv4D16Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="__zQQ4DgOEeiv1bKJKPS_Mg" name="Master Card Number">
              <taggedValue xmi:id="__zQQ4TgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Master card numbers"/>
              <taggedValue xmi:id="__zQQ4jgOEeiv1bKJKPS_Mg" tag="Description" value="All MasterCard numbers start with the numbers 51 through 55. All have 16 digits."/>
              <taggedValue xmi:id="__zQQ4zgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__zQQ5DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__zQQ5TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__zQQ5jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__zQQ5zgOEeiv1bKJKPS_Mg" body="'^5[1-5][0-9]{14}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICohDgOEeiv1bKJKPS_Mg" name="Non Zero 1st Digit">
        <parameters xmi:id="_9ICohTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICohjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Non_Zero_1st_Digit_0.1.pattern#_D7IDEAulEeKxJpyXB0egyQ"/>
            <builtInPatterns xmi:id="__0JBsDgOEeiv1bKJKPS_Mg" name="Non Zero 1st Digit">
              <taggedValue xmi:id="__0JBsTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the first digit is a non zero digit"/>
              <taggedValue xmi:id="__0JBsjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches signed or unsigned numerics starting with 1 to 9 digits.&#xA;Values like '0999' will not match."/>
              <taggedValue xmi:id="__0JBszgOEeiv1bKJKPS_Mg" tag="Author" value="s@t.c"/>
              <taggedValue xmi:id="__0JBtDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__0JBtTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__0JBtjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__0JBtzgOEeiv1bKJKPS_Mg" body="'^[-+]?[1-9]'" language="SQL" modificationDate="2012-10-01 10:52:07"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICohzgOEeiv1bKJKPS_Mg" name="Numeric">
        <parameters xmi:id="_9ICoiDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoiTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Numeric_0.1.pattern#_OAAOQD1iEd2irYhnXOOajA"/>
            <builtInPatterns xmi:id="__1E10DgOEeiv1bKJKPS_Mg" name="Numeric">
              <taggedValue xmi:id="__1E10TgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the numeric format"/>
              <taggedValue xmi:id="__1E10jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches all numbers"/>
              <taggedValue xmi:id="__1E10zgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__1E11DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__1E11TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__1E11jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__1E11zgOEeiv1bKJKPS_Mg" body="'^[[:digit:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__1E12DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__1E12TgOEeiv1bKJKPS_Mg" body="'^\d*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoijgOEeiv1bKJKPS_Mg" name="UK SSN">
        <parameters xmi:id="_9ICoizgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICojDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_SSN_0.1.pattern#_C2aDMECkEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="__1-NsDgOEeiv1bKJKPS_Mg" name="UK SSN">
              <taggedValue xmi:id="__1-NsTgOEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="__1-NsjgOEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="__1-NszgOEeiv1bKJKPS_Mg" tag="Purpose" value="AB123456C | AB 12 34 56 C"/>
              <taggedValue xmi:id="__1-NtDgOEeiv1bKJKPS_Mg" tag="Description" value="National identification number, national identity number, or national insurance number generally called an NI Number (NINO)"/>
              <taggedValue xmi:id="__1-NtTgOEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="__1-NtjgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__1-NtzgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__1-NuDgOEeiv1bKJKPS_Mg" body="'^[A-CEGHJ-PR-TW-Z]{1}[A-CEGHJ-NPR-TW-Z]{1}([0-9]{6}|( [0-9]{2}){3} )[A-DFM]{0,1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICojTgOEeiv1bKJKPS_Mg" name="UK Vehicle Registration Plate Number Plate">
        <parameters xmi:id="_9ICojjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICojzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_Vehicle_Registration_Plate_Number_Plate_0.1.pattern#_8U2icIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__25awDgOEeiv1bKJKPS_Mg" name="UK Vehicle Registration Plate Number Plate">
              <taggedValue xmi:id="__25awTgOEeiv1bKJKPS_Mg" tag="Author" value="Stephen S"/>
              <taggedValue xmi:id="__25awjgOEeiv1bKJKPS_Mg" tag="Description" value="UK Vehicle Registration Plate / Number Plate format as specified by the DVLA. Accepts both &quot;Prefix&quot; and &quot;New&quot; style. Allows only valid DVLA number combinations as not all are supported. Registration number must be exactly as is displayed on car, hence all letters must be in uppercase and a space seperating the two sets of characters."/>
              <taggedValue xmi:id="__25awzgOEeiv1bKJKPS_Mg" tag="Purpose" value="AB12 RCY|||CD07 TES|||S33 GTT|||Y999 FVBab12 rcy|||CD07 TIS|||S34 GTT|||Z999 FVB"/>
              <taggedValue xmi:id="__25axDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__25axTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__25axjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__25axzgOEeiv1bKJKPS_Mg" body="'([A-HJ-PR-Y]{2}([0][1-9]|[1-9][0-9])|[A-HJ-PR-Y]{1}([1-9]|[1-2][0-9]|30|31|33|40|44|55|50|60|66|70|77|80|88|90|99|111|121|123|222|321|333|444|555|666|777|888|999|100|200|300|400|500|600|700|800|900))[ ][A-HJ-PR-Z]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICokDgOEeiv1bKJKPS_Mg" name="US SSN">
        <parameters xmi:id="_9ICokTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICokjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/US_SSN_0.1.pattern#_BpSRwD15Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="__36HYDgOEeiv1bKJKPS_Mg" name="US SSN">
              <taggedValue xmi:id="__36HYTgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of US Social Security Numbers"/>
              <taggedValue xmi:id="__36HYjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches a (hyphen-separated or not) Social Security Number (SSN). Ex.:  123-45-6789 or 123456789."/>
              <taggedValue xmi:id="__36HYzgOEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="__36HZDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__36HZTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__36HZjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__36HZzgOEeiv1bKJKPS_Mg" body="'^([[:digit:]]{3}[ -][[:digit:]]{2}[ -][[:digit:]]{4}|[[:digit:]]{9})$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__36HaDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__36HaTgOEeiv1bKJKPS_Mg" body="'^[\d]{3}[-][\d]{2}[-][\d]{4}|[\d]{9}$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICokzgOEeiv1bKJKPS_Mg" name="FR Phone Number">
        <parameters xmi:id="_9IColDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IColTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number_0.1.pattern#_SPiUIPbKEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="__417gDgOEeiv1bKJKPS_Mg" name="FR Phone Number">
              <taggedValue xmi:id="__417gTgOEeiv1bKJKPS_Mg" tag="Author" value="S. Correia"/>
              <taggedValue xmi:id="__417gjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches French phone numbers starting with 01, 02, 03, 04, 05, 06, 08 09 (e.g. 01-23-45-67-83 or 01.23.45.67.83 or 0123456783"/>
              <taggedValue xmi:id="__417gzgOEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of FR phone numbers"/>
              <taggedValue xmi:id="__417hDgOEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="__417hTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__417hjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__417hzgOEeiv1bKJKPS_Mg" body="'^0[1-689]([-. ]?[0-9]{2}){4}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IColjgOEeiv1bKJKPS_Mg" name="FR Phone Number (Local or International )">
        <parameters xmi:id="_9IColzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IComDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number__Local_or_International___0.1.pattern#_DqoD4IyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__5xIkDgOEeiv1bKJKPS_Mg" name="FR Phone Number (Local or International )">
              <taggedValue xmi:id="__5xIkTgOEeiv1bKJKPS_Mg" tag="Author" value="Amine Mohamed Hallam"/>
              <taggedValue xmi:id="__5xIkjgOEeiv1bKJKPS_Mg" tag="Description" value="check 02-31-23-45-67 or 0033231234567"/>
              <taggedValue xmi:id="__5xIkzgOEeiv1bKJKPS_Mg" tag="Purpose" value="check any french phone number"/>
              <taggedValue xmi:id="__5xIlDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__5xIlTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__5xIljgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__5xIlzgOEeiv1bKJKPS_Mg" body="'^(0033|\\+33|0)[1-689]([-. ]?[0-9]{2}){4}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IComTgOEeiv1bKJKPS_Mg" name="International phone number">
        <parameters xmi:id="_9IComjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IComzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/International_phone_number_0.1.pattern#_Is95MIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__6qgcDgOEeiv1bKJKPS_Mg" name="International phone number">
              <taggedValue xmi:id="__6qgcTgOEeiv1bKJKPS_Mg" tag="Author" value="Amine Mohamed Hallam"/>
              <taggedValue xmi:id="__6qgcjgOEeiv1bKJKPS_Mg" tag="Description" value="Matches most  international formated phonenumber."/>
              <taggedValue xmi:id="__6qgczgOEeiv1bKJKPS_Mg" tag="Purpose" value="0033611607946 |||+213 48557627|||050/123456"/>
              <taggedValue xmi:id="__6qgdDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__6qgdTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__6qgdjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__6qgdzgOEeiv1bKJKPS_Mg" body="'^\\+[0-9]{1,3}\.[0-9]+\.[0-9]+$'" language="MySQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__6qgeDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__6qgeTgOEeiv1bKJKPS_Mg" body="'^\+[0-9]{1,3}\.[0-9]+\.[0-9]+$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IConDgOEeiv1bKJKPS_Mg" name="Mobile number of India">
        <parameters xmi:id="_9IConTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IConjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Mobile_number_of_India_0.1.pattern#__RSB4IycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__7mUkDgOEeiv1bKJKPS_Mg" name="Mobile number of India">
              <taggedValue xmi:id="__7mUkTgOEeiv1bKJKPS_Mg" tag="Author" value="Nandip Makwana"/>
              <taggedValue xmi:id="__7mUkjgOEeiv1bKJKPS_Mg" tag="Description" value="This expression will be useful to check mobile &#xD;&#xA;number of India. This expression will check &#xD;&#xA;various types of number like number in local &#xD;&#xA;format or international number separated by &#xD;&#xA;hyphen(-) or not."/>
              <taggedValue xmi:id="__7mUkzgOEeiv1bKJKPS_Mg" tag="Purpose" value="+919123456789 ||| +91-9123456789 ||| 919123456789 ||| 09123456789 ||| 91234567898123456789 ||| +91-912345678 ||| +9191234567890"/>
              <taggedValue xmi:id="__7mUlDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__7mUlTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__7mUljgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__7mUlzgOEeiv1bKJKPS_Mg" body="'(\\+91(-)?|91(-)?|0(-)?)?(9)[0-9]{9}'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IConzgOEeiv1bKJKPS_Mg" name="Phone Brazil">
        <parameters xmi:id="_9ICooDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICooTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Brazil_0.1.pattern#_mRzFgIycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__8j94DgOEeiv1bKJKPS_Mg" name="Phone Brazil">
              <taggedValue xmi:id="__8j94TgOEeiv1bKJKPS_Mg" tag="Author" value="Cleiton Francisco"/>
              <taggedValue xmi:id="__8j94jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches Brazilian phone numbers, includes DDD (long-distance call) with or without 0. Accepts characters -, . and [space] as separators."/>
              <taggedValue xmi:id="__8j94zgOEeiv1bKJKPS_Mg" tag="Purpose" value="011 5555-1234|||(011) 5555 1234|||(11) 5555.1234|||1155551234(011 5555-1234|||(01) 5555 1234|||(11) 0555.1234|||(11) 5555 abcd"/>
              <taggedValue xmi:id="__8j95DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__8j95TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__8j95jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__8j95zgOEeiv1bKJKPS_Mg" body="'^((\(0?[1-9][0-9]\))|(0?[1-9][0-9]))[ -.]?([1-9][0-9]{3})[ -.]?([0-9]{4})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoojgOEeiv1bKJKPS_Mg" name="Phone Number">
        <parameters xmi:id="_9ICoozgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICopDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Number_0.1.pattern#_S7m6oIyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="__9fyADgOEeiv1bKJKPS_Mg" name="Phone Number">
              <taggedValue xmi:id="__9fyATgOEeiv1bKJKPS_Mg" tag="Author" value="Tim N Tousley"/>
              <taggedValue xmi:id="__9fyAjgOEeiv1bKJKPS_Mg" tag="Description" value="Very flexible phone number entry. -- There are many valid ways to enter a phone number, and often there is other data that a restrictive Regex pattern will not abide. -- This pattern accepts any number of letters, commas, pound signs, slashes, spaces, periods, parenthesis, hyphens, plus signs, and asterisks... but amongst it scans for a minimum of 7 digits (modify {7} to adjust the minimum number of required digits (i.e. 10 for area code + phone number, 18 for long international numbers). -- This pattern does not attempt to restrict the entered phone number format in any way, but instead just verfies that enough digits for one was entered. -- Data in excess of the 7 required digits is allowed. -- I've posted another submission that forces compliance for US phone numbers."/>
              <taggedValue xmi:id="__9fyAzgOEeiv1bKJKPS_Mg" tag="Purpose" value="1234567 ||| 12345678 ||| (555) 987-6543 ext 210 ||| 999-666-7777-x1967123456 ||| 555-123"/>
              <taggedValue xmi:id="__9fyBDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__9fyBTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__9fyBjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__9fyBzgOEeiv1bKJKPS_Mg" body="'^([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){7}[0-9a-zA-Z,#/ \.\(\)\-\+\*]*$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICopTgOEeiv1bKJKPS_Mg" name="Blank text">
        <parameters xmi:id="_9ICopjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICopzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Blank_text_0.1.pattern#_N7yi0Gk3Ed2I1bT57-sHUw"/>
            <builtInPatterns xmi:id="__-sE0DgOEeiv1bKJKPS_Mg" name="Blank text">
              <taggedValue xmi:id="__-sE0TgOEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="__-sE0jgOEeiv1bKJKPS_Mg" tag="Description" value="Matches text with only white spaces"/>
              <taggedValue xmi:id="__-sE0zgOEeiv1bKJKPS_Mg" tag="Purpose" value="Search for blank text"/>
              <taggedValue xmi:id="__-sE1DgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="__-sE1TgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__-sE1jgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__-sE1zgOEeiv1bKJKPS_Mg" body="'^[[:blank:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="__-sE2DgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="__-sE2TgOEeiv1bKJKPS_Mg" body="'^\s*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoqDgOEeiv1bKJKPS_Mg" name="Empty text">
        <parameters xmi:id="_9ICoqTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoqjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Empty_text_0.1.pattern#_vZ6_IGk6Ed2I1bT57-sHUw"/>
            <builtInPatterns xmi:id="___puIDgOEeiv1bKJKPS_Mg" name="Empty text">
              <taggedValue xmi:id="___puITgOEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="___puIjgOEeiv1bKJKPS_Mg" tag="Description" value="Will matches values with only whitespaces or tabulation character. Regexp class: [:space:]"/>
              <taggedValue xmi:id="___puIzgOEeiv1bKJKPS_Mg" tag="Purpose" value="Identify values with only space characters"/>
              <taggedValue xmi:id="___puJDgOEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="___puJTgOEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="___puJjgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="___puJzgOEeiv1bKJKPS_Mg" body="'^[[:space:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="___puKDgOEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="___puKTgOEeiv1bKJKPS_Mg" body="'^[\n|\t|\v|\f]*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoqzgOEeiv1bKJKPS_Mg" name="Home Row Text">
        <parameters xmi:id="_9ICorDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICorTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Home_Row_Text_0.1.pattern#_e4vUoYyZEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AAn-gDgPEeiv1bKJKPS_Mg" name="Home Row Text">
              <taggedValue xmi:id="_AAn-gTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_AAn-gjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with random sequences at least 3 consonants such as &quot;smqljfmj&quot;"/>
              <taggedValue xmi:id="_AAn-gzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search random sequences with keys from the home row"/>
              <taggedValue xmi:id="_AAn-hDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AAn-hTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AAn-hjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AAn-hzgPEeiv1bKJKPS_Mg" body="'[qsdfghjklmQSDFGHJKLM]{3,}'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICorjgOEeiv1bKJKPS_Mg" name="Linux Path Verify">
        <parameters xmi:id="_9ICorzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICosDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Linux_Path_Verify_0.1.pattern#_IqpTEIyfEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_ABmO4DgPEeiv1bKJKPS_Mg" name="Linux Path Verify">
              <taggedValue xmi:id="_ABmO4TgPEeiv1bKJKPS_Mg" tag="Author" value="Brandon Vasquez"/>
              <taggedValue xmi:id="_ABmO4jgPEeiv1bKJKPS_Mg" tag="Description" value="This expressions was written for C#. Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also  will only match files that have extensions consisting of 2, 3, or 4 characters. Currently fails with _ . or - in the path, this will be updated at some point."/>
              <taggedValue xmi:id="_ABmO4zgPEeiv1bKJKPS_Mg" tag="Purpose" value="/mnt/share/|||/home/.BASH|||/mnt/share/pic.jpeg|||/mnt/share/install.shmnt/share|||//mnt///share//|||/mnt/share/install.installer|||/home\user"/>
              <taggedValue xmi:id="_ABmO5DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_ABmO5TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_ABmO5jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_ABmO5zgPEeiv1bKJKPS_Mg" body="'^/{1}(((/{1}\.{1})?[a-zA-Z0-9 ]+/?)+(\.{1}[a-zA-Z0-9]{2,4})?)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICosTgOEeiv1bKJKPS_Mg" name="No special chart">
        <parameters xmi:id="_9ICosjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICoszgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/No_special_chart_0.1.pattern#_6rm3QIycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AChb8DgPEeiv1bKJKPS_Mg" name="No special chart">
              <taggedValue xmi:id="_AChb8TgPEeiv1bKJKPS_Mg" tag="Author" value="Mohammed Rafiq .M"/>
              <taggedValue xmi:id="_AChb8jgPEeiv1bKJKPS_Mg" tag="Description" value="Allow only 3 charcters or number without any special characters"/>
              <taggedValue xmi:id="_AChb8zgPEeiv1bKJKPS_Mg" tag="Purpose" value="QDE|||QDE#RF"/>
              <taggedValue xmi:id="_AChb9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AChb9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AChb9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AChb9zgPEeiv1bKJKPS_Mg" body="'^[A-Za-z0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICotDgOEeiv1bKJKPS_Mg" name="Random sequence of text">
        <parameters xmi:id="_9ICotTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICotjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Random_sequence_of_text_0.1.pattern#_gDqDcP9eEd2mwaQf90ozSg"/>
            <builtInPatterns xmi:id="_ADdQEDgPEeiv1bKJKPS_Mg" name="Random sequence of text">
              <taggedValue xmi:id="_ADdQETgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_ADdQEjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with random sequences at least 4 consonants such as &quot;smqljfmj&quot;"/>
              <taggedValue xmi:id="_ADdQEzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search random sequences"/>
              <taggedValue xmi:id="_ADdQFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_ADdQFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_ADdQFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_ADdQFzgPEeiv1bKJKPS_Mg" body="'[zrtypqsdfghjklmwxcvbnZRTYPQSDFGHJKLMWXCVBN]{4,}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICotzgOEeiv1bKJKPS_Mg" name="Starts with blank">
        <parameters xmi:id="_9ICouDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICouTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_blank_0.1.pattern#_18GtIIyaEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AEZEMDgPEeiv1bKJKPS_Mg" name="Starts with blank">
              <taggedValue xmi:id="_AEZEMTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_AEZEMjgPEeiv1bKJKPS_Mg" tag="Description" value="matches: '  aa'&#xA;does not match: 'aa'"/>
              <taggedValue xmi:id="_AEZEMzgPEeiv1bKJKPS_Mg" tag="Purpose" value="detect data starting with blank characters"/>
              <taggedValue xmi:id="_AEZENDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AEZENTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AEZENjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AEZENzgPEeiv1bKJKPS_Mg" body="'^[[:blank:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AEZEODgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AEZEOTgPEeiv1bKJKPS_Mg" body="'^\s+.*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICoujgOEeiv1bKJKPS_Mg" name="Starts with space">
        <parameters xmi:id="_9ICouzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICovDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_space_0.1.pattern#_scYqYIyaEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AFWtgDgPEeiv1bKJKPS_Mg" name="Starts with space">
              <taggedValue xmi:id="_AFWtgTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_AFWtgjgPEeiv1bKJKPS_Mg" tag="Description" value="matches: '&#x9;sklqjf', ' dqd'&#xA;non-matches: 'dsm:kljf'"/>
              <taggedValue xmi:id="_AFWtgzgPEeiv1bKJKPS_Mg" tag="Purpose" value="detect whitespace at the begining of a data"/>
              <taggedValue xmi:id="_AFWthDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AFWthTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AFWthjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AFWthzgPEeiv1bKJKPS_Mg" body="'^[[:space:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AFWtiDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AFWtiTgPEeiv1bKJKPS_Mg" body="'^[\n|\t|\v|\f]+[^(\n|\t|\v|\f)]*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICovTgOEeiv1bKJKPS_Mg" name="Starts with uppercase">
        <parameters xmi:id="_9ICovjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICovzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_uppercase_0.1.pattern#_53rX8AMvEeKk6OZDw5mXOQ"/>
            <builtInPatterns xmi:id="_AGU94DgPEeiv1bKJKPS_Mg" name="Starts with uppercase">
              <taggedValue xmi:id="_AGU94TgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia@talend.com"/>
              <taggedValue xmi:id="_AGU94jgPEeiv1bKJKPS_Mg" tag="Description" value="Will match when the first character of a text is an uppercase letter. For example, &quot;Axel&quot;, &quot;Street&quot; will match.&#xA;But &quot;31&quot;, &quot;john doe&quot;, &quot;3RD FLOOR&quot;, &quot;street&quot; will not match."/>
              <taggedValue xmi:id="_AGU94zgPEeiv1bKJKPS_Mg" tag="Purpose" value="identify words in uppercase"/>
              <taggedValue xmi:id="_AGU95DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AGU95TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AGU95jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AGU95zgPEeiv1bKJKPS_Mg" body="'^[A-Z]+'" language="SQL" modificationDate="2012-09-20 16:31:53"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICowDgOEeiv1bKJKPS_Mg" name="Uppercased Single Word">
        <parameters xmi:id="_9ICowTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICowjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Uppercased_Single_Word_0.1.pattern#_FyTwIHnTEd2weu9skTiCqA"/>
            <builtInPatterns xmi:id="_AHQK8DgPEeiv1bKJKPS_Mg" name="Uppercased Single Word">
              <taggedValue xmi:id="_AHQK8TgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_AHQK8jgPEeiv1bKJKPS_Mg" tag="Description" value="Will match when all characters of a word are uppercased. For example, &quot;AXEL&quot;, &quot;STREET&quot; will match.&#xA;But &quot;31&quot;, &quot;JOHN DOE&quot;, &quot;3RD FLOOR&quot;, &quot;street&quot; will not match."/>
              <taggedValue xmi:id="_AHQK8zgPEeiv1bKJKPS_Mg" tag="Purpose" value="identify words in uppercase"/>
              <taggedValue xmi:id="_AHQK9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AHQK9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AHQK9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AHQK9zgPEeiv1bKJKPS_Mg" body="'^[A-Z]*$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll7jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_9ICowzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoxDgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWcjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AHjs8DgPEeiv1bKJKPS_Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_AHjs8TgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_AHjs8jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_AHjs8zgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_9ICoxTgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoxjgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61sDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE &quot;FIRSTNM&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AH2n4DgPEeiv1bKJKPS_Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_AH2n4TgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_AH2n4jgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_AH2n4zgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_9ICoxzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoyDgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61sTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;FIRSTNM&quot; FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AIJi0DgPEeiv1bKJKPS_Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_AIJi0TgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_AIJi0jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_AIJi0zgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_9ICoyTgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICoyjgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61sjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &quot;FIRSTNM&quot;, COUNT(*) mycount FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  GROUP BY &quot;FIRSTNM&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AIcdwDgPEeiv1bKJKPS_Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_AIcdwTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_AIcdwjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_AIcdwzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_AIcdxDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AIcdxTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AIcdxjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AIcdxzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AIcdyDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_AIcdyTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_9ICoyzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICozDgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61szgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &quot;FIRSTNM&quot;, COUNT(*) mycount FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  m  GROUP BY &quot;FIRSTNM&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AIv_wDgPEeiv1bKJKPS_Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_AIv_wTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_AIv_wjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_AIv_wzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_AIv_xDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AIv_xTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AIv_xjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AIv_xzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AIv_yDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_AIv_yTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_9ICozTgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICozjgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61tDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&quot;FIRSTNM&quot;) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  WHERE LTRIM(RTRIM(&quot;FIRSTNM&quot;)) = '' " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AJC6sDgPEeiv1bKJKPS_Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_AJC6sTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_AJC6sjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_AJC6szgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_AJC6tDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AJC6tTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_AJC6tjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AJC6tzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:TextIndicator" xmi:id="_9ICozzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICo0DgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Text_Statistics_0.1.definition#_yb9x0zh8Ed2XmO7pl5Yuyg"/>
        <averageLengthIndicator xmi:id="_9ICo0TgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo0jgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo0zgOEeiv1bKJKPS_Mg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61tTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(&quot;FIRSTNM&quot;)), COUNT(&quot;FIRSTNM&quot;) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;FIRSTNM&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;FIRSTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AJYR4DgPEeiv1bKJKPS_Mg" name="Average Length" label="Average Length">
            <taggedValue xmi:id="_AJYR4TgPEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average."/>
            <taggedValue xmi:id="_AJYR4jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_AJYR4zgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AJYR5DgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AJYR5TgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AJYR5jgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AJYR5zgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AJYR6DgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AJYR6TgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AJYR6jgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AJYR6zgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AJYR7DgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AJYR7TgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AJYR7jgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </averageLengthIndicator>
        <maxLengthIndicator xmi:id="_9ICo1DgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo1TgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo1jgOEeiv1bKJKPS_Mg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61tjgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&quot;FIRSTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;FIRSTNM&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;FIRSTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AJrM0DgPEeiv1bKJKPS_Mg" name="Maximal Length" label="Maximal Length">
            <taggedValue xmi:id="_AJrM0TgPEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field."/>
            <taggedValue xmi:id="_AJrM0jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_AJrM0zgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AJrM1DgPEeiv1bKJKPS_Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
            <sqlGenericExpression xmi:id="_AJrM1TgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AJrM1jgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AJrM1zgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AJrM2DgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AJrM2TgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
            <sqlGenericExpression xmi:id="_AJrM2jgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AJrM2zgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AJrM3DgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AJrM3TgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AJrM3jgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthIndicator>
        <minLengthIndicator xmi:id="_9ICo1zgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo2DgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo2TgOEeiv1bKJKPS_Mg" useBlank="false"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61tzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&quot;FIRSTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;FIRSTNM&quot; IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;FIRSTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AJ8SkDgPEeiv1bKJKPS_Mg" name="Minimal Length" label="Minimal Length">
            <taggedValue xmi:id="_AJ8SkTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
            <taggedValue xmi:id="_AJ8SkjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_AJ8SkzgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AJ8SlDgPEeiv1bKJKPS_Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AJ8SlTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AJ8SljgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AJ8SlzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AJ8SmDgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AJ8SmTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AJ8SmjgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AJ8SmzgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AJ8SnDgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AJ8SnTgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AJ8SnjgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthIndicator>
        <minLengthWithBlankIndicator xmi:id="_9ICo2jgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo2zgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo3DgOEeiv1bKJKPS_Mg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61vjgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&quot;FIRSTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;FIRSTNM&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AMsroDgPEeiv1bKJKPS_Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
            <taggedValue xmi:id="_AMsroTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field, counting blank as zero length values."/>
            <taggedValue xmi:id="_AMsrojgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_AMsrozgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AMsrpDgPEeiv1bKJKPS_Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AMsrpTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AMsrpjgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AMsrpzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AMsrqDgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AMsrqTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AMsrqjgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AMsrqzgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AMsrrDgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AMsrrTgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankIndicator>
        <minLengthWithNullIndicator xmi:id="_9ICo3TgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo3jgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo3zgOEeiv1bKJKPS_Mg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61vzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;FIRSTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AQC6kDgPEeiv1bKJKPS_Mg" name="Minimal Length With Null" label="Minimal Length With Null">
            <taggedValue xmi:id="_AQC6kTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field, counting null as zero length values."/>
            <taggedValue xmi:id="_AQC6kjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_AQC6kzgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AQC6lDgPEeiv1bKJKPS_Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AQC6lTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AQC6ljgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AQC6lzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AQC6mDgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AQC6mTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AQC6mjgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AQC6mzgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AQC6nDgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AQC6nTgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AQC6njgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithNullIndicator>
        <minLengthWithBlankNullIndicator xmi:id="_9ICo4DgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo4TgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo4jgOEeiv1bKJKPS_Mg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61wDgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AS9EoDgPEeiv1bKJKPS_Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
            <taggedValue xmi:id="_AS9EoTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the minimal length of a text field, counting blank and null as zero length values."/>
            <taggedValue xmi:id="_AS9EojgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
            <sqlGenericExpression xmi:id="_AS9EozgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AS9EpDgPEeiv1bKJKPS_Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AS9EpTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AS9EpjgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AS9EpzgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AS9EqDgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AS9EqTgPEeiv1bKJKPS_Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AS9EqjgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AS9EqzgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AS9ErDgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AS9ErTgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AS9ErjgPEeiv1bKJKPS_Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </minLengthWithBlankNullIndicator>
        <maxLengthWithBlankIndicator xmi:id="_9ICo4zgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo5DgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo5TgOEeiv1bKJKPS_Mg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61uzgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&quot;FIRSTNM&quot;)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;FIRSTNM&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_ALULkDgPEeiv1bKJKPS_Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
            <taggedValue xmi:id="_ALULkTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field, counting blank data  as zero length values."/>
            <taggedValue xmi:id="_ALULkjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_ALULkzgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_ALULlDgPEeiv1bKJKPS_Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_ALULlTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_ALULljgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_ALULlzgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_ALULmDgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_ALULmTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_ALULmjgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_ALULmzgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_ALULnDgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_ALULnTgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankIndicator>
        <maxLengthWithNullIndicator xmi:id="_9ICo5jgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo5zgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo6DgOEeiv1bKJKPS_Mg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61vDgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;FIRSTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_ALpiwDgPEeiv1bKJKPS_Mg" name="Maximal Length With Null" label="Maximal Length With Null">
            <taggedValue xmi:id="_ALpiwTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field, counting null data as zero length values."/>
            <taggedValue xmi:id="_ALpiwjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_ALpiwzgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_ALpixDgPEeiv1bKJKPS_Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_ALpixTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_ALpixjgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_ALpixzgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_ALpiyDgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_ALpiyTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
            <sqlGenericExpression xmi:id="_ALpiyjgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_ALpiyzgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_ALpizDgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_ALpizTgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_ALpizjgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithNullIndicator>
        <maxLengthWithBlankNullIndicator xmi:id="_9ICo6TgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo6jgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo6zgOEeiv1bKJKPS_Mg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61vTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END)) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AMNjcDgPEeiv1bKJKPS_Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
            <taggedValue xmi:id="_AMNjcTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the maximal length of a text field, counting null and blank data as zero length values."/>
            <taggedValue xmi:id="_AMNjcjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
            <sqlGenericExpression xmi:id="_AMNjczgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AMNjdDgPEeiv1bKJKPS_Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AMNjdTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AMNjdjgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AMNjdzgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AMNjeDgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AMNjeTgPEeiv1bKJKPS_Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AMNjejgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AMNjezgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AMNjfDgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AMNjfTgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AMNjfjgPEeiv1bKJKPS_Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </maxLengthWithBlankNullIndicator>
        <avgLengthWithBlankIndicator xmi:id="_9ICo7DgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo7TgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo7jgOEeiv1bKJKPS_Mg"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61uDgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&quot;FIRSTNM&quot;)) )=0  THEN '' ELSE  &quot;FIRSTNM&quot; END)), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (&quot;FIRSTNM&quot; IS NOT NULL ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AKUGADgPEeiv1bKJKPS_Mg" name="Average Length With Blank" label="Average Length With Blank">
            <taggedValue xmi:id="_AKUGATgPEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field, counting blank data as zero length values."/>
            <taggedValue xmi:id="_AKUGAjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_AKUGAzgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AKUGBDgPEeiv1bKJKPS_Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE  LENGTH(&lt;%=__COLUMN_NAMES__%>)END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AKUGBTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AKUGBjgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AKUGBzgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AKUGCDgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AKUGCTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AKUGCjgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AKUGCzgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AKUGDDgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( &lt;%=__COLUMN_NAMES__%> ) ) =0  THEN '' ELSE   &lt;%=__COLUMN_NAMES__%>  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AKUGDTgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM(&lt;%=__COLUMN_NAMES__%>) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankIndicator>
        <avgLengthWithNullIndicator xmi:id="_9ICo7zgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo8DgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo8TgOEeiv1bKJKPS_Mg" useBlank="false" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61uTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END)), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE (LTRIM(RTRIM(CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN 'NULL TALEND' ELSE &quot;FIRSTNM&quot; END)) &lt;> '' ) " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AKr5cDgPEeiv1bKJKPS_Mg" name="Average Length With Null" label="Average Length With Null">
            <taggedValue xmi:id="_AKr5cTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field, counting null data as zero length values."/>
            <taggedValue xmi:id="_AKr5cjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_AKr5czgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AKr5dDgPEeiv1bKJKPS_Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AKr5dTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AKr5djgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AKr5dzgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AKr5eDgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AKr5eTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AKr5ejgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AKr5ezgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AKr5fDgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AKr5fTgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AKr5fjgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithNullIndicator>
        <avgLengthWithBlankNullIndicator xmi:id="_9ICo8jgOEeiv1bKJKPS_Mg">
          <parameters xmi:id="_9ICo8zgOEeiv1bKJKPS_Mg">
            <textParameter xmi:id="_9ICo9DgOEeiv1bKJKPS_Mg" useNulls="true"/>
          </parameters>
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61ujgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END )) )=0  THEN '' ELSE   CASE WHEN &quot;FIRSTNM&quot; IS NULL  THEN '' ELSE &quot;FIRSTNM&quot; END  END)), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_AK-0YDgPEeiv1bKJKPS_Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
            <taggedValue xmi:id="_AK-0YTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the average length of the field, counting blank and null data as zero lenght values."/>
            <taggedValue xmi:id="_AK-0YjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
            <sqlGenericExpression xmi:id="_AK-0YzgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  IFNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_AK-0ZDgPEeiv1bKJKPS_Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NOT NULL AND  TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL THEN 0 ELSE CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END  END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_AK-0ZTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_AK-0ZjgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
            <sqlGenericExpression xmi:id="_AK-0ZzgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
            <sqlGenericExpression xmi:id="_AK-0aDgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
            <sqlGenericExpression xmi:id="_AK-0aTgPEeiv1bKJKPS_Mg" body="SELECT SUM(LENGTH(CASE WHEN   LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
            <sqlGenericExpression xmi:id="_AK-0ajgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_AK-0azgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_AK-0bDgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END ) ) =0  THEN '' ELSE   CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END  END)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
            <sqlGenericExpression xmi:id="_AK-0bTgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END ) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_AK-0bjgPEeiv1bKJKPS_Mg" body="SELECT SUM(CHAR_LENGTH(CASE WHEN   CHAR_LENGTH( TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'')) ) =0  THEN '' ELSE  ISNULL(&lt;%=__COLUMN_NAMES__%>,'') END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          </builtInIndicatorDefinition>
        </avgLengthWithBlankNullIndicator>
      </indicators>
      <indicators xsi:type="dataquality.indicators:ModeIndicator" xmi:id="_9ICo9TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICo9jgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Mode_0.1.definition#_ccIR4RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS61wTgPEeiv1bKJKPS_Mg" body="SELECT TOP 1   &quot;FIRSTNM&quot;, COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; m  GROUP BY &quot;FIRSTNM&quot; ORDER BY COUNT(*) DESC " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AT44wDgPEeiv1bKJKPS_Mg" name="Mode" label="Mode">
          <taggedValue xmi:id="_AT44wTgPEeiv1bKJKPS_Mg" tag="Description" value="computes the mode (most probable value). For numerical data or continuous data, bins can be set in the parameters of this indicator. It is different from the average and from the median. Generalization of it is an histogram. It is good for addressing categorical attributes"/>
          <taggedValue xmi:id="_AT44wjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent value"/>
          <sqlGenericExpression xmi:id="_AT44wzgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="SQL"/>
          <sqlGenericExpression xmi:id="_AT44xDgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="Oracle"/>
          <sqlGenericExpression xmi:id="_AT44xTgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="DB2"/>
          <sqlGenericExpression xmi:id="_AT44xjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AT44xzgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_AT44yDgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC " language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_AT44yTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:FrequencyIndicator" xmi:id="_9ICo9zgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICo-DgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Frequency_Table_0.1.definition#_ccIR4hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R8DgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  &quot;FIRSTNM&quot;, COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY &quot;FIRSTNM&quot; ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AUQsMDgPEeiv1bKJKPS_Mg" name="Frequency Table" label="Frequency Table">
          <taggedValue xmi:id="_AUQsMTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="_AUQsMjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_AUQsMzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_AUQsNDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AUQsNTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AUQsNjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AUQsNzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_AUQsODgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AUQsOTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:LowFrequencyIndicator" xmi:id="_9ICo-TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICo-jgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Low_Frequency_Table_0.1.definition#_-0C00JOtEd2Iyo0dtkB9pA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R8TgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  &quot;FIRSTNM&quot;, COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY &quot;FIRSTNM&quot; ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AUmDYDgPEeiv1bKJKPS_Mg" name="Low Frequency Table" label="Low Frequency Table">
          <taggedValue xmi:id="_AUmDYTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="_AUmDYjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_AUmDYzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_AUmDZDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AUmDZTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AUmDZjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AUmDZzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_AUmDaDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_9ICo-zgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICo_DgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R8jgPEeiv1bKJKPS_Mg" bodyquot;FIRSTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; tquot;FIRSTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AU7akDgPEeiv1bKJKPS_Mg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_AU7akTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_AU7akjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_AU7akzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_AU7alDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AU7alTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AU7aljgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AU7alzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_AU7amDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AU7amTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_AU7amjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_AU7amzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AU7anDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_AU7anTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_AU7anjgPEeiv1bKJKPS_Mg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7anzgPEeiv1bKJKPS_Mg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7aoDgPEeiv1bKJKPS_Mg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7aoTgPEeiv1bKJKPS_Mg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7aojgPEeiv1bKJKPS_Mg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7aozgPEeiv1bKJKPS_Mg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7apDgPEeiv1bKJKPS_Mg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7apTgPEeiv1bKJKPS_Mg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7apjgPEeiv1bKJKPS_Mg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7apzgPEeiv1bKJKPS_Mg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7aqDgPEeiv1bKJKPS_Mg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AU7aqTgPEeiv1bKJKPS_Mg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternLowFreqIndicator" xmi:id="_9ICo_TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICo_jgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Low_Frequency_Table_0.1.definition#_OCTbwJR_Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R8zgPEeiv1bKJKPS_Mg" bodyquot;FIRSTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9'), COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; tquot;FIRSTNM&quot;,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AVVqQDgPEeiv1bKJKPS_Mg" name="Pattern Low Frequency Table" label="Pattern Low Frequency Table">
          <taggedValue xmi:id="_AVVqQTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of patterns for each distinct pattern"/>
          <taggedValue xmi:id="_AVVqQjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent patterns"/>
          <sqlGenericExpression xmi:id="_AVVqQzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_AVVqRDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AVVqRTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AVVqRjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AVVqRzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_AVVqSDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_AVVqSTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AVVqSjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_AVVqSzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AVVqTDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_AVVqTTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Netezza"/>
          <charactersMapping xmi:id="_AVVqTjgPEeiv1bKJKPS_Mg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqTzgPEeiv1bKJKPS_Mg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqUDgPEeiv1bKJKPS_Mg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqUTgPEeiv1bKJKPS_Mg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqUjgPEeiv1bKJKPS_Mg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqUzgPEeiv1bKJKPS_Mg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqVDgPEeiv1bKJKPS_Mg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqVTgPEeiv1bKJKPS_Mg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqVjgPEeiv1bKJKPS_Mg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqVzgPEeiv1bKJKPS_Mg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqWDgPEeiv1bKJKPS_Mg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_AVVqWTgPEeiv1bKJKPS_Mg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_9ICo_zgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpADgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R9DgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  MAX(&quot;FIRSTNM&quot;), SOUNDEX(&quot;FIRSTNM&quot;), COUNT(*) c, COUNT(DISTINCT &quot;FIRSTNM&quot;) d FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY SOUNDEX(&quot;FIRSTNM&quot;) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AVtdsDgPEeiv1bKJKPS_Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_AVtdsTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_AVtdsjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_AVtdszgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_AVtdtDgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AVtdtTgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AVtdtjgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AVtdtzgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_AVtduDgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AVtduTgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AVtdujgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_AVtduzgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_AVtdvDgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_9ICpATgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpAjgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R9TgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  MAX(&quot;FIRSTNM&quot;), SOUNDEX(&quot;FIRSTNM&quot;), COUNT(*) c, COUNT(DISTINCT &quot;FIRSTNM&quot;) d FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY SOUNDEX(&quot;FIRSTNM&quot;) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AWC04DgPEeiv1bKJKPS_Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="_AWC04TgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_AWC04jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_AWC04zgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_AWC05DgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_AWC05TgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AWC05jgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AWC05zgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_AWC06DgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AWC06TgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_AWC06jgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_AWC06zgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="Ingres"/>
          <sqlGenericExpression xmi:id="_AWC07DgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BenfordLawFrequencyIndicator" xmi:id="_9ICpAzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpBDgOEeiv1bKJKPS_Mg" topN="50"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Fraud Detection/Benford_Law_Frequency_0.1.definition#_yRkFIezIEeG0fbygDv6UrQ"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R9jgPEeiv1bKJKPS_Mg" body="SELECT TOP 50  cast(LEFT(&quot;FIRSTNM&quot;,1) as char), COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY LEFT(&quot;FIRSTNM&quot;,1) order by LEFT(&quot;FIRSTNM&quot;,1)" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_AWYMEDgPEeiv1bKJKPS_Mg" name="Benford Law Frequency" label="Benford Law Frequency">
          <taggedValue xmi:id="_AWYMETgPEeiv1bKJKPS_Mg" tag="Description" value="Benford's law is used by accountants to detect possible instances of fraud based on the distribution of digits in numbers."/>
          <taggedValue xmi:id="_AWYMEjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluate the possible instances of fraud"/>
          <sqlGenericExpression xmi:id="_AWYMEzgPEeiv1bKJKPS_Mg" body="SELECT cast(LEFT(&lt;%=__COLUMN_NAMES__%>,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY LEFT(&lt;%=__COLUMN_NAMES__%>,1) order by LEFT(&lt;%=__COLUMN_NAMES__%>,1)" language="SQL"/>
          <sqlGenericExpression xmi:id="_AWYMFDgPEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) order by SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1)" language="Oracle"/>
          <sqlGenericExpression xmi:id="_AWYMFTgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2) order by SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2)" language="Teradata"/>
          <sqlGenericExpression xmi:id="_AWYMFjgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2), COUNT(*)  FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2) order by SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2)" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_AWYMFzgPEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Informix"/>
          <sqlGenericExpression xmi:id="_AWYMGDgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1) order by SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1)" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_AWYMGTgPEeiv1bKJKPS_Mg" body="SELECT substr(&lt;%=__COLUMN_NAMES__%>,1,1), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY substr(&lt;%=__COLUMN_NAMES__%>,1,1)" language="Hive"/>
          <sqlGenericExpression xmi:id="_AWYMGjgPEeiv1bKJKPS_Mg" body="SELECT SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1) , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1) order by SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1)" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_AWYMGzgPEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,1,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Netezza"/>
          <sqlGenericExpression xmi:id="_AWYMHDgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(&lt;%=__COLUMN_NAMES__%>,1,1), COUNT(*)  FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Redshift"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SqlPatternMatchingIndicator" xmi:id="_9ICpBTgOEeiv1bKJKPS_Mg" name="Email Gmail from Google">
        <parameters xmi:id="_9ICpBjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpBzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Gmail_from_Google_0.1.pattern#_5tDp8LoaEd2CVq07lsaT2w"/>
            <builtInPatterns xmi:id="_AXfmYDgPEeiv1bKJKPS_Mg" name="Email Gmail from Google">
              <taggedValue xmi:id="_AXfmYTgPEeiv1bKJKPS_Mg" tag="Author" value="Abdelhak KHENOUCHE"/>
              <taggedValue xmi:id="_AXfmYjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses to gmail.com provider"/>
              <taggedValue xmi:id="_AXfmYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="_AXfmZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AXfmZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AXfmZjgPEeiv1bKJKPS_Mg" expressionType="SQL like">
                <expression xmi:id="_AXfmZzgPEeiv1bKJKPS_Mg" body="'%@gmail.com'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/SQL_Pattern_Matching_0.1.definition#_Z4vXcERgEd2RSqFSgXiIfA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R9zgPEeiv1bKJKPS_Mg" body="SELECT COUNT(CASE WHEN &quot;FIRSTNM&quot; LIKE '%@gmail.com' THEN 1 END), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SqlPatternMatchingIndicator" xmi:id="_9ICpCDgOEeiv1bKJKPS_Mg" name="Email Yahoo">
        <parameters xmi:id="_9ICpCTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpCjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Yahoo_0.1.pattern#_jyAMQbo4Ed2fB5cidg4eog"/>
            <builtInPatterns xmi:id="_AYqEADgPEeiv1bKJKPS_Mg" name="Email Yahoo">
              <taggedValue xmi:id="_AYqEATgPEeiv1bKJKPS_Mg" tag="Author" value="Abdelhak KHENOUCHE"/>
              <taggedValue xmi:id="_AYqEAjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses to Yahoo.com, Yahoo.fr  provider and so on"/>
              <taggedValue xmi:id="_AYqEAzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="_AYqEBDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AYqEBTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AYqEBjgPEeiv1bKJKPS_Mg" expressionType="SQL like">
                <expression xmi:id="_AYqEBzgPEeiv1bKJKPS_Mg" body="'%@yahoo.%'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/SQL_Pattern_Matching_0.1.definition#_Z4vXcERgEd2RSqFSgXiIfA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DS9R-DgPEeiv1bKJKPS_Mg" body="SELECT COUNT(CASE WHEN &quot;FIRSTNM&quot; LIKE '%@yahoo.%' THEN 1 END), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpCzgOEeiv1bKJKPS_Mg" name="BE Code postal">
        <parameters xmi:id="_9ICpDDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpDTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_AZsl0DgPEeiv1bKJKPS_Mg" name="BE Code postal">
              <taggedValue xmi:id="_AZsl0TgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Belgian postal codes."/>
              <taggedValue xmi:id="_AZsl0jgPEeiv1bKJKPS_Mg" tag="Description" value="Matches standard Belgian postal codes."/>
              <taggedValue xmi:id="_AZsl0zgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AZsl1DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AZsl1TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AZsl1jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AZsl1zgPEeiv1bKJKPS_Mg" body="'^(F-[0-9]{4,5}|B-[0-9]{4})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpDjgOEeiv1bKJKPS_Mg" name="DE Postleitzahl (postal code)">
        <parameters xmi:id="_9ICpDzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpEDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_rK7EgD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_AavHoDgPEeiv1bKJKPS_Mg" name="DE Postleitzahl (postal code)">
              <taggedValue xmi:id="_AavHoTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of German postal codes."/>
              <taggedValue xmi:id="_AavHojgPEeiv1bKJKPS_Mg" tag="Description" value="Matches standard German postal codes."/>
              <taggedValue xmi:id="_AavHozgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AavHpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AavHpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AavHpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AavHpzgPEeiv1bKJKPS_Mg" body="'^[0-9]{5}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpETgOEeiv1bKJKPS_Mg" name="FR Code postal">
        <parameters xmi:id="_9ICpEjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpEzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_EJ_moD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_AcCvMDgPEeiv1bKJKPS_Mg" name="FR Code postal">
              <taggedValue xmi:id="_AcCvMTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of French postal codes."/>
              <taggedValue xmi:id="_AcCvMjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the French postal codes"/>
              <taggedValue xmi:id="_AcCvMzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AcCvNDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AcCvNTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AcCvNjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AcCvNzgPEeiv1bKJKPS_Mg" body="'^(0[1-9]|[1-9][0-9])[0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpFDgOEeiv1bKJKPS_Mg" name="FR Insee Code">
        <parameters xmi:id="_9ICpFTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpFjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_wXkbQEChEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_AdFRADgPEeiv1bKJKPS_Mg" name="FR Insee Code">
              <taggedValue xmi:id="_AdFRATgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_AdFRAjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_AdFRAzgPEeiv1bKJKPS_Mg" tag="Purpose" value=" FRA-2A235 | F-2B128 | FRA 2B356"/>
              <taggedValue xmi:id="_AdFRBDgPEeiv1bKJKPS_Mg" tag="Description" value="French Insee code of cities with Corsica and colonies"/>
              <taggedValue xmi:id="_AdFRBTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_AdFRBjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AdFRBzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AdFRCDgPEeiv1bKJKPS_Mg" body="'^(F-|FRA?(-| ))?((2[A|B])|[0-9]{2})[0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpFzgOEeiv1bKJKPS_Mg" name="Postal code or Pin code of India">
        <parameters xmi:id="_9ICpGDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpGTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_Ego7UIygEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AeF9oDgPEeiv1bKJKPS_Mg" name="Postal code or Pin code of India">
              <taggedValue xmi:id="_AeF9oTgPEeiv1bKJKPS_Mg" tag="Author" value="Nandip Makwana"/>
              <taggedValue xmi:id="_AeF9ojgPEeiv1bKJKPS_Mg" tag="Description" value="This expression will be useful to check postal code or pin code of India. This expression will check postal code or pin code in two format. One is code is separated by space after 3 digit and another is code is written in 6 digit."/>
              <taggedValue xmi:id="_AeF9ozgPEeiv1bKJKPS_Mg" tag="Purpose" value="360311 ||| 360 311 ||| 360 00136 0311 ||| 3603111 ||| 360 31 ||| 36031"/>
              <taggedValue xmi:id="_AeF9pDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AeF9pTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AeF9pjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AeF9pzgPEeiv1bKJKPS_Mg" body="'([0-9]{6}|[0-9]{3}\s[0-9]{3})'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpGjgOEeiv1bKJKPS_Mg" name="Swiss Zip Code validation">
        <parameters xmi:id="_9ICpGzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpHDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#__GBswIyfEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AfIfcDgPEeiv1bKJKPS_Mg" name="Swiss Zip Code validation">
              <taggedValue xmi:id="_AfIfcTgPEeiv1bKJKPS_Mg" tag="Author" value="Michael Freiermuth"/>
              <taggedValue xmi:id="_AfIfcjgPEeiv1bKJKPS_Mg" tag="Description" value="Zip code validation for Switzerland.&#xA;Forces 4-digits only zipcode starting at 1000"/>
              <taggedValue xmi:id="_AfIfczgPEeiv1bKJKPS_Mg" tag="Purpose" value="1000 | 1200 | 8200 | 8048 | 9999a-z | aaaa | 123 | 0000"/>
              <taggedValue xmi:id="_AfIfdDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AfIfdTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AfIfdjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AfIfdzgPEeiv1bKJKPS_Mg" body="'^[1-9][0-9][0-9][0-9]$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpHTgOEeiv1bKJKPS_Mg" name="US State Codes">
        <parameters xmi:id="_9ICpHjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpHzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_pWgP8LkgEeSVYtNTxh_-xg"/>
            <builtInPatterns xmi:id="_AgLoUDgPEeiv1bKJKPS_Mg" name="US State Codes">
              <taggedValue xmi:id="_AgLoUTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Belgian postal codes."/>
              <taggedValue xmi:id="_AgLoUjgPEeiv1bKJKPS_Mg" tag="Description" value="matches US state codes such as AK, AL, AR, ..."/>
              <taggedValue xmi:id="_AgLoUzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AgLoVDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AgLoVTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AgLoVjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AgLoVzgPEeiv1bKJKPS_Mg" body="'^(A[KLRZ]|C[AOT]|DE|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpIDgOEeiv1bKJKPS_Mg" name="US Zipcode Validation">
        <parameters xmi:id="_9ICpITgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpIjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_n2tqUIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AhTCoDgPEeiv1bKJKPS_Mg" name="US Zipcode Validation">
              <taggedValue xmi:id="_AhTCoTgPEeiv1bKJKPS_Mg" tag="Author" value="Amith"/>
              <taggedValue xmi:id="_AhTCojgPEeiv1bKJKPS_Mg" tag="Description" value="Zipcode should be of 5 numerics"/>
              <taggedValue xmi:id="_AhTCozgPEeiv1bKJKPS_Mg" tag="Purpose" value="matches only if 5 numerics are presentnot matches if less than 5 numerics"/>
              <taggedValue xmi:id="_AhTCpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AhTCpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AhTCpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AhTCpzgPEeiv1bKJKPS_Mg" body="'^[0-9]{5}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpIzgOEeiv1bKJKPS_Mg" name="Valid UK Post Codes Upper and Lower Case">
        <parameters xmi:id="_9ICpJDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpJTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_fi29wIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_Aiac8DgPEeiv1bKJKPS_Mg" name="Valid UK Post Codes Upper and Lower Case">
              <taggedValue xmi:id="_Aiac8TgPEeiv1bKJKPS_Mg" tag="Author" value="Gareth Wright"/>
              <taggedValue xmi:id="_Aiac8jgPEeiv1bKJKPS_Mg" tag="Description" value="Matches valid UK post codes in both upper and lower case, allowing for one or zero spaces between outcode and incodes."/>
              <taggedValue xmi:id="_Aiac8zgPEeiv1bKJKPS_Mg" tag="Purpose" value="SW112LE | SW11 2LE | sw112le12CR0LE | 12CR 0LE | SWLE05"/>
              <taggedValue xmi:id="_Aiac9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Aiac9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Aiac9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Aiac9zgPEeiv1bKJKPS_Mg" body="'^ (([BEGLMNSWbeglmnsw][0-9][0-9]?)|(([A-PR-UWYZa-pr-uwyz][A-HK-Ya-hk-y][0-9][0-9]?)|(([ENWenw][0-9][A-HJKSTUWa-hjkstuw])|([ENWenw][A-HK-Ya-hk-y][0-9][ABEHMNPRVWXYabehmnprvwxy])))) ?[0-9][ABD-HJLNP-UW-Zabd-hjlnp-uw-z]{2}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpJjgOEeiv1bKJKPS_Mg" name="Key in properties file">
        <parameters xmi:id="_9ICpJzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpKDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/code/Key_in_properties_file_0.1.pattern#_DVfAwAMtEd6stMai_3cDIQ"/>
            <builtInPatterns xmi:id="_AjbJkDgPEeiv1bKJKPS_Mg" name="Key in properties file">
              <taggedValue xmi:id="_AjbJkTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_AjbJkjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches: \ClassFoo.string.1\&quot; &#xA;Non-Matches: \&quot;#ClassFoo\&quot;.&quot;"/>
              <taggedValue xmi:id="_AjbJkzgPEeiv1bKJKPS_Mg" tag="Purpose" value="match the keys of a Java properties file."/>
              <taggedValue xmi:id="_AjbJlDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AjbJlTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AjbJljgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AjbJlzgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\[?\\]?$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AjbJmDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AjbJmTgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\\\[?\\\\]?$'" language="Mysql"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AjbJmjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AjbJmzgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\[?\\]?$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AjbJnDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AjbJnTgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>a-z|0-9._@&amp;*]*\[?\]?$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpKTgOEeiv1bKJKPS_Mg" name="Hex Color Codes">
        <parameters xmi:id="_9ICpKjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpKzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_ly9QgcBQEd2Zap05uF3mKA"/>
            <builtInPatterns xmi:id="_AkgHoDgPEeiv1bKJKPS_Mg" name="Hex Color Codes">
              <taggedValue xmi:id="_AkgHoTgPEeiv1bKJKPS_Mg" tag="Author" value="Michael Fienen"/>
              <taggedValue xmi:id="_AkgHojgPEeiv1bKJKPS_Mg" tag="Description" value="Matches valid 3 or 6 character hex codes used for HTML or CSS.&#xA;Matches fff | #990000 | #cc3366 | #AAAAAA&#xA;Non-Matches #5555 | #ZJK000 | CDCDCDCD"/>
              <taggedValue xmi:id="_AkgHozgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check hex codes used for HTML or CSS"/>
              <taggedValue xmi:id="_AkgHpDgPEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="_AkgHpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AkgHpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AkgHpzgPEeiv1bKJKPS_Mg" body="'^\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AkgHqDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AkgHqTgPEeiv1bKJKPS_Mg" body="'^\\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$'" language="MySQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpLDgOEeiv1bKJKPS_Mg" name="EN Amount Money">
        <parameters xmi:id="_9ICpLTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpLjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_TTN-cEClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_AlipcDgPEeiv1bKJKPS_Mg" name="EN Amount Money">
              <taggedValue xmi:id="_AlipcTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_AlipcjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_AlipczgPEeiv1bKJKPS_Mg" tag="Purpose" value="$3,000 | CA$3000"/>
              <taggedValue xmi:id="_AlipdDgPEeiv1bKJKPS_Mg" tag="Description" value="Amount of money in English format"/>
              <taggedValue xmi:id="_AlipdTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_AlipdjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AlipdzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AlipeDgPEeiv1bKJKPS_Mg" body="'^((US|CA)?\$|\￡|\€|\￥)(([1-9][0-9]{0,2}(\,[0-9]{3})*)|([1-9][0-9]*)|(0))(\.[0-9]{2}|k|M|G|T)?$'" language="SQL" modificationDate="2015-08-17 14:40:36"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AlipeTgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AlipejgPEeiv1bKJKPS_Mg" body="'^((US|CA)?\\$|\￡|\€|\￥)(([1-9][0-9]{0,2}(\,[0-9]{3})*)|([1-9][0-9]*)|(0))(\.[0-9]{2}|k|M|G|T)?$'" language="MySQL" modificationDate="2015-08-17 14:27:55"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpLzgOEeiv1bKJKPS_Mg" name="FR Amount Money">
        <parameters xmi:id="_9ICpMDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpMTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_MKEKcEClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_AmlyUDgPEeiv1bKJKPS_Mg" name="FR Amount Money">
              <taggedValue xmi:id="_AmlyUTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_AmlyUjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_AmlyUzgPEeiv1bKJKPS_Mg" tag="Purpose" value="3000 € | 35 k€ | 35 054 T€"/>
              <taggedValue xmi:id="_AmlyVDgPEeiv1bKJKPS_Mg" tag="Description" value="Amount of money in French format"/>
              <taggedValue xmi:id="_AmlyVTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_AmlyVjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AmlyVzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AmlyWDgPEeiv1bKJKPS_Mg" body="'^(([1-9][0-9]{0,2}( [0-9]{3})*)|([1-9][0-9]*)|0)((,[0-9]{2} | (k|M|G|T))?| )(\$( (US|CA))?|\￡|\€|\￥)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpMjgOEeiv1bKJKPS_Mg" name="Bulgaria Vat Number">
        <parameters xmi:id="_9ICpMzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpNDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_b95-YIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_AnqwYDgPEeiv1bKJKPS_Mg" name="Bulgaria Vat Number">
              <taggedValue xmi:id="_AnqwYTgPEeiv1bKJKPS_Mg" tag="Author" value="Panayiotis Savva"/>
              <taggedValue xmi:id="_AnqwYjgPEeiv1bKJKPS_Mg" tag="Description" value="Vat number for Bulgaria. Formats are &#xA;BG123456789&#xA;BG1234567890"/>
              <taggedValue xmi:id="_AnqwYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="BG123456789|||BG1234567890|||BG1587963587BG12349|||Bg1234567890|||BG1587963587989"/>
              <taggedValue xmi:id="_AnqwZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AnqwZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AnqwZjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AnqwZzgPEeiv1bKJKPS_Mg" body="'^(BG){0,1}([0-9]{9}|[0-9]{10})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpNTgOEeiv1bKJKPS_Mg" name="French VATNumber">
        <parameters xmi:id="_9ICpNjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpNzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/French_VATNumber_0.1.pattern#_ga6fofbIEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="_AotSMDgPEeiv1bKJKPS_Mg" name="French VATNumber">
              <taggedValue xmi:id="_AotSMTgPEeiv1bKJKPS_Mg" tag="Author" value="Vassilis Petroulias"/>
              <taggedValue xmi:id="_AotSMjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches FRAB 123456789 | L7 123456789&#xA;Non-Matches  &#x9;&#xA;FRAB123456789 | L7 L23456789&#x9;"/>
              <taggedValue xmi:id="_AotSMzgPEeiv1bKJKPS_Mg" tag="Purpose" value="VAT Numbers format verification (France) with support for optional member state definition."/>
              <taggedValue xmi:id="_AotSNDgPEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="_AotSNTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AotSNjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AotSNzgPEeiv1bKJKPS_Mg" body="'^(FR){0,1}[0-9A-Z]{2}\ [0-9]{9}$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AotSODgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AotSOTgPEeiv1bKJKPS_Mg" body="'^(FR){0,1}[0-9A-Z]{2}\\ [0-9]{9}$'" language="MySQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpODgOEeiv1bKJKPS_Mg" name="Gender">
        <parameters xmi:id="_9ICpOTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpOjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_TXHDQceCEd2zV_ZhgRMOzA"/>
            <builtInPatterns xmi:id="_Ap0sgDgPEeiv1bKJKPS_Mg" name="Gender">
              <taggedValue xmi:id="_Ap0sgTgPEeiv1bKJKPS_Mg" tag="Author" value="Keith Stacy"/>
              <taggedValue xmi:id="_Ap0sgjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches: F, M, Male, Female, male, female.&#xA;Non-matches: mail, A, S"/>
              <taggedValue xmi:id="_Ap0sgzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Classic gender descriptor regex."/>
              <taggedValue xmi:id="_Ap0shDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Ap0shTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Ap0shjgPEeiv1bKJKPS_Mg">
                <expression xmi:id="_Ap0shzgPEeiv1bKJKPS_Mg" body="'^(m|M|male|Male|f|F|female|Female)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpOzgOEeiv1bKJKPS_Mg" name="SEDOL">
        <parameters xmi:id="_9ICpPDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpPTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/SEDOL_0.1.pattern#_u--T0EClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_Aq6RoDgPEeiv1bKJKPS_Mg" name="SEDOL">
              <taggedValue xmi:id="_Aq6RoTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_Aq6RojgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_Aq6RozgPEeiv1bKJKPS_Mg" tag="Purpose" value="B01HL06 | 4155586"/>
              <taggedValue xmi:id="_Aq6RpDgPEeiv1bKJKPS_Mg" tag="Description" value="Stock Exchange Daily Official List "/>
              <taggedValue xmi:id="_Aq6RpTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_Aq6RpjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Aq6RpzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Aq6RqDgPEeiv1bKJKPS_Mg" body="'^([B-Db-dF-Hf-hJ-Nj-nP-Tp-tV-Xv-xYyZz0-9]{6}[0-9])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpPjgOEeiv1bKJKPS_Mg" name="24 Hour Time">
        <parameters xmi:id="_9ICpPzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpQDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_nj3TsD4KEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_Ar8zcDgPEeiv1bKJKPS_Mg" name="24 Hour Time">
              <taggedValue xmi:id="_Ar8zcTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check time strings in 24 hour format"/>
              <taggedValue xmi:id="_Ar8zcjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches a string if it is a valid time in the format of HH:MM"/>
              <taggedValue xmi:id="_Ar8zczgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_Ar8zdDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Ar8zdTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Ar8zdjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Ar8zdzgPEeiv1bKJKPS_Mg" body="'^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpQTgOEeiv1bKJKPS_Mg" name="Current Century Date">
        <parameters xmi:id="_9ICpQjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpQzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Current_Century_Date_0.1.pattern#_khsAgIyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_Atz0oDgPEeiv1bKJKPS_Mg" name="Current Century Date">
              <taggedValue xmi:id="_Atz0oTgPEeiv1bKJKPS_Mg" tag="Author" value="Hallam Mohamed Amine"/>
              <taggedValue xmi:id="_Atz0ojgPEeiv1bKJKPS_Mg" tag="Description" value="This regular expression will validate most (current &amp; future) date options. The weaknesses with this one is that it will allow the days to go up to 39 and does not account for leap year. Also, the months can go up to 19, instead of our commonly accepted 12 month year. :)  I designed this expression to validate dates from the year 2000 to 2099. I do not plan on this same code being in place in 2099, so I hope this is sufficient enough..."/>
              <taggedValue xmi:id="_Atz0ozgPEeiv1bKJKPS_Mg" tag="Purpose" value="match 2/14/2001 or 12-14-2001 or  12-29-2099  not matches :  2/14/1999"/>
              <taggedValue xmi:id="_Atz0pDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Atz0pTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Atz0pjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Atz0pzgPEeiv1bKJKPS_Mg" body="'^([0-1]?[0-9]{1}[/-][0-3]?[0-9]{1}[/-]20[0-9]{2})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpRDgOEeiv1bKJKPS_Mg" name="EN Month">
        <parameters xmi:id="_9ICpRTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpRjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_cfceoEC_EeWBxNQvuPBQ-Q"/>
            <builtInPatterns xmi:id="_Au72ADgPEeiv1bKJKPS_Mg" name="EN Month">
              <taggedValue xmi:id="_Au72ATgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_Au72AjgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_Au72AzgPEeiv1bKJKPS_Mg" tag="Purpose" value="January | February"/>
              <taggedValue xmi:id="_Au72BDgPEeiv1bKJKPS_Mg" tag="Description" value="Month in English"/>
              <taggedValue xmi:id="_Au72BTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_Au72BjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Au72BzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Au72CDgPEeiv1bKJKPS_Mg" body="'^(January|June|July|February|March|May|April|August|September|October|November|December)$'" language="SQL" modificationDate="2015-08-12 15:53:13"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpRzgOEeiv1bKJKPS_Mg" name="EN Month Abbrev">
        <parameters xmi:id="_9ICpSDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpSTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_T8ZfgEC_EeWBxNQvuPBQ-Q"/>
            <builtInPatterns xmi:id="_AwTvADgPEeiv1bKJKPS_Mg" name="EN Month Abbrev">
              <taggedValue xmi:id="_AwTvATgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_AwTvAjgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AwTvAzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Jan | Feb"/>
              <taggedValue xmi:id="_AwTvBDgPEeiv1bKJKPS_Mg" tag="Description" value="Month English abbreviation"/>
              <taggedValue xmi:id="_AwTvBTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_AwTvBjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AwTvBzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AwTvCDgPEeiv1bKJKPS_Mg" body="'^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpSjgOEeiv1bKJKPS_Mg" name="ISO Date">
        <parameters xmi:id="_9ICpSzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpTDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_M4zogD4ZEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="_AxWQ0DgPEeiv1bKJKPS_Mg" name="ISO Date">
              <taggedValue xmi:id="_AxWQ0TgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of ISO dates."/>
              <taggedValue xmi:id="_AxWQ0jgPEeiv1bKJKPS_Mg" tag="Description" value="Matches ISO dates such as 2002-01-31."/>
              <taggedValue xmi:id="_AxWQ0zgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AxWQ1DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AxWQ1TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AxWQ1jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AxWQ1zgPEeiv1bKJKPS_Mg" body="'^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[[:digit:]])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AxWQ2DgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AxWQ2TgPEeiv1bKJKPS_Mg" body="'^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[\d])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpTTgOEeiv1bKJKPS_Mg" name="Month">
        <parameters xmi:id="_9ICpTjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpTzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_ZNaNsD4ZEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="_AygucDgPEeiv1bKJKPS_Mg" name="Month">
              <taggedValue xmi:id="_AygucTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of month"/>
              <taggedValue xmi:id="_AygucjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches month written as 2-digit numbers (e.g. '08', '12')."/>
              <taggedValue xmi:id="_AyguczgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AygudDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AygudTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AygudjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AygudzgPEeiv1bKJKPS_Mg" body="'^((0[1-9])|(1[0-2]))$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpUDgOEeiv1bKJKPS_Mg" name="Email Address">
        <parameters xmi:id="_9ICpUTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpUjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_rC5TcD4XEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="_AzjQQDgPEeiv1bKJKPS_Mg" name="Email Address">
              <taggedValue xmi:id="_AzjQQTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="_AzjQQjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses"/>
              <taggedValue xmi:id="_AzjQQzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_AzjQRDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_AzjQRTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AzjQRjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AzjQRzgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AzjQSDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AzjQSTgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'" language="Mysql"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AzjQSjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AzjQSzgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="Java"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_AzjQTDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_AzjQTTgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="SQL" modificationDate="2013-09-19 14:26:31"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpUzgOEeiv1bKJKPS_Mg" name="IP Address">
        <parameters xmi:id="_9ICpVDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpVTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/IP_Address_0.1.pattern#_pOs9MAyEEd6OfvNiP9lrnQ"/>
            <builtInPatterns xmi:id="_A0lyEDgPEeiv1bKJKPS_Mg" name="IP Address">
              <taggedValue xmi:id="_A0lyETgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_A0lyEjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches: IP addresses such as 10.62.268.9&#xA;Non-matches: 345.2.2.3, 123.1.1.34.4"/>
              <taggedValue xmi:id="_A0lyEzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Match IP addresses"/>
              <taggedValue xmi:id="_A0lyFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A0lyFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A0lyFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A0lyFzgPEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="MySQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A0lyGDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A0lyGTgPEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A0lyGjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A0lyGzgPEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A0lyHDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A0lyHTgPEeiv1bKJKPS_Mg" body="'^([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpVjgOEeiv1bKJKPS_Mg" name="MAC Address">
        <parameters xmi:id="_9ICpVzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpWDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/MAC_Address_0.1.pattern#_xVVjsECkEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_A1yE4DgPEeiv1bKJKPS_Mg" name="MAC Address">
              <taggedValue xmi:id="_A1yE4TgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_A1yE4jgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_A1yE4zgPEeiv1bKJKPS_Mg" tag="Purpose" value="A4:4E:31:B9:C5:B4"/>
              <taggedValue xmi:id="_A1yE5DgPEeiv1bKJKPS_Mg" tag="Description" value="Match MAC Address"/>
              <taggedValue xmi:id="_A1yE5TgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_A1yE5jgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A1yE5zgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A1yE6DgPEeiv1bKJKPS_Mg" body="'^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpWTgOEeiv1bKJKPS_Mg" name="American Express Card Number">
        <parameters xmi:id="_9ICpWjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpWzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/American_Express_Card_Number_0.1.pattern#_FcDG0D17Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="_A21NwDgPEeiv1bKJKPS_Mg" name="American Express Card Number">
              <taggedValue xmi:id="_A21NwTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Checks the validity of American Express card numbers. "/>
              <taggedValue xmi:id="_A21NwjgPEeiv1bKJKPS_Mg" tag="Description" value="American Express card numbers start with 34 or 37 and have 15 digits."/>
              <taggedValue xmi:id="_A21NwzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_A21NxDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A21NxTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A21NxjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A21NxzgPEeiv1bKJKPS_Mg" body="'^3[47][0-9]{13}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpXDgOEeiv1bKJKPS_Mg" name="Bank Routing Transit Number (RTN)">
        <parameters xmi:id="_9ICpXTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpXjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Bank_Routing_Transit_Number__RTN__0.1.pattern#_j5FFMIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_A33vkDgPEeiv1bKJKPS_Mg" name="Bank Routing Transit Number (RTN)">
              <taggedValue xmi:id="_A33vkTgPEeiv1bKJKPS_Mg" tag="Author" value="Doug Vanderweide"/>
              <taggedValue xmi:id="_A33vkjgPEeiv1bKJKPS_Mg" tag="Description" value="Ensures a given string matches the basic pattern of a bank routing transit number (RTN), used to identify financial institutions on instruments such as checks. Ensures number is nine digits long and has first two digits that comply with American Bankers Association rules."/>
              <taggedValue xmi:id="_A33vkzgPEeiv1bKJKPS_Mg" tag="Purpose" value="614321634, 114000900, 7034520981145329, 491212012, banana"/>
              <taggedValue xmi:id="_A33vlDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A33vlTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A33vljgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A33vlzgPEeiv1bKJKPS_Mg" body="'^((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpXzgOEeiv1bKJKPS_Mg" name="Contains numbers">
        <parameters xmi:id="_9ICpYDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpYTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Contains_numbers_0.1.pattern#_Lnh0kGUuEd2RuP05jDphQg"/>
            <builtInPatterns xmi:id="_A48toDgPEeiv1bKJKPS_Mg" name="Contains numbers">
              <taggedValue xmi:id="_A48toTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_A48tojgPEeiv1bKJKPS_Mg" tag="Description" value="This pattern will match any value that contains numeric characters. For example 'DQE123' will match the pattern. "/>
              <taggedValue xmi:id="_A48tozgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check whether the field contains numbers"/>
              <taggedValue xmi:id="_A48tpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A48tpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A48tpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A48tpzgPEeiv1bKJKPS_Mg" body="'[[:digit:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A48tqDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A48tqTgPEeiv1bKJKPS_Mg" body="'\d'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpYjgOEeiv1bKJKPS_Mg" name="FR SSN">
        <parameters xmi:id="_9ICpYzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpZDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/FR_SSN_0.1.pattern#_OuO-UPbPEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="_A5_2gDgPEeiv1bKJKPS_Mg" name="FR SSN">
              <taggedValue xmi:id="_A5_2gTgPEeiv1bKJKPS_Mg" tag="Author" value="S Correia"/>
              <taggedValue xmi:id="_A5_2gjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches  &#x9;&#xA;181049520156962 | 1 81 04 95 201 569 62 | 1 81 04 95 201 569&#xA;Non-Matches &#x9;&#xA;1 81049520156962 | 181049520156962fds | 1810495201569ds"/>
              <taggedValue xmi:id="_A5_2gzgPEeiv1bKJKPS_Mg" tag="Purpose" value="French Social Security Number"/>
              <taggedValue xmi:id="_A5_2hDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A5_2hTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A5_2hjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A5_2hzgPEeiv1bKJKPS_Mg" body="'^[12][0-9]{2}(0[1-9]|1[0-2])(2[AB]|[0-9]{2})[0-9]{6}([0-9]{2})?$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpZTgOEeiv1bKJKPS_Mg" name="GPS Coordinate">
        <parameters xmi:id="_9ICpZjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpZzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/GPS_Coordinate_0.1.pattern#_Xaq7AECwEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_A7E0kDgPEeiv1bKJKPS_Mg" name="GPS Coordinate">
              <taggedValue xmi:id="_A7E0kTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_A7E0kjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_A7E0kzgPEeiv1bKJKPS_Mg" tag="Purpose" value="40.7127837,-74.00594130000002"/>
              <taggedValue xmi:id="_A7E0lDgPEeiv1bKJKPS_Mg" tag="Description" value="Google Maps style GPS Decimal format"/>
              <taggedValue xmi:id="_A7E0lTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_A7E0ljgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A7E0lzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A7E0mDgPEeiv1bKJKPS_Mg" body="'^([0-9]{1,3}[\\.][0-9]*)[, ]+-?([0-9]{1,3}[\\.][0-9]*)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpaDgOEeiv1bKJKPS_Mg" name="ISBN Checker">
        <parameters xmi:id="_9ICpaTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpajgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_Checker_0.1.pattern#_WGxL4IydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_A8HWYDgPEeiv1bKJKPS_Mg" name="ISBN Checker">
              <taggedValue xmi:id="_A8HWYTgPEeiv1bKJKPS_Mg" tag="Author" value="Alex Richards"/>
              <taggedValue xmi:id="_A8HWYjgPEeiv1bKJKPS_Mg" tag="Description" value="Expression to check for a valid ISBN number"/>
              <taggedValue xmi:id="_A8HWYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="ISBN 0-596-00681-0   Anything that's not in the above format"/>
              <taggedValue xmi:id="_A8HWZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A8HWZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A8HWZjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A8HWZzgPEeiv1bKJKPS_Mg" body="'^[ISBN]{4}[ ]{0,1}[0-9]{1}[-]{1}[0-9]{3}[-]{1}[0-9]{5}[-]{1}[0-9]{0,1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpazgOEeiv1bKJKPS_Mg" name="International Passport">
        <parameters xmi:id="_9ICpbDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpbTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/International_Passport_0.1.pattern#_PRL0IIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_A9M7gDgPEeiv1bKJKPS_Mg" name="International Passport">
              <taggedValue xmi:id="_A9M7gTgPEeiv1bKJKPS_Mg" tag="Author" value="Pradeep Dhiman"/>
              <taggedValue xmi:id="_A9M7gjgPEeiv1bKJKPS_Mg" tag="Description" value="? 9 characters made up of a combination of numbers and/or letters. Where less than 9 characters it will be padded out to the right with chevrons (&lt;).&#xA;? 1 number&#xA;? 3 letters&#xA;? 7 numbers&#xA;? 1 letter&#xA;? 7 numbers&#xA;? An international passport will have up to 14 characters in this field (numbers and/or letters). If none exist or where less than 14 characters exist, the field will be padded out, but only to the right, with chevrons (&lt;). You should input the data exactly as it is shown on the actual passport field, i.e. input all chevrons to the left of the characters and do not ignore or leave these as blank spaces. Where less than 14 characters, the field will be padded out to the right with chevrons (&lt;), i.e. Z1234567&lt;&lt;&lt;&lt;&lt;&#xA;? 1 number&#xA;? 1 number"/>
              <taggedValue xmi:id="_A9M7gzgPEeiv1bKJKPS_Mg" tag="Purpose" value="1234567890ABC1234567A1234567&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;12 ||| 0123456781USD5656564M0812120AS34560&lt;&lt;&lt;&lt;&lt;&lt;&lt;36 ||| G0308084&lt;&lt;1ITY9999999Q0410056&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;39ASDFER123AQWE!&quot;%^&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;12 ||| QASASW3&lt;&lt;1WER3as12232&lt;&lt;AS ||| ABCDEF123AQQQ123456789A1&lt;&lt;&lt;&lt;&lt;AS14"/>
              <taggedValue xmi:id="_A9M7hDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A9M7hTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A9M7hjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A9M7hzgPEeiv1bKJKPS_Mg" body="'^[A-Z0-9&lt;]{9}[0-9]{1}[A-Z]{3}[0-9]{7}[A-Z]{1}[0-9]{7}[A-Z0-9&lt;]{14}[0-9]{2}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpbjgOEeiv1bKJKPS_Mg" name="Istat Code">
        <parameters xmi:id="_9ICpbzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpcDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Istat_Code_0.1.pattern#_ZYFdkIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_A-PdUDgPEeiv1bKJKPS_Mg" name="Istat Code">
              <taggedValue xmi:id="_A-PdUTgPEeiv1bKJKPS_Mg" tag="Author" value="Alessandro Forte"/>
              <taggedValue xmi:id="_A-PdUjgPEeiv1bKJKPS_Mg" tag="Description" value="This pattern match the Italian Istat Ateco Code (Codice Istat) updated to Istat Declaration Ateco 2004"/>
              <taggedValue xmi:id="_A-PdUzgPEeiv1bKJKPS_Mg" tag="Purpose" value="22.12.0|18.24.C||22.12_D|12.56| 1A.56.1"/>
              <taggedValue xmi:id="_A-PdVDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A-PdVTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A-PdVjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A-PdVzgPEeiv1bKJKPS_Mg" body="'[0-9]{2}[.]{1}[0-9]{2}[.]{1}[0-9A-Za-z]{1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpcTgOEeiv1bKJKPS_Mg" name="Longitude Validation">
        <parameters xmi:id="_9ICpcjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpczgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Longitude_Validation_0.1.pattern#_CwBEgIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_A_UbYDgPEeiv1bKJKPS_Mg" name="Longitude Validation">
              <taggedValue xmi:id="_A_UbYTgPEeiv1bKJKPS_Mg" tag="Author" value="Jason Rutberg"/>
              <taggedValue xmi:id="_A_UbYjgPEeiv1bKJKPS_Mg" tag="Description" value="Longitude validation (similiar to Latitude Validation) and inspired by the same code"/>
              <taggedValue xmi:id="_A_UbYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="180.0, -180.0, 98.092391181, 180, -98.0923913"/>
              <taggedValue xmi:id="_A_UbZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_A_UbZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_A_UbZjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_A_UbZzgPEeiv1bKJKPS_Mg" body="'^-?([1]?[1-7][1-9]|[1]?[1-8][0]|[1-9]?[0-9])\.{1}[0-9]{1,6}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpdDgOEeiv1bKJKPS_Mg" name="Master Card Number">
        <parameters xmi:id="_9ICpdTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpdjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Master_Card_Number_0.1.pattern#_6YWv4D16Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="_BAaAgDgPEeiv1bKJKPS_Mg" name="Master Card Number">
              <taggedValue xmi:id="_BAaAgTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Master card numbers"/>
              <taggedValue xmi:id="_BAaAgjgPEeiv1bKJKPS_Mg" tag="Description" value="All MasterCard numbers start with the numbers 51 through 55. All have 16 digits."/>
              <taggedValue xmi:id="_BAaAgzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_BAaAhDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BAaAhTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BAaAhjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BAaAhzgPEeiv1bKJKPS_Mg" body="'^5[1-5][0-9]{14}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpdzgOEeiv1bKJKPS_Mg" name="Non Zero 1st Digit">
        <parameters xmi:id="_9ICpeDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpeTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Non_Zero_1st_Digit_0.1.pattern#_D7IDEAulEeKxJpyXB0egyQ"/>
            <builtInPatterns xmi:id="_BBe-kDgPEeiv1bKJKPS_Mg" name="Non Zero 1st Digit">
              <taggedValue xmi:id="_BBe-kTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the first digit is a non zero digit"/>
              <taggedValue xmi:id="_BBe-kjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches signed or unsigned numerics starting with 1 to 9 digits.&#xA;Values like '0999' will not match."/>
              <taggedValue xmi:id="_BBe-kzgPEeiv1bKJKPS_Mg" tag="Author" value="s@t.c"/>
              <taggedValue xmi:id="_BBe-lDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BBe-lTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BBe-ljgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BBe-lzgPEeiv1bKJKPS_Mg" body="'^[-+]?[1-9]'" language="SQL" modificationDate="2012-10-01 10:52:07"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpejgOEeiv1bKJKPS_Mg" name="Numeric">
        <parameters xmi:id="_9ICpezgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpfDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Numeric_0.1.pattern#_OAAOQD1iEd2irYhnXOOajA"/>
            <builtInPatterns xmi:id="_BCo1IDgPEeiv1bKJKPS_Mg" name="Numeric">
              <taggedValue xmi:id="_BCo1ITgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the numeric format"/>
              <taggedValue xmi:id="_BCo1IjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches all numbers"/>
              <taggedValue xmi:id="_BCo1IzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_BCo1JDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BCo1JTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BCo1JjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BCo1JzgPEeiv1bKJKPS_Mg" body="'^[[:digit:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BCo1KDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BCo1KTgPEeiv1bKJKPS_Mg" body="'^\d*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpfTgOEeiv1bKJKPS_Mg" name="UK SSN">
        <parameters xmi:id="_9ICpfjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpfzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_SSN_0.1.pattern#_C2aDMECkEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_BDyrsDgPEeiv1bKJKPS_Mg" name="UK SSN">
              <taggedValue xmi:id="_BDyrsTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_BDyrsjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_BDyrszgPEeiv1bKJKPS_Mg" tag="Purpose" value="AB123456C | AB 12 34 56 C"/>
              <taggedValue xmi:id="_BDyrtDgPEeiv1bKJKPS_Mg" tag="Description" value="National identification number, national identity number, or national insurance number generally called an NI Number (NINO)"/>
              <taggedValue xmi:id="_BDyrtTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_BDyrtjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BDyrtzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BDyruDgPEeiv1bKJKPS_Mg" body="'^[A-CEGHJ-PR-TW-Z]{1}[A-CEGHJ-NPR-TW-Z]{1}([0-9]{6}|( [0-9]{2}){3} )[A-DFM]{0,1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpgDgOEeiv1bKJKPS_Mg" name="UK Vehicle Registration Plate Number Plate">
        <parameters xmi:id="_9ICpgTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpgjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_Vehicle_Registration_Plate_Number_Plate_0.1.pattern#_8U2icIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BFD3ADgPEeiv1bKJKPS_Mg" name="UK Vehicle Registration Plate Number Plate">
              <taggedValue xmi:id="_BFD3ATgPEeiv1bKJKPS_Mg" tag="Author" value="Stephen S"/>
              <taggedValue xmi:id="_BFD3AjgPEeiv1bKJKPS_Mg" tag="Description" value="UK Vehicle Registration Plate / Number Plate format as specified by the DVLA. Accepts both &quot;Prefix&quot; and &quot;New&quot; style. Allows only valid DVLA number combinations as not all are supported. Registration number must be exactly as is displayed on car, hence all letters must be in uppercase and a space seperating the two sets of characters."/>
              <taggedValue xmi:id="_BFD3AzgPEeiv1bKJKPS_Mg" tag="Purpose" value="AB12 RCY|||CD07 TES|||S33 GTT|||Y999 FVBab12 rcy|||CD07 TIS|||S34 GTT|||Z999 FVB"/>
              <taggedValue xmi:id="_BFD3BDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BFD3BTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BFD3BjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BFD3BzgPEeiv1bKJKPS_Mg" body="'([A-HJ-PR-Y]{2}([0][1-9]|[1-9][0-9])|[A-HJ-PR-Y]{1}([1-9]|[1-2][0-9]|30|31|33|40|44|55|50|60|66|70|77|80|88|90|99|111|121|123|222|321|333|444|555|666|777|888|999|100|200|300|400|500|600|700|800|900))[ ][A-HJ-PR-Z]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpgzgOEeiv1bKJKPS_Mg" name="US SSN">
        <parameters xmi:id="_9ICphDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICphTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/US_SSN_0.1.pattern#_BpSRwD15Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="_BGI1EDgPEeiv1bKJKPS_Mg" name="US SSN">
              <taggedValue xmi:id="_BGI1ETgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of US Social Security Numbers"/>
              <taggedValue xmi:id="_BGI1EjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches a (hyphen-separated or not) Social Security Number (SSN). Ex.:  123-45-6789 or 123456789."/>
              <taggedValue xmi:id="_BGI1EzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_BGI1FDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BGI1FTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BGI1FjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BGI1FzgPEeiv1bKJKPS_Mg" body="'^([[:digit:]]{3}[ -][[:digit:]]{2}[ -][[:digit:]]{4}|[[:digit:]]{9})$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BGI1GDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BGI1GTgPEeiv1bKJKPS_Mg" body="'^[\d]{3}[-][\d]{2}[-][\d]{4}|[\d]{9}$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICphjgOEeiv1bKJKPS_Mg" name="FR Phone Number">
        <parameters xmi:id="_9ICphzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpiDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number_0.1.pattern#_SPiUIPbKEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="_BHNzIDgPEeiv1bKJKPS_Mg" name="FR Phone Number">
              <taggedValue xmi:id="_BHNzITgPEeiv1bKJKPS_Mg" tag="Author" value="S. Correia"/>
              <taggedValue xmi:id="_BHNzIjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches French phone numbers starting with 01, 02, 03, 04, 05, 06, 08 09 (e.g. 01-23-45-67-83 or 01.23.45.67.83 or 0123456783"/>
              <taggedValue xmi:id="_BHNzIzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of FR phone numbers"/>
              <taggedValue xmi:id="_BHNzJDgPEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="_BHNzJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BHNzJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BHNzJzgPEeiv1bKJKPS_Mg" body="'^0[1-689]([-. ]?[0-9]{2}){4}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpiTgOEeiv1bKJKPS_Mg" name="FR Phone Number (Local or International )">
        <parameters xmi:id="_9ICpijgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpizgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number__Local_or_International___0.1.pattern#_DqoD4IyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BIciMDgPEeiv1bKJKPS_Mg" name="FR Phone Number (Local or International )">
              <taggedValue xmi:id="_BIciMTgPEeiv1bKJKPS_Mg" tag="Author" value="Amine Mohamed Hallam"/>
              <taggedValue xmi:id="_BIciMjgPEeiv1bKJKPS_Mg" tag="Description" value="check 02-31-23-45-67 or 0033231234567"/>
              <taggedValue xmi:id="_BIciMzgPEeiv1bKJKPS_Mg" tag="Purpose" value="check any french phone number"/>
              <taggedValue xmi:id="_BIciNDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BIciNTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BIciNjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BIciNzgPEeiv1bKJKPS_Mg" body="'^(0033|\\+33|0)[1-689]([-. ]?[0-9]{2}){4}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpjDgOEeiv1bKJKPS_Mg" name="International phone number">
        <parameters xmi:id="_9ICpjTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpjjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/International_phone_number_0.1.pattern#_Is95MIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BJiHUDgPEeiv1bKJKPS_Mg" name="International phone number">
              <taggedValue xmi:id="_BJiHUTgPEeiv1bKJKPS_Mg" tag="Author" value="Amine Mohamed Hallam"/>
              <taggedValue xmi:id="_BJiHUjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches most  international formated phonenumber."/>
              <taggedValue xmi:id="_BJiHUzgPEeiv1bKJKPS_Mg" tag="Purpose" value="0033611607946 |||+213 48557627|||050/123456"/>
              <taggedValue xmi:id="_BJiHVDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BJiHVTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BJiHVjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BJiHVzgPEeiv1bKJKPS_Mg" body="'^\\+[0-9]{1,3}\.[0-9]+\.[0-9]+$'" language="MySQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BJiHWDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BJiHWTgPEeiv1bKJKPS_Mg" body="'^\+[0-9]{1,3}\.[0-9]+\.[0-9]+$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpjzgOEeiv1bKJKPS_Mg" name="Mobile number of India">
        <parameters xmi:id="_9ICpkDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpkTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Mobile_number_of_India_0.1.pattern#__RSB4IycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BKnFYDgPEeiv1bKJKPS_Mg" name="Mobile number of India">
              <taggedValue xmi:id="_BKnFYTgPEeiv1bKJKPS_Mg" tag="Author" value="Nandip Makwana"/>
              <taggedValue xmi:id="_BKnFYjgPEeiv1bKJKPS_Mg" tag="Description" value="This expression will be useful to check mobile &#xD;&#xA;number of India. This expression will check &#xD;&#xA;various types of number like number in local &#xD;&#xA;format or international number separated by &#xD;&#xA;hyphen(-) or not."/>
              <taggedValue xmi:id="_BKnFYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="+919123456789 ||| +91-9123456789 ||| 919123456789 ||| 09123456789 ||| 91234567898123456789 ||| +91-912345678 ||| +9191234567890"/>
              <taggedValue xmi:id="_BKnFZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BKnFZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BKnFZjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BKnFZzgPEeiv1bKJKPS_Mg" body="'(\\+91(-)?|91(-)?|0(-)?)?(9)[0-9]{9}'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpkjgOEeiv1bKJKPS_Mg" name="Phone Brazil">
        <parameters xmi:id="_9ICpkzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICplDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Brazil_0.1.pattern#_mRzFgIycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BLsDcDgPEeiv1bKJKPS_Mg" name="Phone Brazil">
              <taggedValue xmi:id="_BLsDcTgPEeiv1bKJKPS_Mg" tag="Author" value="Cleiton Francisco"/>
              <taggedValue xmi:id="_BLsDcjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches Brazilian phone numbers, includes DDD (long-distance call) with or without 0. Accepts characters -, . and [space] as separators."/>
              <taggedValue xmi:id="_BLsDczgPEeiv1bKJKPS_Mg" tag="Purpose" value="011 5555-1234|||(011) 5555 1234|||(11) 5555.1234|||1155551234(011 5555-1234|||(01) 5555 1234|||(11) 0555.1234|||(11) 5555 abcd"/>
              <taggedValue xmi:id="_BLsDdDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BLsDdTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BLsDdjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BLsDdzgPEeiv1bKJKPS_Mg" body="'^((\(0?[1-9][0-9]\))|(0?[1-9][0-9]))[ -.]?([1-9][0-9]{3})[ -.]?([0-9]{4})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICplTgOEeiv1bKJKPS_Mg" name="Phone Number">
        <parameters xmi:id="_9ICpljgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICplzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Number_0.1.pattern#_S7m6oIyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BMzdwDgPEeiv1bKJKPS_Mg" name="Phone Number">
              <taggedValue xmi:id="_BMzdwTgPEeiv1bKJKPS_Mg" tag="Author" value="Tim N Tousley"/>
              <taggedValue xmi:id="_BMzdwjgPEeiv1bKJKPS_Mg" tag="Description" value="Very flexible phone number entry. -- There are many valid ways to enter a phone number, and often there is other data that a restrictive Regex pattern will not abide. -- This pattern accepts any number of letters, commas, pound signs, slashes, spaces, periods, parenthesis, hyphens, plus signs, and asterisks... but amongst it scans for a minimum of 7 digits (modify {7} to adjust the minimum number of required digits (i.e. 10 for area code + phone number, 18 for long international numbers). -- This pattern does not attempt to restrict the entered phone number format in any way, but instead just verfies that enough digits for one was entered. -- Data in excess of the 7 required digits is allowed. -- I've posted another submission that forces compliance for US phone numbers."/>
              <taggedValue xmi:id="_BMzdwzgPEeiv1bKJKPS_Mg" tag="Purpose" value="1234567 ||| 12345678 ||| (555) 987-6543 ext 210 ||| 999-666-7777-x1967123456 ||| 555-123"/>
              <taggedValue xmi:id="_BMzdxDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BMzdxTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BMzdxjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BMzdxzgPEeiv1bKJKPS_Mg" body="'^([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){7}[0-9a-zA-Z,#/ \.\(\)\-\+\*]*$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpmDgOEeiv1bKJKPS_Mg" name="Blank text">
        <parameters xmi:id="_9ICpmTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpmjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Blank_text_0.1.pattern#_N7yi0Gk3Ed2I1bT57-sHUw"/>
            <builtInPatterns xmi:id="_BN7fIDgPEeiv1bKJKPS_Mg" name="Blank text">
              <taggedValue xmi:id="_BN7fITgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BN7fIjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with only white spaces"/>
              <taggedValue xmi:id="_BN7fIzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search for blank text"/>
              <taggedValue xmi:id="_BN7fJDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BN7fJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BN7fJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BN7fJzgPEeiv1bKJKPS_Mg" body="'^[[:blank:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BN7fKDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BN7fKTgPEeiv1bKJKPS_Mg" body="'^\s*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpmzgOEeiv1bKJKPS_Mg" name="Empty text">
        <parameters xmi:id="_9ICpnDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpnTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Empty_text_0.1.pattern#_vZ6_IGk6Ed2I1bT57-sHUw"/>
            <builtInPatterns xmi:id="_BPYQoDgPEeiv1bKJKPS_Mg" name="Empty text">
              <taggedValue xmi:id="_BPYQoTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BPYQojgPEeiv1bKJKPS_Mg" tag="Description" value="Will matches values with only whitespaces or tabulation character. Regexp class: [:space:]"/>
              <taggedValue xmi:id="_BPYQozgPEeiv1bKJKPS_Mg" tag="Purpose" value="Identify values with only space characters"/>
              <taggedValue xmi:id="_BPYQpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BPYQpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BPYQpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BPYQpzgPEeiv1bKJKPS_Mg" body="'^[[:space:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BPYQqDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BPYQqTgPEeiv1bKJKPS_Mg" body="'^[\n|\t|\v|\f]*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpnjgOEeiv1bKJKPS_Mg" name="Home Row Text">
        <parameters xmi:id="_9ICpnzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpoDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Home_Row_Text_0.1.pattern#_e4vUoYyZEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BQm_sDgPEeiv1bKJKPS_Mg" name="Home Row Text">
              <taggedValue xmi:id="_BQm_sTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BQm_sjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with random sequences at least 3 consonants such as &quot;smqljfmj&quot;"/>
              <taggedValue xmi:id="_BQm_szgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search random sequences with keys from the home row"/>
              <taggedValue xmi:id="_BQm_tDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BQm_tTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BQm_tjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BQm_tzgPEeiv1bKJKPS_Mg" body="'[qsdfghjklmQSDFGHJKLM]{3,}'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpoTgOEeiv1bKJKPS_Mg" name="Linux Path Verify">
        <parameters xmi:id="_9ICpojgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpozgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Linux_Path_Verify_0.1.pattern#_IqpTEIyfEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BSlVoDgPEeiv1bKJKPS_Mg" name="Linux Path Verify">
              <taggedValue xmi:id="_BSlVoTgPEeiv1bKJKPS_Mg" tag="Author" value="Brandon Vasquez"/>
              <taggedValue xmi:id="_BSlVojgPEeiv1bKJKPS_Mg" tag="Description" value="This expressions was written for C#. Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also  will only match files that have extensions consisting of 2, 3, or 4 characters. Currently fails with _ . or - in the path, this will be updated at some point."/>
              <taggedValue xmi:id="_BSlVozgPEeiv1bKJKPS_Mg" tag="Purpose" value="/mnt/share/|||/home/.BASH|||/mnt/share/pic.jpeg|||/mnt/share/install.shmnt/share|||//mnt///share//|||/mnt/share/install.installer|||/home\user"/>
              <taggedValue xmi:id="_BSlVpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BSlVpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BSlVpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BSlVpzgPEeiv1bKJKPS_Mg" body="'^/{1}(((/{1}\.{1})?[a-zA-Z0-9 ]+/?)+(\.{1}[a-zA-Z0-9]{2,4})?)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICppDgOEeiv1bKJKPS_Mg" name="No special chart">
        <parameters xmi:id="_9ICppTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICppjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/No_special_chart_0.1.pattern#_6rm3QIycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BTvMMDgPEeiv1bKJKPS_Mg" name="No special chart">
              <taggedValue xmi:id="_BTvMMTgPEeiv1bKJKPS_Mg" tag="Author" value="Mohammed Rafiq .M"/>
              <taggedValue xmi:id="_BTvMMjgPEeiv1bKJKPS_Mg" tag="Description" value="Allow only 3 charcters or number without any special characters"/>
              <taggedValue xmi:id="_BTvMMzgPEeiv1bKJKPS_Mg" tag="Purpose" value="QDE|||QDE#RF"/>
              <taggedValue xmi:id="_BTvMNDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BTvMNTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BTvMNjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BTvMNzgPEeiv1bKJKPS_Mg" body="'^[A-Za-z0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICppzgOEeiv1bKJKPS_Mg" name="Random sequence of text">
        <parameters xmi:id="_9ICpqDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpqTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Random_sequence_of_text_0.1.pattern#_gDqDcP9eEd2mwaQf90ozSg"/>
            <builtInPatterns xmi:id="_BU2mgDgPEeiv1bKJKPS_Mg" name="Random sequence of text">
              <taggedValue xmi:id="_BU2mgTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BU2mgjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with random sequences at least 4 consonants such as &quot;smqljfmj&quot;"/>
              <taggedValue xmi:id="_BU2mgzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search random sequences"/>
              <taggedValue xmi:id="_BU2mhDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BU2mhTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BU2mhjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BU2mhzgPEeiv1bKJKPS_Mg" body="'[zrtypqsdfghjklmwxcvbnZRTYPQSDFGHJKLMWXCVBN]{4,}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpqjgOEeiv1bKJKPS_Mg" name="Starts with blank">
        <parameters xmi:id="_9ICpqzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICprDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_blank_0.1.pattern#_18GtIIyaEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BWAdEDgPEeiv1bKJKPS_Mg" name="Starts with blank">
              <taggedValue xmi:id="_BWAdETgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BWAdEjgPEeiv1bKJKPS_Mg" tag="Description" value="matches: '  aa'&#xA;does not match: 'aa'"/>
              <taggedValue xmi:id="_BWAdEzgPEeiv1bKJKPS_Mg" tag="Purpose" value="detect data starting with blank characters"/>
              <taggedValue xmi:id="_BWAdFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BWAdFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BWAdFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BWAdFzgPEeiv1bKJKPS_Mg" body="'^[[:blank:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BWAdGDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BWAdGTgPEeiv1bKJKPS_Mg" body="'^\s+.*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICprTgOEeiv1bKJKPS_Mg" name="Starts with space">
        <parameters xmi:id="_9ICprjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICprzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_space_0.1.pattern#_scYqYIyaEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BXKToDgPEeiv1bKJKPS_Mg" name="Starts with space">
              <taggedValue xmi:id="_BXKToTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BXKTojgPEeiv1bKJKPS_Mg" tag="Description" value="matches: '&#x9;sklqjf', ' dqd'&#xA;non-matches: 'dsm:kljf'"/>
              <taggedValue xmi:id="_BXKTozgPEeiv1bKJKPS_Mg" tag="Purpose" value="detect whitespace at the begining of a data"/>
              <taggedValue xmi:id="_BXKTpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BXKTpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BXKTpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BXKTpzgPEeiv1bKJKPS_Mg" body="'^[[:space:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BXKTqDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BXKTqTgPEeiv1bKJKPS_Mg" body="'^[\n|\t|\v|\f]+[^(\n|\t|\v|\f)]*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpsDgOEeiv1bKJKPS_Mg" name="Starts with uppercase">
        <parameters xmi:id="_9ICpsTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICpsjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_uppercase_0.1.pattern#_53rX8AMvEeKk6OZDw5mXOQ"/>
            <builtInPatterns xmi:id="_BYbe8DgPEeiv1bKJKPS_Mg" name="Starts with uppercase">
              <taggedValue xmi:id="_BYbe8TgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia@talend.com"/>
              <taggedValue xmi:id="_BYbe8jgPEeiv1bKJKPS_Mg" tag="Description" value="Will match when the first character of a text is an uppercase letter. For example, &quot;Axel&quot;, &quot;Street&quot; will match.&#xA;But &quot;31&quot;, &quot;john doe&quot;, &quot;3RD FLOOR&quot;, &quot;street&quot; will not match."/>
              <taggedValue xmi:id="_BYbe8zgPEeiv1bKJKPS_Mg" tag="Purpose" value="identify words in uppercase"/>
              <taggedValue xmi:id="_BYbe9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BYbe9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BYbe9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BYbe9zgPEeiv1bKJKPS_Mg" body="'^[A-Z]+'" language="SQL" modificationDate="2012-09-20 16:31:53"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9ICpszgOEeiv1bKJKPS_Mg" name="Uppercased Single Word">
        <parameters xmi:id="_9ICptDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICptTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Uppercased_Single_Word_0.1.pattern#_FyTwIHnTEd2weu9skTiCqA"/>
            <builtInPatterns xmi:id="_BZnxwDgPEeiv1bKJKPS_Mg" name="Uppercased Single Word">
              <taggedValue xmi:id="_BZnxwTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_BZnxwjgPEeiv1bKJKPS_Mg" tag="Description" value="Will match when all characters of a word are uppercased. For example, &quot;AXEL&quot;, &quot;STREET&quot; will match.&#xA;But &quot;31&quot;, &quot;JOHN DOE&quot;, &quot;3RD FLOOR&quot;, &quot;street&quot; will not match."/>
              <taggedValue xmi:id="_BZnxwzgPEeiv1bKJKPS_Mg" tag="Purpose" value="identify words in uppercase"/>
              <taggedValue xmi:id="_BZnxxDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BZnxxTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BZnxxjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BZnxxzgPEeiv1bKJKPS_Mg" body="'^[A-Z]*$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zfll8jSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_9ICptjgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICptzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DLGWcTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BaEdsDgPEeiv1bKJKPS_Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_BaEdsTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_BaEdsjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_BaEdszgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_9ICpuDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpuTgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl8DgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; WHERE &quot;BIRTH&quot; IS NULL " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BaetYDgPEeiv1bKJKPS_Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_BaetYTgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_BaetYjgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_BaetYzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_9ICpujgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpuzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl8TgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &quot;BIRTH&quot; FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; ) A" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Ba7ZUDgPEeiv1bKJKPS_Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_Ba7ZUTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_Ba7ZUjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_Ba7ZUzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_9ICpvDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpvTgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl8jgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &quot;BIRTH&quot;, COUNT(*) mycount FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  GROUP BY &quot;BIRTH&quot; HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BbYFQDgPEeiv1bKJKPS_Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_BbYFQTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_BbYFQjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_BbYFQzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_BbYFRDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BbYFRTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BbYFRjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BbYFRzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_BbYFSDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_BbYFSTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_9ICpvjgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpvzgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl8zgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &quot;BIRTH&quot;, COUNT(*) mycount FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot;  m  GROUP BY &quot;BIRTH&quot; HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Bb0xMDgPEeiv1bKJKPS_Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_Bb0xMTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_Bb0xMjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_Bb0xMzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_Bb0xNDgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Bb0xNTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Bb0xNjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Bb0xNzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_Bb0xODgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Bb0xOTgPEeiv1bKJKPS_Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RangeIndicator" xmi:id="_9ICpwDgOEeiv1bKJKPS_Mg" computed="true">
        <parameters xmi:id="_9ICpwTgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Range_0.1.definition#_ccI49hF2Ed2PKb6nEJEvhw"/>
        <lowerValue xmi:id="_9ICpwjgOEeiv1bKJKPS_Mg">
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Minimum_0.1.definition#_ccJgABF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl9DgPEeiv1bKJKPS_Mg" body="SELECT MIN(&quot;BIRTH&quot;) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Be4FMDgPEeiv1bKJKPS_Mg" name="Minimum" label="Minimum">
            <taggedValue xmi:id="_Be4FMTgPEeiv1bKJKPS_Mg" tag="Description" value="gives the minimal record"/>
            <taggedValue xmi:id="_Be4FMjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the minimal record"/>
            <sqlGenericExpression xmi:id="_Be4FMzgPEeiv1bKJKPS_Mg" body="SELECT MIN(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          </builtInIndicatorDefinition>
        </lowerValue>
        <upperValue xmi:id="_9ICpwzgOEeiv1bKJKPS_Mg">
          <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
          <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Maximum_0.1.definition#_ccJgARF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl9TgPEeiv1bKJKPS_Mg" body="SELECT MAX(&quot;BIRTH&quot;) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
          <builtInIndicatorDefinition xmi:id="_Bi3NUDgPEeiv1bKJKPS_Mg" name="Maximum" label="Maximum">
            <taggedValue xmi:id="_Bi3NUTgPEeiv1bKJKPS_Mg" tag="Description" value="gives the maximal record"/>
            <taggedValue xmi:id="_Bi3NUjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the maximal record"/>
            <sqlGenericExpression xmi:id="_Bi3NUzgPEeiv1bKJKPS_Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          </builtInIndicatorDefinition>
        </upperValue>
      </indicators>
      <indicators xsi:type="dataquality.indicators:ModeIndicator" xmi:id="_9ICpxDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpxTgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICpxjgOEeiv1bKJKPS_Mg"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Mode_0.1.definition#_ccIR4RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl9jgPEeiv1bKJKPS_Mg" body="SELECT TOP 1   DATEPART(YEAR , &quot;BIRTH&quot;) , COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; m  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  ORDER BY COUNT(*) DESC " language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BjRdADgPEeiv1bKJKPS_Mg" name="Mode" label="Mode">
          <taggedValue xmi:id="_BjRdATgPEeiv1bKJKPS_Mg" tag="Description" value="computes the mode (most probable value). For numerical data or continuous data, bins can be set in the parameters of this indicator. It is different from the average and from the median. Generalization of it is an histogram. It is good for addressing categorical attributes"/>
          <taggedValue xmi:id="_BjRdAjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent value"/>
          <sqlGenericExpression xmi:id="_BjRdAzgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="SQL"/>
          <sqlGenericExpression xmi:id="_BjRdBDgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="Oracle"/>
          <sqlGenericExpression xmi:id="_BjRdBTgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="DB2"/>
          <sqlGenericExpression xmi:id="_BjRdBjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BjRdBzgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_BjRdCDgPEeiv1bKJKPS_Mg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC " language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_BjRdCTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:FrequencyIndicator" xmi:id="_9ICpxzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpyDgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Frequency_Table_0.1.definition#_ccIR4hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl9zgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  &quot;BIRTH&quot;, COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY &quot;BIRTH&quot; ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BjuI8DgPEeiv1bKJKPS_Mg" name="Frequency Table" label="Frequency Table">
          <taggedValue xmi:id="_BjuI8TgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="_BjuI8jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_BjuI8zgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BjuI9DgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BjuI9TgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BjuI9jgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BjuI9zgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BjuI-DgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BjuI-TgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DateFrequencyIndicator" xmi:id="_9ICpyTgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpyjgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICpyzgOEeiv1bKJKPS_Mg" dateAggregationType="day"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Date_Frequency_Table_0.1.definition#_hraIkTE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl-DgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;)  , DATEPART(DAY , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;)  , DATEPART(DAY , &quot;BIRTH&quot;)  ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BkNRIDgPEeiv1bKJKPS_Mg" name="Date Frequency Table" label="Date Frequency Table">
          <taggedValue xmi:id="_BkNRITgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record aggregates data according to day"/>
          <taggedValue xmi:id="_BkNRIjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_BkNRIzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BkNRJDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BkNRJTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BkNRJjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BkNRJzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BkNRKDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BkNRKTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:WeekFrequencyIndicator" xmi:id="_9ICpzDgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICpzTgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICpzjgOEeiv1bKJKPS_Mg" dateAggregationType="week"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Week_Frequency_Table_0.1.definition#_hraIlDE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl-TgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;)  ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BkzHADgPEeiv1bKJKPS_Mg" name="Week Frequency Table" label="Week Frequency Table">
          <taggedValue xmi:id="_BkzHATgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="_BkzHAjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_BkzHAzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BkzHBDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BkzHBTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BkzHBjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BkzHBzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BkzHCDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BkzHCTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MonthFrequencyIndicator" xmi:id="_9ICpzzgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp0DgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp0TgOEeiv1bKJKPS_Mg" dateAggregationType="month"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Month_Frequency_Table_0.1.definition#_hraIkjE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl-jgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BlSPMDgPEeiv1bKJKPS_Mg" name="Month Frequency Table" label="Month Frequency Table">
          <taggedValue xmi:id="_BlSPMTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to month"/>
          <taggedValue xmi:id="_BlSPMjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_BlSPMzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BlSPNDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BlSPNTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BlSPNjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BlSPNzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BlSPODgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BlSPOTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:QuarterFrequencyIndicator" xmi:id="_9ICp0jgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp0zgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp1DgOEeiv1bKJKPS_Mg" dateAggregationType="quarter"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Quarter_Frequency_Table_0.1.definition#_hraIkzE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl-zgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Bl4FEDgPEeiv1bKJKPS_Mg" name="Quarter Frequency Table" label="Quarter Frequency Table">
          <taggedValue xmi:id="_Bl4FETgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to quarter"/>
          <taggedValue xmi:id="_Bl4FEjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_Bl4FEzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_Bl4FFDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Bl4FFTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Bl4FFjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_Bl4FFzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_Bl4FGDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Bl4FGTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:YearFrequencyIndicator" xmi:id="_9ICp1TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp1jgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp1zgOEeiv1bKJKPS_Mg"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Year_Frequency_Table_0.1.definition#_hraIlTE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl_DgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BmeiADgPEeiv1bKJKPS_Mg" name="Year Frequency Table" label="Year Frequency Table">
          <taggedValue xmi:id="_BmeiATgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to year"/>
          <taggedValue xmi:id="_BmeiAjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent records"/>
          <sqlGenericExpression xmi:id="_BmeiAzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BmeiBDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BmeiBTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BmeiBjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BmeiBzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BmeiCDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BmeiCTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:LowFrequencyIndicator" xmi:id="_9ICp2DgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp2TgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Low_Frequency_Table_0.1.definition#_-0C00JOtEd2Iyo0dtkB9pA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl_TgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  &quot;BIRTH&quot;, COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY &quot;BIRTH&quot; ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Bm4xsDgPEeiv1bKJKPS_Mg" name="Low Frequency Table" label="Low Frequency Table">
          <taggedValue xmi:id="_Bm4xsTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record"/>
          <taggedValue xmi:id="_Bm4xsjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_Bm4xszgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_Bm4xtDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Bm4xtTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Bm4xtjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_Bm4xtzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_Bm4xuDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DateLowFrequencyIndicator" xmi:id="_9ICp2jgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp2zgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp3DgOEeiv1bKJKPS_Mg" dateAggregationType="day"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Date_Low_Frequency_Table_0.1.definition#_hraIljE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl_jgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;)  , DATEPART(DAY , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;)  , DATEPART(DAY , &quot;BIRTH&quot;)  ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BnVdoDgPEeiv1bKJKPS_Mg" name="Date Low Frequency Table" label="Date Low Frequency Table">
          <taggedValue xmi:id="_BnVdoTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to day"/>
          <taggedValue xmi:id="_BnVdojgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_BnVdozgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BnVdpDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BnVdpTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BnVdpjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BnVdpzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BnVdqDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:WeekLowFrequencyIndicator" xmi:id="_9ICp3TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp3jgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp3zgOEeiv1bKJKPS_Mg" dateAggregationType="week"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Week_Low_Frequency_Table_0.1.definition#_hraImTE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAl_zgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  , DATEPART(WEEK , &quot;BIRTH&quot;)  ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Bnz-wDgPEeiv1bKJKPS_Mg" name="Week Low Frequency Table" label="Week Low Frequency Table">
          <taggedValue xmi:id="_Bnz-wTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to week"/>
          <taggedValue xmi:id="_Bnz-wjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_Bnz-wzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_Bnz-xDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Bnz-xTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Bnz-xjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_Bnz-xzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_Bnz-yDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MonthLowFrequencyIndicator" xmi:id="_9ICp4DgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp4TgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp4jgOEeiv1bKJKPS_Mg" dateAggregationType="month"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Month_Low_Frequency_Table_0.1.definition#_hraIlzE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmADgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  , DATEPART(MONTH , &quot;BIRTH&quot;)  ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BoTG8DgPEeiv1bKJKPS_Mg" name="Month Low Frequency Table" label="Month Low Frequency Table">
          <taggedValue xmi:id="_BoTG8TgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to month"/>
          <taggedValue xmi:id="_BoTG8jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_BoTG8zgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BoTG9DgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BoTG9TgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BoTG9jgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BoTG9zgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BoTG-DgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:QuarterLowFrequencyIndicator" xmi:id="_9ICp4zgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp5DgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp5TgOEeiv1bKJKPS_Mg" dateAggregationType="quarter"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Quarter_Low_Frequency_Table_0.1.definition#_hraImDE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmATgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  , DATEPART(QUARTER , &quot;BIRTH&quot;)  ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Bovy4DgPEeiv1bKJKPS_Mg" name="Quarter Low Frequency Table" label="Quarter Low Frequency Table">
          <taggedValue xmi:id="_Bovy4TgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to month"/>
          <taggedValue xmi:id="_Bovy4jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_Bovy4zgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_Bovy5DgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_Bovy5TgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Bovy5jgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_Bovy5zgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_Bovy6DgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:YearLowFrequencyIndicator" xmi:id="_9ICp5jgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp5zgOEeiv1bKJKPS_Mg">
          <dateParameters xmi:id="_9ICp6DgOEeiv1bKJKPS_Mg"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Advanced Statistics/Year_Low_Frequency_Table_0.1.definition#_hraImjE2EeGvsfvHpG2Eqg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmAjgPEeiv1bKJKPS_Mg" body="SELECT TOP 10  DATEPART(YEAR , &quot;BIRTH&quot;) , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY DATEPART(YEAR , &quot;BIRTH&quot;)  ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BpO7EDgPEeiv1bKJKPS_Mg" name="Year Low Frequency Table" label="Year Low Frequency Table">
          <taggedValue xmi:id="_BpO7ETgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct record according to year"/>
          <taggedValue xmi:id="_BpO7EjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent records"/>
          <sqlGenericExpression xmi:id="_BpO7EzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BpO7FDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BpO7FTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BpO7FjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BpO7FzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BpO7GDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternFreqIndicator" xmi:id="_9ICp6TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp6jgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Frequency_Table_0.1.definition#_kQzTsJR-Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmAzgPEeiv1bKJKPS_Mg" bodyquot;BIRTH&quot; AS CHAR(20)) ,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') , COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; tquot;BIRTH&quot; AS CHAR(20)) ,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') ORDER BY c DESC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BppKwDgPEeiv1bKJKPS_Mg" name="Pattern Frequency Table" label="Pattern Frequency Table">
          <taggedValue xmi:id="_BppKwTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of records for each distinct pattern"/>
          <taggedValue xmi:id="_BppKwjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the most frequent patterns"/>
          <sqlGenericExpression xmi:id="_BppKwzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BppKxDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BppKxTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BppKxjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BppKxzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BppKyDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_BppKyTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_BppKyjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_BppKyzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BppKzDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_BppKzTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Netezza"/>
          <charactersMapping xmi:id="_BppKzjgPEeiv1bKJKPS_Mg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppKzzgPEeiv1bKJKPS_Mg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK0DgPEeiv1bKJKPS_Mg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK0TgPEeiv1bKJKPS_Mg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK0jgPEeiv1bKJKPS_Mg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK0zgPEeiv1bKJKPS_Mg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK1DgPEeiv1bKJKPS_Mg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK1TgPEeiv1bKJKPS_Mg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK1jgPEeiv1bKJKPS_Mg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK1zgPEeiv1bKJKPS_Mg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK2DgPEeiv1bKJKPS_Mg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BppK2TgPEeiv1bKJKPS_Mg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:PatternLowFreqIndicator" xmi:id="_9ICp6zgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp7DgOEeiv1bKJKPS_Mg"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Frequency Statistics/Pattern_Low_Frequency_Table_0.1.definition#_OCTbwJR_Ed2XO-JvLwVAwg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmBDgPEeiv1bKJKPS_Mg" bodyquot;BIRTH&quot; AS CHAR(20)) ,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9'), COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; tquot;BIRTH&quot; AS CHAR(20)) ,'a','a'),'b','a'),'c','a'),'d','a'),'e','a'),'f','a'),'g','a'),'h','a'),'i','a'),'j','a'),'k','a'),'l','a'),'m','a'),'n','a'),'o','a'),'p','a'),'q','a'),'r','a'),'s','a'),'t','a'),'u','a'),'v','a'),'w','a'),'x','a'),'y','a'),'z','a'),'A','A'),'B','A'),'C','A'),'D','A'),'E','A'),'F','A'),'G','A'),'H','A'),'I','A'),'J','A'),'K','A'),'L','A'),'M','A'),'N','A'),'O','A'),'P','A'),'Q','A'),'R','A'),'S','A'),'T','A'),'U','A'),'V','A'),'W','A'),'X','A'),'Y','A'),'Z','A'),'0','9'),'1','9'),'2','9'),'3','9'),'4','9'),'5','9'),'6','9'),'7','9'),'8','9'),'9','9') ORDER BY c ASC" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_BqKvMDgPEeiv1bKJKPS_Mg" name="Pattern Low Frequency Table" label="Pattern Low Frequency Table">
          <taggedValue xmi:id="_BqKvMTgPEeiv1bKJKPS_Mg" tag="Description" value="counts the number of patterns for each distinct pattern"/>
          <taggedValue xmi:id="_BqKvMjgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluates the less frequent patterns"/>
          <sqlGenericExpression xmi:id="_BqKvMzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_BqKvNDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_BqKvNTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_BqKvNjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_BqKvNzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_BqKvODgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="AS/400"/>
          <sqlGenericExpression xmi:id="_BqKvOTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_BqKvOjgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_BqKvOzgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_BqKvPDgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_BqKvPTgPEeiv1bKJKPS_Mg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Netezza"/>
          <charactersMapping xmi:id="_BqKvPjgPEeiv1bKJKPS_Mg" language="SQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvPzgPEeiv1bKJKPS_Mg" name="Characters mapping on MySQL" language="MySQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvQDgPEeiv1bKJKPS_Mg" name="Characters mapping on Oracle" language="Oracle" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvQTgPEeiv1bKJKPS_Mg" name="Characters mapping on PostgreSQL" language="PostgreSQL" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvQjgPEeiv1bKJKPS_Mg" name="Characters mapping on Informix" language="Informix" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvQzgPEeiv1bKJKPS_Mg" name="Characters mapping on Microsoft SQL Server" language="Microsoft SQL Server" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvRDgPEeiv1bKJKPS_Mg" name="Characters mapping on DB2" language="DB2" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvRTgPEeiv1bKJKPS_Mg" name="Characters mapping on AS/400" language="AS/400" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvRjgPEeiv1bKJKPS_Mg" name="Characters mapping on Teradata" language="Teradata" charactersToReplace="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvRzgPEeiv1bKJKPS_Mg" name="Characters mapping on Vertica" language="Vertica Database" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvSDgPEeiv1bKJKPS_Mg" language="Netezza" charactersToReplace="abcdefghijklmnopqrstuvwxyzçâêîôûéèùïöüABCDEFGHIJKLMNOPQRSTUVWXYZÇÂÊÎÔÛÉÈÙÏÖÜ0123456789" replacementCharacters="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9999999999"/>
          <charactersMapping xmi:id="_BqKvSTgPEeiv1bKJKPS_Mg" name="Characters mapping on Hive" language="Hive" charactersToReplace="0123456789abcdefghijklmnopqrstuvwxyz?aê???éèù??üABCDEFGHIJKLMNOPQRSTUVWXYZ??ê???éèù??ü" replacementCharacters="9999999999aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BenfordLawFrequencyIndicator" xmi:id="_9ICp7TgOEeiv1bKJKPS_Mg">
        <parameters xmi:id="_9ICp7jgOEeiv1bKJKPS_Mg" topN="50">
          <dateParameters xmi:id="_9ICp7zgOEeiv1bKJKPS_Mg"/>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Fraud Detection/Benford_Law_Frequency_0.1.definition#_yRkFIezIEeG0fbygDv6UrQ"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmBTgPEeiv1bKJKPS_Mg" body="SELECT TOP 50  cast(LEFT(DATEPART(YEAR , &quot;BIRTH&quot;) ,1) as char), COUNT(*) c FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; t  GROUP BY LEFT(DATEPART(YEAR , &quot;BIRTH&quot;) ,1) order by LEFT(DATEPART(YEAR , &quot;BIRTH&quot;) ,1)" language="Microsoft SQL Server"/>
        <builtInIndicatorDefinition xmi:id="_Bqk-4DgPEeiv1bKJKPS_Mg" name="Benford Law Frequency" label="Benford Law Frequency">
          <taggedValue xmi:id="_Bqk-4TgPEeiv1bKJKPS_Mg" tag="Description" value="Benford's law is used by accountants to detect possible instances of fraud based on the distribution of digits in numbers."/>
          <taggedValue xmi:id="_Bqk-4jgPEeiv1bKJKPS_Mg" tag="Purpose" value="evaluate the possible instances of fraud"/>
          <sqlGenericExpression xmi:id="_Bqk-4zgPEeiv1bKJKPS_Mg" body="SELECT cast(LEFT(&lt;%=__COLUMN_NAMES__%>,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY LEFT(&lt;%=__COLUMN_NAMES__%>,1) order by LEFT(&lt;%=__COLUMN_NAMES__%>,1)" language="SQL"/>
          <sqlGenericExpression xmi:id="_Bqk-5DgPEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) order by SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1)" language="Oracle"/>
          <sqlGenericExpression xmi:id="_Bqk-5TgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2) order by SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char) FROM 1 FOR 2)" language="Teradata"/>
          <sqlGenericExpression xmi:id="_Bqk-5jgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2), COUNT(*)  FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2) order by SUBSTRING(cast(&lt;%=__COLUMN_NAMES__%> as char),1,2)" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_Bqk-5zgPEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,0,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Informix"/>
          <sqlGenericExpression xmi:id="_Bqk-6DgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1) order by SUBSTRING(CONVERT(char(15),&lt;%=__COLUMN_NAMES__%>),1,1)" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_Bqk-6TgPEeiv1bKJKPS_Mg" body="SELECT substr(&lt;%=__COLUMN_NAMES__%>,1,1), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY substr(&lt;%=__COLUMN_NAMES__%>,1,1)" language="Hive"/>
          <sqlGenericExpression xmi:id="_Bqk-6jgPEeiv1bKJKPS_Mg" body="SELECT SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1) , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1) order by SUBSTR(TO_CHAR(&lt;%=__COLUMN_NAMES__%>),1,1)" language="Vertica Database"/>
          <sqlGenericExpression xmi:id="_Bqk-6zgPEeiv1bKJKPS_Mg" body="SELECT cast(SUBSTR(&lt;%=__COLUMN_NAMES__%>,1,1) as char), COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Netezza"/>
          <sqlGenericExpression xmi:id="_Bqk-7DgPEeiv1bKJKPS_Mg" body="SELECT SUBSTRING(&lt;%=__COLUMN_NAMES__%>,1,1), COUNT(*)  FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 1 order by 1" language="Redshift"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SqlPatternMatchingIndicator" xmi:id="_9ICp8DgOEeiv1bKJKPS_Mg" name="Email Gmail from Google">
        <parameters xmi:id="_9ICp8TgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9ICp8jgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Gmail_from_Google_0.1.pattern#_5tDp8LoaEd2CVq07lsaT2w"/>
            <builtInPatterns xmi:id="_BrxRsDgPEeiv1bKJKPS_Mg" name="Email Gmail from Google">
              <taggedValue xmi:id="_BrxRsTgPEeiv1bKJKPS_Mg" tag="Author" value="Abdelhak KHENOUCHE"/>
              <taggedValue xmi:id="_BrxRsjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses to gmail.com provider"/>
              <taggedValue xmi:id="_BrxRszgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="_BrxRtDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BrxRtTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BrxRtjgPEeiv1bKJKPS_Mg" expressionType="SQL like">
                <expression xmi:id="_BrxRtzgPEeiv1bKJKPS_Mg" body="'%@gmail.com'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/SQL_Pattern_Matching_0.1.definition#_Z4vXcERgEd2RSqFSgXiIfA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmBjgPEeiv1bKJKPS_Mg" body="SELECT COUNT(CASE WHEN &quot;BIRTH&quot; LIKE '%@gmail.com' THEN 1 END), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SqlPatternMatchingIndicator" xmi:id="_9IFEEDgOEeiv1bKJKPS_Mg" name="Email Yahoo">
        <parameters xmi:id="_9IFEETgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEEjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/SQL/internet/Email_Yahoo_0.1.pattern#_jyAMQbo4Ed2fB5cidg4eog"/>
            <builtInPatterns xmi:id="_Bs_ZsDgPEeiv1bKJKPS_Mg" name="Email Yahoo">
              <taggedValue xmi:id="_Bs_ZsTgPEeiv1bKJKPS_Mg" tag="Author" value="Abdelhak KHENOUCHE"/>
              <taggedValue xmi:id="_Bs_ZsjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses to Yahoo.com, Yahoo.fr  provider and so on"/>
              <taggedValue xmi:id="_Bs_ZszgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="_Bs_ZtDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Bs_ZtTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Bs_ZtjgPEeiv1bKJKPS_Mg" expressionType="SQL like">
                <expression xmi:id="_Bs_ZtzgPEeiv1bKJKPS_Mg" body="'%@yahoo.%'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/SQL_Pattern_Matching_0.1.definition#_Z4vXcERgEd2RSqFSgXiIfA"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_DWAmBzgPEeiv1bKJKPS_Mg" body="SELECT COUNT(CASE WHEN &quot;BIRTH&quot; LIKE '%@yahoo.%' THEN 1 END), COUNT(*) FROM &quot;ECD&quot;.&quot;dbo&quot;.&quot;MEMB_COMPANY_V&quot; " language="Microsoft SQL Server"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEEzgOEeiv1bKJKPS_Mg" name="BE Code postal">
        <parameters xmi:id="_9IFEFDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEFTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_BuJ3UDgPEeiv1bKJKPS_Mg" name="BE Code postal">
              <taggedValue xmi:id="_BuJ3UTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Belgian postal codes."/>
              <taggedValue xmi:id="_BuJ3UjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches standard Belgian postal codes."/>
              <taggedValue xmi:id="_BuJ3UzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_BuJ3VDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BuJ3VTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BuJ3VjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BuJ3VzgPEeiv1bKJKPS_Mg" body="'^(F-[0-9]{4,5}|B-[0-9]{4})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEFjgOEeiv1bKJKPS_Mg" name="DE Postleitzahl (postal code)">
        <parameters xmi:id="_9IFEFzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEGDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_rK7EgD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_BvTt4DgPEeiv1bKJKPS_Mg" name="DE Postleitzahl (postal code)">
              <taggedValue xmi:id="_BvTt4TgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of German postal codes."/>
              <taggedValue xmi:id="_BvTt4jgPEeiv1bKJKPS_Mg" tag="Description" value="Matches standard German postal codes."/>
              <taggedValue xmi:id="_BvTt4zgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_BvTt5DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BvTt5TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BvTt5jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BvTt5zgPEeiv1bKJKPS_Mg" body="'^[0-9]{5}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEGTgOEeiv1bKJKPS_Mg" name="FR Code postal">
        <parameters xmi:id="_9IFEGjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEGzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_EJ_moD4LEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_Bwic8DgPEeiv1bKJKPS_Mg" name="FR Code postal">
              <taggedValue xmi:id="_Bwic8TgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of French postal codes."/>
              <taggedValue xmi:id="_Bwic8jgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the French postal codes"/>
              <taggedValue xmi:id="_Bwic8zgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_Bwic9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Bwic9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Bwic9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Bwic9zgPEeiv1bKJKPS_Mg" body="'^(0[1-9]|[1-9][0-9])[0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEHDgOEeiv1bKJKPS_Mg" name="FR Insee Code">
        <parameters xmi:id="_9IFEHTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEHjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_wXkbQEChEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_BxuvwDgPEeiv1bKJKPS_Mg" name="FR Insee Code">
              <taggedValue xmi:id="_BxuvwTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_BxuvwjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_BxuvwzgPEeiv1bKJKPS_Mg" tag="Purpose" value=" FRA-2A235 | F-2B128 | FRA 2B356"/>
              <taggedValue xmi:id="_BxuvxDgPEeiv1bKJKPS_Mg" tag="Description" value="French Insee code of cities with Corsica and colonies"/>
              <taggedValue xmi:id="_BxuvxTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_BxuvxjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BxuvxzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BxuvyDgPEeiv1bKJKPS_Mg" body="'^(F-|FRA?(-| ))?((2[A|B])|[0-9]{2})[0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEHzgOEeiv1bKJKPS_Mg" name="Postal code or Pin code of India">
        <parameters xmi:id="_9IFEIDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEITgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_Ego7UIygEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_BzEMgDgPEeiv1bKJKPS_Mg" name="Postal code or Pin code of India">
              <taggedValue xmi:id="_BzEMgTgPEeiv1bKJKPS_Mg" tag="Author" value="Nandip Makwana"/>
              <taggedValue xmi:id="_BzEMgjgPEeiv1bKJKPS_Mg" tag="Description" value="This expression will be useful to check postal code or pin code of India. This expression will check postal code or pin code in two format. One is code is separated by space after 3 digit and another is code is written in 6 digit."/>
              <taggedValue xmi:id="_BzEMgzgPEeiv1bKJKPS_Mg" tag="Purpose" value="360311 ||| 360 311 ||| 360 00136 0311 ||| 3603111 ||| 360 31 ||| 36031"/>
              <taggedValue xmi:id="_BzEMhDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_BzEMhTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_BzEMhjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_BzEMhzgPEeiv1bKJKPS_Mg" body="'([0-9]{6}|[0-9]{3}\s[0-9]{3})'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEIjgOEeiv1bKJKPS_Mg" name="Swiss Zip Code validation">
        <parameters xmi:id="_9IFEIzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEJDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#__GBswIyfEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_B0aQUDgPEeiv1bKJKPS_Mg" name="Swiss Zip Code validation">
              <taggedValue xmi:id="_B0aQUTgPEeiv1bKJKPS_Mg" tag="Author" value="Michael Freiermuth"/>
              <taggedValue xmi:id="_B0aQUjgPEeiv1bKJKPS_Mg" tag="Description" value="Zip code validation for Switzerland.&#xA;Forces 4-digits only zipcode starting at 1000"/>
              <taggedValue xmi:id="_B0aQUzgPEeiv1bKJKPS_Mg" tag="Purpose" value="1000 | 1200 | 8200 | 8048 | 9999a-z | aaaa | 123 | 0000"/>
              <taggedValue xmi:id="_B0aQVDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_B0aQVTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B0aQVjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B0aQVzgPEeiv1bKJKPS_Mg" body="'^[1-9][0-9][0-9][0-9]$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEJTgOEeiv1bKJKPS_Mg" name="US State Codes">
        <parameters xmi:id="_9IFEJjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEJzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_pWgP8LkgEeSVYtNTxh_-xg"/>
            <builtInPatterns xmi:id="_B1rboDgPEeiv1bKJKPS_Mg" name="US State Codes">
              <taggedValue xmi:id="_B1rboTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Belgian postal codes."/>
              <taggedValue xmi:id="_B1rbojgPEeiv1bKJKPS_Mg" tag="Description" value="matches US state codes such as AK, AL, AR, ..."/>
              <taggedValue xmi:id="_B1rbozgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_B1rbpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_B1rbpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B1rbpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B1rbpzgPEeiv1bKJKPS_Mg" body="'^(A[KLRZ]|C[AOT]|DE|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEKDgOEeiv1bKJKPS_Mg" name="US Zipcode Validation">
        <parameters xmi:id="_9IFEKTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEKjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_n2tqUIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_B2-cIDgPEeiv1bKJKPS_Mg" name="US Zipcode Validation">
              <taggedValue xmi:id="_B2-cITgPEeiv1bKJKPS_Mg" tag="Author" value="Amith"/>
              <taggedValue xmi:id="_B2-cIjgPEeiv1bKJKPS_Mg" tag="Description" value="Zipcode should be of 5 numerics"/>
              <taggedValue xmi:id="_B2-cIzgPEeiv1bKJKPS_Mg" tag="Purpose" value="matches only if 5 numerics are presentnot matches if less than 5 numerics"/>
              <taggedValue xmi:id="_B2-cJDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_B2-cJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B2-cJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B2-cJzgPEeiv1bKJKPS_Mg" body="'^[0-9]{5}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEKzgOEeiv1bKJKPS_Mg" name="Valid UK Post Codes Upper and Lower Case">
        <parameters xmi:id="_9IFELDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFELTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_fi29wIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_B4W8MDgPEeiv1bKJKPS_Mg" name="Valid UK Post Codes Upper and Lower Case">
              <taggedValue xmi:id="_B4W8MTgPEeiv1bKJKPS_Mg" tag="Author" value="Gareth Wright"/>
              <taggedValue xmi:id="_B4W8MjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches valid UK post codes in both upper and lower case, allowing for one or zero spaces between outcode and incodes."/>
              <taggedValue xmi:id="_B4W8MzgPEeiv1bKJKPS_Mg" tag="Purpose" value="SW112LE | SW11 2LE | sw112le12CR0LE | 12CR 0LE | SWLE05"/>
              <taggedValue xmi:id="_B4W8NDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_B4W8NTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B4W8NjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B4W8NzgPEeiv1bKJKPS_Mg" body="'^ (([BEGLMNSWbeglmnsw][0-9][0-9]?)|(([A-PR-UWYZa-pr-uwyz][A-HK-Ya-hk-y][0-9][0-9]?)|(([ENWenw][0-9][A-HJKSTUWa-hjkstuw])|([ENWenw][A-HK-Ya-hk-y][0-9][ABEHMNPRVWXYabehmnprvwxy])))) ?[0-9][ABD-HJLNP-UW-Zabd-hjlnp-uw-z]{2}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFELjgOEeiv1bKJKPS_Mg" name="Key in properties file">
        <parameters xmi:id="_9IFELzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEMDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/code/Key_in_properties_file_0.1.pattern#_DVfAwAMtEd6stMai_3cDIQ"/>
            <builtInPatterns xmi:id="_B5sY8DgPEeiv1bKJKPS_Mg" name="Key in properties file">
              <taggedValue xmi:id="_B5sY8TgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_B5sY8jgPEeiv1bKJKPS_Mg" tag="Description" value="Matches: \ClassFoo.string.1\&quot; &#xA;Non-Matches: \&quot;#ClassFoo\&quot;.&quot;"/>
              <taggedValue xmi:id="_B5sY8zgPEeiv1bKJKPS_Mg" tag="Purpose" value="match the keys of a Java properties file."/>
              <taggedValue xmi:id="_B5sY9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_B5sY9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B5sY9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B5sY9zgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\[?\\]?$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B5sY-DgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B5sY-TgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\\\[?\\\\]?$'" language="Mysql"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B5sY-jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B5sY-zgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>[:alnum:]._@&amp;*]*\\[?\\]?$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B5sY_DgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B5sY_TgPEeiv1bKJKPS_Mg" body="'^[-+&lt;>a-z|0-9._@&amp;*]*\[?\]?$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEMTgOEeiv1bKJKPS_Mg" name="Hex Color Codes">
        <parameters xmi:id="_9IFEMjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEMzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_ly9QgcBQEd2Zap05uF3mKA"/>
            <builtInPatterns xmi:id="_B7JxgDgPEeiv1bKJKPS_Mg" name="Hex Color Codes">
              <taggedValue xmi:id="_B7JxgTgPEeiv1bKJKPS_Mg" tag="Author" value="Michael Fienen"/>
              <taggedValue xmi:id="_B7JxgjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches valid 3 or 6 character hex codes used for HTML or CSS.&#xA;Matches fff | #990000 | #cc3366 | #AAAAAA&#xA;Non-Matches #5555 | #ZJK000 | CDCDCDCD"/>
              <taggedValue xmi:id="_B7JxgzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check hex codes used for HTML or CSS"/>
              <taggedValue xmi:id="_B7JxhDgPEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="_B7JxhTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B7JxhjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B7JxhzgPEeiv1bKJKPS_Mg" body="'^\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B7JxiDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B7JxiTgPEeiv1bKJKPS_Mg" body="'^\\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$'" language="MySQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFENDgOEeiv1bKJKPS_Mg" name="EN Amount Money">
        <parameters xmi:id="_9IFENTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFENjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_TTN-cEClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_B9WJ4DgPEeiv1bKJKPS_Mg" name="EN Amount Money">
              <taggedValue xmi:id="_B9WJ4TgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_B9WJ4jgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_B9WJ4zgPEeiv1bKJKPS_Mg" tag="Purpose" value="$3,000 | CA$3000"/>
              <taggedValue xmi:id="_B9WJ5DgPEeiv1bKJKPS_Mg" tag="Description" value="Amount of money in English format"/>
              <taggedValue xmi:id="_B9WJ5TgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_B9WJ5jgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B9WJ5zgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B9WJ6DgPEeiv1bKJKPS_Mg" body="'^((US|CA)?\$|\￡|\€|\￥)(([1-9][0-9]{0,2}(\,[0-9]{3})*)|([1-9][0-9]*)|(0))(\.[0-9]{2}|k|M|G|T)?$'" language="SQL" modificationDate="2015-08-17 14:40:36"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B9WJ6TgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B9WJ6jgPEeiv1bKJKPS_Mg" body="'^((US|CA)?\\$|\￡|\€|\￥)(([1-9][0-9]{0,2}(\,[0-9]{3})*)|([1-9][0-9]*)|(0))(\.[0-9]{2}|k|M|G|T)?$'" language="MySQL" modificationDate="2015-08-17 14:27:55"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFENzgOEeiv1bKJKPS_Mg" name="FR Amount Money">
        <parameters xmi:id="_9IFEODgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEOTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_MKEKcEClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_B_p3ADgPEeiv1bKJKPS_Mg" name="FR Amount Money">
              <taggedValue xmi:id="_B_p3ATgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_B_p3AjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_B_p3AzgPEeiv1bKJKPS_Mg" tag="Purpose" value="3000 € | 35 k€ | 35 054 T€"/>
              <taggedValue xmi:id="_B_p3BDgPEeiv1bKJKPS_Mg" tag="Description" value="Amount of money in French format"/>
              <taggedValue xmi:id="_B_p3BTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_B_p3BjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_B_p3BzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_B_p3CDgPEeiv1bKJKPS_Mg" body="'^(([1-9][0-9]{0,2}( [0-9]{3})*)|([1-9][0-9]*)|0)((,[0-9]{2} | (k|M|G|T))?| )(\$( (US|CA))?|\￡|\€|\￥)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEOjgOEeiv1bKJKPS_Mg" name="Bulgaria Vat Number">
        <parameters xmi:id="_9IFEOzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEPDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_b95-YIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CA2w4DgPEeiv1bKJKPS_Mg" name="Bulgaria Vat Number">
              <taggedValue xmi:id="_CA2w4TgPEeiv1bKJKPS_Mg" tag="Author" value="Panayiotis Savva"/>
              <taggedValue xmi:id="_CA2w4jgPEeiv1bKJKPS_Mg" tag="Description" value="Vat number for Bulgaria. Formats are &#xA;BG123456789&#xA;BG1234567890"/>
              <taggedValue xmi:id="_CA2w4zgPEeiv1bKJKPS_Mg" tag="Purpose" value="BG123456789|||BG1234567890|||BG1587963587BG12349|||Bg1234567890|||BG1587963587989"/>
              <taggedValue xmi:id="_CA2w5DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CA2w5TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CA2w5jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CA2w5zgPEeiv1bKJKPS_Mg" body="'^(BG){0,1}([0-9]{9}|[0-9]{10})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEPTgOEeiv1bKJKPS_Mg" name="French VATNumber">
        <parameters xmi:id="_9IFEPjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEPzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/French_VATNumber_0.1.pattern#_ga6fofbIEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="_CCMNoDgPEeiv1bKJKPS_Mg" name="French VATNumber">
              <taggedValue xmi:id="_CCMNoTgPEeiv1bKJKPS_Mg" tag="Author" value="Vassilis Petroulias"/>
              <taggedValue xmi:id="_CCMNojgPEeiv1bKJKPS_Mg" tag="Description" value="Matches FRAB 123456789 | L7 123456789&#xA;Non-Matches  &#x9;&#xA;FRAB123456789 | L7 L23456789&#x9;"/>
              <taggedValue xmi:id="_CCMNozgPEeiv1bKJKPS_Mg" tag="Purpose" value="VAT Numbers format verification (France) with support for optional member state definition."/>
              <taggedValue xmi:id="_CCMNpDgPEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="_CCMNpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CCMNpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CCMNpzgPEeiv1bKJKPS_Mg" body="'^(FR){0,1}[0-9A-Z]{2}\ [0-9]{9}$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CCMNqDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CCMNqTgPEeiv1bKJKPS_Mg" body="'^(FR){0,1}[0-9A-Z]{2}\\ [0-9]{9}$'" language="MySQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEQDgOEeiv1bKJKPS_Mg" name="Gender">
        <parameters xmi:id="_9IFEQTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEQjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_TXHDQceCEd2zV_ZhgRMOzA"/>
            <builtInPatterns xmi:id="_CDYgcDgPEeiv1bKJKPS_Mg" name="Gender">
              <taggedValue xmi:id="_CDYgcTgPEeiv1bKJKPS_Mg" tag="Author" value="Keith Stacy"/>
              <taggedValue xmi:id="_CDYgcjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches: F, M, Male, Female, male, female.&#xA;Non-matches: mail, A, S"/>
              <taggedValue xmi:id="_CDYgczgPEeiv1bKJKPS_Mg" tag="Purpose" value="Classic gender descriptor regex."/>
              <taggedValue xmi:id="_CDYgdDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CDYgdTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CDYgdjgPEeiv1bKJKPS_Mg">
                <expression xmi:id="_CDYgdzgPEeiv1bKJKPS_Mg" body="'^(m|M|male|Male|f|F|female|Female)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEQzgOEeiv1bKJKPS_Mg" name="SEDOL">
        <parameters xmi:id="_9IFERDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFERTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/SEDOL_0.1.pattern#_u--T0EClEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_CFW2YDgPEeiv1bKJKPS_Mg" name="SEDOL">
              <taggedValue xmi:id="_CFW2YTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_CFW2YjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_CFW2YzgPEeiv1bKJKPS_Mg" tag="Purpose" value="B01HL06 | 4155586"/>
              <taggedValue xmi:id="_CFW2ZDgPEeiv1bKJKPS_Mg" tag="Description" value="Stock Exchange Daily Official List "/>
              <taggedValue xmi:id="_CFW2ZTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_CFW2ZjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CFW2ZzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CFW2aDgPEeiv1bKJKPS_Mg" body="'^([B-Db-dF-Hf-hJ-Nj-nP-Tp-tV-Xv-xYyZz0-9]{6}[0-9])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFERjgOEeiv1bKJKPS_Mg" name="24 Hour Time">
        <parameters xmi:id="_9IFERzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFESDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_nj3TsD4KEd20H7qFpzB9dg"/>
            <builtInPatterns xmi:id="_CIrQIDgPEeiv1bKJKPS_Mg" name="24 Hour Time">
              <taggedValue xmi:id="_CIrQITgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check time strings in 24 hour format"/>
              <taggedValue xmi:id="_CIrQIjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches a string if it is a valid time in the format of HH:MM"/>
              <taggedValue xmi:id="_CIrQIzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CIrQJDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CIrQJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CIrQJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CIrQJzgPEeiv1bKJKPS_Mg" body="'^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFESTgOEeiv1bKJKPS_Mg" name="Current Century Date">
        <parameters xmi:id="_9IFESjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFESzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Current_Century_Date_0.1.pattern#_khsAgIyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CLzcoDgPEeiv1bKJKPS_Mg" name="Current Century Date">
              <taggedValue xmi:id="_CLzcoTgPEeiv1bKJKPS_Mg" tag="Author" value="Hallam Mohamed Amine"/>
              <taggedValue xmi:id="_CLzcojgPEeiv1bKJKPS_Mg" tag="Description" value="This regular expression will validate most (current &amp; future) date options. The weaknesses with this one is that it will allow the days to go up to 39 and does not account for leap year. Also, the months can go up to 19, instead of our commonly accepted 12 month year. :)  I designed this expression to validate dates from the year 2000 to 2099. I do not plan on this same code being in place in 2099, so I hope this is sufficient enough..."/>
              <taggedValue xmi:id="_CLzcozgPEeiv1bKJKPS_Mg" tag="Purpose" value="match 2/14/2001 or 12-14-2001 or  12-29-2099  not matches :  2/14/1999"/>
              <taggedValue xmi:id="_CLzcpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CLzcpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CLzcpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CLzcpzgPEeiv1bKJKPS_Mg" body="'^([0-1]?[0-9]{1}[/-][0-3]?[0-9]{1}[/-]20[0-9]{2})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFETDgOEeiv1bKJKPS_Mg" name="EN Month">
        <parameters xmi:id="_9IFETTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFETjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_cfceoEC_EeWBxNQvuPBQ-Q"/>
            <builtInPatterns xmi:id="_CNhT4DgPEeiv1bKJKPS_Mg" name="EN Month">
              <taggedValue xmi:id="_CNhT4TgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_CNhT4jgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CNhT4zgPEeiv1bKJKPS_Mg" tag="Purpose" value="January | February"/>
              <taggedValue xmi:id="_CNhT5DgPEeiv1bKJKPS_Mg" tag="Description" value="Month in English"/>
              <taggedValue xmi:id="_CNhT5TgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_CNhT5jgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CNhT5zgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CNhT6DgPEeiv1bKJKPS_Mg" body="'^(January|June|July|February|March|May|April|August|September|October|November|December)$'" language="SQL" modificationDate="2015-08-12 15:53:13"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFETzgOEeiv1bKJKPS_Mg" name="EN Month Abbrev">
        <parameters xmi:id="_9IFEUDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEUTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_T8ZfgEC_EeWBxNQvuPBQ-Q"/>
            <builtInPatterns xmi:id="_COwC8DgPEeiv1bKJKPS_Mg" name="EN Month Abbrev">
              <taggedValue xmi:id="_COwC8TgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_COwC8jgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_COwC8zgPEeiv1bKJKPS_Mg" tag="Purpose" value="Jan | Feb"/>
              <taggedValue xmi:id="_COwC9DgPEeiv1bKJKPS_Mg" tag="Description" value="Month English abbreviation"/>
              <taggedValue xmi:id="_COwC9TgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_COwC9jgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_COwC9zgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_COwC-DgPEeiv1bKJKPS_Mg" body="'^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEUjgOEeiv1bKJKPS_Mg" name="ISO Date">
        <parameters xmi:id="_9IFEUzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEVDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_M4zogD4ZEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="_CQDDcDgPEeiv1bKJKPS_Mg" name="ISO Date">
              <taggedValue xmi:id="_CQDDcTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of ISO dates."/>
              <taggedValue xmi:id="_CQDDcjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches ISO dates such as 2002-01-31."/>
              <taggedValue xmi:id="_CQDDczgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CQDDdDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CQDDdTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CQDDdjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CQDDdzgPEeiv1bKJKPS_Mg" body="'^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[[:digit:]])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CQDDeDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CQDDeTgPEeiv1bKJKPS_Mg" body="'^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[\d])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEVTgOEeiv1bKJKPS_Mg" name="Month">
        <parameters xmi:id="_9IFEVjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEVzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_ZNaNsD4ZEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="_CRUOwDgPEeiv1bKJKPS_Mg" name="Month">
              <taggedValue xmi:id="_CRUOwTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of month"/>
              <taggedValue xmi:id="_CRUOwjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches month written as 2-digit numbers (e.g. '08', '12')."/>
              <taggedValue xmi:id="_CRUOwzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CRUOxDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CRUOxTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CRUOxjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CRUOxzgPEeiv1bKJKPS_Mg" body="'^((0[1-9])|(1[0-2]))$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEWDgOEeiv1bKJKPS_Mg" name="Email Address">
        <parameters xmi:id="_9IFEWTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEWjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_rC5TcD4XEd24WPpU35gV1A"/>
            <builtInPatterns xmi:id="_CSghkDgPEeiv1bKJKPS_Mg" name="Email Address">
              <taggedValue xmi:id="_CSghkTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of email addresses."/>
              <taggedValue xmi:id="_CSghkjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches the email addresses"/>
              <taggedValue xmi:id="_CSghkzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CSghlDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CSghlTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CSghljgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CSghlzgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CSghmDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CSghmTgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'" language="Mysql"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CSghmjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CSghmzgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="Java"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CSghnDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CSghnTgPEeiv1bKJKPS_Mg" body="'^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$'" language="SQL" modificationDate="2013-09-19 14:26:31"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEWzgOEeiv1bKJKPS_Mg" name="IP Address">
        <parameters xmi:id="_9IFEXDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEXTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/IP_Address_0.1.pattern#_pOs9MAyEEd6OfvNiP9lrnQ"/>
            <builtInPatterns xmi:id="_CT0JIDgPEeiv1bKJKPS_Mg" name="IP Address">
              <taggedValue xmi:id="_CT0JITgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_CT0JIjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches: IP addresses such as 10.62.268.9&#xA;Non-matches: 345.2.2.3, 123.1.1.34.4"/>
              <taggedValue xmi:id="_CT0JIzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Match IP addresses"/>
              <taggedValue xmi:id="_CT0JJDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CT0JJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CT0JJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CT0JJzgPEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="MySQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CT0JKDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CT0JKTgPEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CT0JKjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CT0JKzgPEeiv1bKJKPS_Mg" body="'^([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])\.([01]?[[:digit:]][[:digit:]]?|2[0-4][[:digit:]]|25[0-5])$'" language="Oracle"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CT0JLDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CT0JLTgPEeiv1bKJKPS_Mg" body="'^([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])\.([01]?[\d][\d]?|2[0-4][\d]|25[0-5])$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEXjgOEeiv1bKJKPS_Mg" name="MAC Address">
        <parameters xmi:id="_9IFEXzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEYDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/MAC_Address_0.1.pattern#_xVVjsECkEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_CVC4MDgPEeiv1bKJKPS_Mg" name="MAC Address">
              <taggedValue xmi:id="_CVC4MTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_CVC4MjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_CVC4MzgPEeiv1bKJKPS_Mg" tag="Purpose" value="A4:4E:31:B9:C5:B4"/>
              <taggedValue xmi:id="_CVC4NDgPEeiv1bKJKPS_Mg" tag="Description" value="Match MAC Address"/>
              <taggedValue xmi:id="_CVC4NTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_CVC4NjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CVC4NzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CVC4ODgPEeiv1bKJKPS_Mg" body="'^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEYTgOEeiv1bKJKPS_Mg" name="American Express Card Number">
        <parameters xmi:id="_9IFEYjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEYzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/American_Express_Card_Number_0.1.pattern#_FcDG0D17Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="_CWYU8DgPEeiv1bKJKPS_Mg" name="American Express Card Number">
              <taggedValue xmi:id="_CWYU8TgPEeiv1bKJKPS_Mg" tag="Purpose" value="Checks the validity of American Express card numbers. "/>
              <taggedValue xmi:id="_CWYU8jgPEeiv1bKJKPS_Mg" tag="Description" value="American Express card numbers start with 34 or 37 and have 15 digits."/>
              <taggedValue xmi:id="_CWYU8zgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CWYU9DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CWYU9TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CWYU9jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CWYU9zgPEeiv1bKJKPS_Mg" body="'^3[47][0-9]{13}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEZDgOEeiv1bKJKPS_Mg" name="Bank Routing Transit Number (RTN)">
        <parameters xmi:id="_9IFEZTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEZjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Bank_Routing_Transit_Number__RTN__0.1.pattern#_j5FFMIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CXr8gDgPEeiv1bKJKPS_Mg" name="Bank Routing Transit Number (RTN)">
              <taggedValue xmi:id="_CXr8gTgPEeiv1bKJKPS_Mg" tag="Author" value="Doug Vanderweide"/>
              <taggedValue xmi:id="_CXr8gjgPEeiv1bKJKPS_Mg" tag="Description" value="Ensures a given string matches the basic pattern of a bank routing transit number (RTN), used to identify financial institutions on instruments such as checks. Ensures number is nine digits long and has first two digits that comply with American Bankers Association rules."/>
              <taggedValue xmi:id="_CXr8gzgPEeiv1bKJKPS_Mg" tag="Purpose" value="614321634, 114000900, 7034520981145329, 491212012, banana"/>
              <taggedValue xmi:id="_CXr8hDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CXr8hTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CXr8hjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CXr8hzgPEeiv1bKJKPS_Mg" body="'^((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEZzgOEeiv1bKJKPS_Mg" name="Contains numbers">
        <parameters xmi:id="_9IFEaDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEaTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Contains_numbers_0.1.pattern#_Lnh0kGUuEd2RuP05jDphQg"/>
            <builtInPatterns xmi:id="_CY9H0DgPEeiv1bKJKPS_Mg" name="Contains numbers">
              <taggedValue xmi:id="_CY9H0TgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_CY9H0jgPEeiv1bKJKPS_Mg" tag="Description" value="This pattern will match any value that contains numeric characters. For example 'DQE123' will match the pattern. "/>
              <taggedValue xmi:id="_CY9H0zgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check whether the field contains numbers"/>
              <taggedValue xmi:id="_CY9H1DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CY9H1TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CY9H1jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CY9H1zgPEeiv1bKJKPS_Mg" body="'[[:digit:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CY9H2DgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CY9H2TgPEeiv1bKJKPS_Mg" body="'\d'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEajgOEeiv1bKJKPS_Mg" name="FR SSN">
        <parameters xmi:id="_9IFEazgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEbDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/FR_SSN_0.1.pattern#_OuO-UPbPEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="_CaTLoDgPEeiv1bKJKPS_Mg" name="FR SSN">
              <taggedValue xmi:id="_CaTLoTgPEeiv1bKJKPS_Mg" tag="Author" value="S Correia"/>
              <taggedValue xmi:id="_CaTLojgPEeiv1bKJKPS_Mg" tag="Description" value="Matches  &#x9;&#xA;181049520156962 | 1 81 04 95 201 569 62 | 1 81 04 95 201 569&#xA;Non-Matches &#x9;&#xA;1 81049520156962 | 181049520156962fds | 1810495201569ds"/>
              <taggedValue xmi:id="_CaTLozgPEeiv1bKJKPS_Mg" tag="Purpose" value="French Social Security Number"/>
              <taggedValue xmi:id="_CaTLpDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CaTLpTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CaTLpjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CaTLpzgPEeiv1bKJKPS_Mg" body="'^[12][0-9]{2}(0[1-9]|1[0-2])(2[AB]|[0-9]{2})[0-9]{6}([0-9]{2})?$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEbTgOEeiv1bKJKPS_Mg" name="GPS Coordinate">
        <parameters xmi:id="_9IFEbjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEbzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/GPS_Coordinate_0.1.pattern#_Xaq7AECwEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_CbmMIDgPEeiv1bKJKPS_Mg" name="GPS Coordinate">
              <taggedValue xmi:id="_CbmMITgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_CbmMIjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_CbmMIzgPEeiv1bKJKPS_Mg" tag="Purpose" value="40.7127837,-74.00594130000002"/>
              <taggedValue xmi:id="_CbmMJDgPEeiv1bKJKPS_Mg" tag="Description" value="Google Maps style GPS Decimal format"/>
              <taggedValue xmi:id="_CbmMJTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_CbmMJjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CbmMJzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CbmMKDgPEeiv1bKJKPS_Mg" body="'^([0-9]{1,3}[\\.][0-9]*)[, ]+-?([0-9]{1,3}[\\.][0-9]*)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEcDgOEeiv1bKJKPS_Mg" name="ISBN Checker">
        <parameters xmi:id="_9IFEcTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEcjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_Checker_0.1.pattern#_WGxL4IydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_Cc5zsDgPEeiv1bKJKPS_Mg" name="ISBN Checker">
              <taggedValue xmi:id="_Cc5zsTgPEeiv1bKJKPS_Mg" tag="Author" value="Alex Richards"/>
              <taggedValue xmi:id="_Cc5zsjgPEeiv1bKJKPS_Mg" tag="Description" value="Expression to check for a valid ISBN number"/>
              <taggedValue xmi:id="_Cc5zszgPEeiv1bKJKPS_Mg" tag="Purpose" value="ISBN 0-596-00681-0   Anything that's not in the above format"/>
              <taggedValue xmi:id="_Cc5ztDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Cc5ztTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cc5ztjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cc5ztzgPEeiv1bKJKPS_Mg" body="'^[ISBN]{4}[ ]{0,1}[0-9]{1}[-]{1}[0-9]{3}[-]{1}[0-9]{5}[-]{1}[0-9]{0,1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEczgOEeiv1bKJKPS_Mg" name="International Passport">
        <parameters xmi:id="_9IFEdDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEdTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/International_Passport_0.1.pattern#_PRL0IIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CeNbQDgPEeiv1bKJKPS_Mg" name="International Passport">
              <taggedValue xmi:id="_CeNbQTgPEeiv1bKJKPS_Mg" tag="Author" value="Pradeep Dhiman"/>
              <taggedValue xmi:id="_CeNbQjgPEeiv1bKJKPS_Mg" tag="Description" value="? 9 characters made up of a combination of numbers and/or letters. Where less than 9 characters it will be padded out to the right with chevrons (&lt;).&#xA;? 1 number&#xA;? 3 letters&#xA;? 7 numbers&#xA;? 1 letter&#xA;? 7 numbers&#xA;? An international passport will have up to 14 characters in this field (numbers and/or letters). If none exist or where less than 14 characters exist, the field will be padded out, but only to the right, with chevrons (&lt;). You should input the data exactly as it is shown on the actual passport field, i.e. input all chevrons to the left of the characters and do not ignore or leave these as blank spaces. Where less than 14 characters, the field will be padded out to the right with chevrons (&lt;), i.e. Z1234567&lt;&lt;&lt;&lt;&lt;&#xA;? 1 number&#xA;? 1 number"/>
              <taggedValue xmi:id="_CeNbQzgPEeiv1bKJKPS_Mg" tag="Purpose" value="1234567890ABC1234567A1234567&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;12 ||| 0123456781USD5656564M0812120AS34560&lt;&lt;&lt;&lt;&lt;&lt;&lt;36 ||| G0308084&lt;&lt;1ITY9999999Q0410056&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;39ASDFER123AQWE!&quot;%^&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;12 ||| QASASW3&lt;&lt;1WER3as12232&lt;&lt;AS ||| ABCDEF123AQQQ123456789A1&lt;&lt;&lt;&lt;&lt;AS14"/>
              <taggedValue xmi:id="_CeNbRDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CeNbRTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CeNbRjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CeNbRzgPEeiv1bKJKPS_Mg" body="'^[A-Z0-9&lt;]{9}[0-9]{1}[A-Z]{3}[0-9]{7}[A-Z]{1}[0-9]{7}[A-Z0-9&lt;]{14}[0-9]{2}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEdjgOEeiv1bKJKPS_Mg" name="Istat Code">
        <parameters xmi:id="_9IFEdzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEeDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Istat_Code_0.1.pattern#_ZYFdkIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_Cfd_gDgPEeiv1bKJKPS_Mg" name="Istat Code">
              <taggedValue xmi:id="_Cfd_gTgPEeiv1bKJKPS_Mg" tag="Author" value="Alessandro Forte"/>
              <taggedValue xmi:id="_Cfd_gjgPEeiv1bKJKPS_Mg" tag="Description" value="This pattern match the Italian Istat Ateco Code (Codice Istat) updated to Istat Declaration Ateco 2004"/>
              <taggedValue xmi:id="_Cfd_gzgPEeiv1bKJKPS_Mg" tag="Purpose" value="22.12.0|18.24.C||22.12_D|12.56| 1A.56.1"/>
              <taggedValue xmi:id="_Cfd_hDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Cfd_hTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cfd_hjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cfd_hzgPEeiv1bKJKPS_Mg" body="'[0-9]{2}[.]{1}[0-9]{2}[.]{1}[0-9A-Za-z]{1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEeTgOEeiv1bKJKPS_Mg" name="Longitude Validation">
        <parameters xmi:id="_9IFEejgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEezgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Longitude_Validation_0.1.pattern#_CwBEgIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CgxnEDgPEeiv1bKJKPS_Mg" name="Longitude Validation">
              <taggedValue xmi:id="_CgxnETgPEeiv1bKJKPS_Mg" tag="Author" value="Jason Rutberg"/>
              <taggedValue xmi:id="_CgxnEjgPEeiv1bKJKPS_Mg" tag="Description" value="Longitude validation (similiar to Latitude Validation) and inspired by the same code"/>
              <taggedValue xmi:id="_CgxnEzgPEeiv1bKJKPS_Mg" tag="Purpose" value="180.0, -180.0, 98.092391181, 180, -98.0923913"/>
              <taggedValue xmi:id="_CgxnFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CgxnFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CgxnFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CgxnFzgPEeiv1bKJKPS_Mg" body="'^-?([1]?[1-7][1-9]|[1]?[1-8][0]|[1-9]?[0-9])\.{1}[0-9]{1,6}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEfDgOEeiv1bKJKPS_Mg" name="Master Card Number">
        <parameters xmi:id="_9IFEfTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEfjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Master_Card_Number_0.1.pattern#_6YWv4D16Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="_CiTREDgPEeiv1bKJKPS_Mg" name="Master Card Number">
              <taggedValue xmi:id="_CiTRETgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of Master card numbers"/>
              <taggedValue xmi:id="_CiTREjgPEeiv1bKJKPS_Mg" tag="Description" value="All MasterCard numbers start with the numbers 51 through 55. All have 16 digits."/>
              <taggedValue xmi:id="_CiTREzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_CiTRFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CiTRFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CiTRFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CiTRFzgPEeiv1bKJKPS_Mg" body="'^5[1-5][0-9]{14}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEfzgOEeiv1bKJKPS_Mg" name="Non Zero 1st Digit">
        <parameters xmi:id="_9IFEgDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEgTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Non_Zero_1st_Digit_0.1.pattern#_D7IDEAulEeKxJpyXB0egyQ"/>
            <builtInPatterns xmi:id="_Cj1iIDgPEeiv1bKJKPS_Mg" name="Non Zero 1st Digit">
              <taggedValue xmi:id="_Cj1iITgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the first digit is a non zero digit"/>
              <taggedValue xmi:id="_Cj1iIjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches signed or unsigned numerics starting with 1 to 9 digits.&#xA;Values like '0999' will not match."/>
              <taggedValue xmi:id="_Cj1iIzgPEeiv1bKJKPS_Mg" tag="Author" value="s@t.c"/>
              <taggedValue xmi:id="_Cj1iJDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Cj1iJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cj1iJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cj1iJzgPEeiv1bKJKPS_Mg" body="'^[-+]?[1-9]'" language="SQL" modificationDate="2012-10-01 10:52:07"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEgjgOEeiv1bKJKPS_Mg" name="Numeric">
        <parameters xmi:id="_9IFEgzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEhDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Numeric_0.1.pattern#_OAAOQD1iEd2irYhnXOOajA"/>
            <builtInPatterns xmi:id="_ClDqIDgPEeiv1bKJKPS_Mg" name="Numeric">
              <taggedValue xmi:id="_ClDqITgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the numeric format"/>
              <taggedValue xmi:id="_ClDqIjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches all numbers"/>
              <taggedValue xmi:id="_ClDqIzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_ClDqJDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_ClDqJTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_ClDqJjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_ClDqJzgPEeiv1bKJKPS_Mg" body="'^[[:digit:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_ClDqKDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_ClDqKTgPEeiv1bKJKPS_Mg" body="'^\d*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEhTgOEeiv1bKJKPS_Mg" name="UK SSN">
        <parameters xmi:id="_9IFEhjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEhzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_SSN_0.1.pattern#_C2aDMECkEeWDcpMk51Q9_w"/>
            <builtInPatterns xmi:id="_CmXRsDgPEeiv1bKJKPS_Mg" name="UK SSN">
              <taggedValue xmi:id="_CmXRsTgPEeiv1bKJKPS_Mg" tag="Status" value="development"/>
              <taggedValue xmi:id="_CmXRsjgPEeiv1bKJKPS_Mg" tag="Author" value="talend@talend.com"/>
              <taggedValue xmi:id="_CmXRszgPEeiv1bKJKPS_Mg" tag="Purpose" value="AB123456C | AB 12 34 56 C"/>
              <taggedValue xmi:id="_CmXRtDgPEeiv1bKJKPS_Mg" tag="Description" value="National identification number, national identity number, or national insurance number generally called an NI Number (NINO)"/>
              <taggedValue xmi:id="_CmXRtTgPEeiv1bKJKPS_Mg" tag="Version" value="0.1"/>
              <taggedValue xmi:id="_CmXRtjgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CmXRtzgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CmXRuDgPEeiv1bKJKPS_Mg" body="'^[A-CEGHJ-PR-TW-Z]{1}[A-CEGHJ-NPR-TW-Z]{1}([0-9]{6}|( [0-9]{2}){3} )[A-DFM]{0,1}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEiDgOEeiv1bKJKPS_Mg" name="UK Vehicle Registration Plate Number Plate">
        <parameters xmi:id="_9IFEiTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEijgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_Vehicle_Registration_Plate_Number_Plate_0.1.pattern#_8U2icIybEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CpT4ADgPEeiv1bKJKPS_Mg" name="UK Vehicle Registration Plate Number Plate">
              <taggedValue xmi:id="_CpT4ATgPEeiv1bKJKPS_Mg" tag="Author" value="Stephen S"/>
              <taggedValue xmi:id="_CpT4AjgPEeiv1bKJKPS_Mg" tag="Description" value="UK Vehicle Registration Plate / Number Plate format as specified by the DVLA. Accepts both &quot;Prefix&quot; and &quot;New&quot; style. Allows only valid DVLA number combinations as not all are supported. Registration number must be exactly as is displayed on car, hence all letters must be in uppercase and a space seperating the two sets of characters."/>
              <taggedValue xmi:id="_CpT4AzgPEeiv1bKJKPS_Mg" tag="Purpose" value="AB12 RCY|||CD07 TES|||S33 GTT|||Y999 FVBab12 rcy|||CD07 TIS|||S34 GTT|||Z999 FVB"/>
              <taggedValue xmi:id="_CpT4BDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CpT4BTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CpT4BjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CpT4BzgPEeiv1bKJKPS_Mg" body="'([A-HJ-PR-Y]{2}([0][1-9]|[1-9][0-9])|[A-HJ-PR-Y]{1}([1-9]|[1-2][0-9]|30|31|33|40|44|55|50|60|66|70|77|80|88|90|99|111|121|123|222|321|333|444|555|666|777|888|999|100|200|300|400|500|600|700|800|900))[ ][A-HJ-PR-Z]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEizgOEeiv1bKJKPS_Mg" name="US SSN">
        <parameters xmi:id="_9IFEjDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEjTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/US_SSN_0.1.pattern#_BpSRwD15Ed2p44yVAaDvbQ"/>
            <builtInPatterns xmi:id="_Cq3-QDgPEeiv1bKJKPS_Mg" name="US SSN">
              <taggedValue xmi:id="_Cq3-QTgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of US Social Security Numbers"/>
              <taggedValue xmi:id="_Cq3-QjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches a (hyphen-separated or not) Social Security Number (SSN). Ex.:  123-45-6789 or 123456789."/>
              <taggedValue xmi:id="_Cq3-QzgPEeiv1bKJKPS_Mg" tag="Author" value=""/>
              <taggedValue xmi:id="_Cq3-RDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Cq3-RTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cq3-RjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cq3-RzgPEeiv1bKJKPS_Mg" body="'^([[:digit:]]{3}[ -][[:digit:]]{2}[ -][[:digit:]]{4}|[[:digit:]]{9})$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cq3-SDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cq3-STgPEeiv1bKJKPS_Mg" body="'^[\d]{3}[-][\d]{2}[-][\d]{4}|[\d]{9}$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEjjgOEeiv1bKJKPS_Mg" name="FR Phone Number">
        <parameters xmi:id="_9IFEjzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEkDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number_0.1.pattern#_SPiUIPbKEd2c5L1gaJyUtQ"/>
            <builtInPatterns xmi:id="_CsXMADgPEeiv1bKJKPS_Mg" name="FR Phone Number">
              <taggedValue xmi:id="_CsXMATgPEeiv1bKJKPS_Mg" tag="Author" value="S. Correia"/>
              <taggedValue xmi:id="_CsXMAjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches French phone numbers starting with 01, 02, 03, 04, 05, 06, 08 09 (e.g. 01-23-45-67-83 or 01.23.45.67.83 or 0123456783"/>
              <taggedValue xmi:id="_CsXMAzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Check the validity of FR phone numbers"/>
              <taggedValue xmi:id="_CsXMBDgPEeiv1bKJKPS_Mg" tag="Status" value="Production"/>
              <taggedValue xmi:id="_CsXMBTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CsXMBjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CsXMBzgPEeiv1bKJKPS_Mg" body="'^0[1-689]([-. ]?[0-9]{2}){4}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEkTgOEeiv1bKJKPS_Mg" name="FR Phone Number (Local or International )">
        <parameters xmi:id="_9IFEkjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEkzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number__Local_or_International___0.1.pattern#_DqoD4IyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_CtqzkDgPEeiv1bKJKPS_Mg" name="FR Phone Number (Local or International )">
              <taggedValue xmi:id="_CtqzkTgPEeiv1bKJKPS_Mg" tag="Author" value="Amine Mohamed Hallam"/>
              <taggedValue xmi:id="_CtqzkjgPEeiv1bKJKPS_Mg" tag="Description" value="check 02-31-23-45-67 or 0033231234567"/>
              <taggedValue xmi:id="_CtqzkzgPEeiv1bKJKPS_Mg" tag="Purpose" value="check any french phone number"/>
              <taggedValue xmi:id="_CtqzlDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_CtqzlTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_CtqzljgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_CtqzlzgPEeiv1bKJKPS_Mg" body="'^(0033|\\+33|0)[1-689]([-. ]?[0-9]{2}){4}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFElDgOEeiv1bKJKPS_Mg" name="International phone number">
        <parameters xmi:id="_9IFElTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEljgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/International_phone_number_0.1.pattern#_Is95MIydEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_Cxp7sDgPEeiv1bKJKPS_Mg" name="International phone number">
              <taggedValue xmi:id="_Cxp7sTgPEeiv1bKJKPS_Mg" tag="Author" value="Amine Mohamed Hallam"/>
              <taggedValue xmi:id="_Cxp7sjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches most  international formated phonenumber."/>
              <taggedValue xmi:id="_Cxp7szgPEeiv1bKJKPS_Mg" tag="Purpose" value="0033611607946 |||+213 48557627|||050/123456"/>
              <taggedValue xmi:id="_Cxp7tDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_Cxp7tTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cxp7tjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cxp7tzgPEeiv1bKJKPS_Mg" body="'^\\+[0-9]{1,3}\.[0-9]+\.[0-9]+$'" language="MySQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_Cxp7uDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_Cxp7uTgPEeiv1bKJKPS_Mg" body="'^\+[0-9]{1,3}\.[0-9]+\.[0-9]+$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFElzgOEeiv1bKJKPS_Mg" name="Mobile number of India">
        <parameters xmi:id="_9IFEmDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEmTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Mobile_number_of_India_0.1.pattern#__RSB4IycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_C1pD0DgPEeiv1bKJKPS_Mg" name="Mobile number of India">
              <taggedValue xmi:id="_C1pD0TgPEeiv1bKJKPS_Mg" tag="Author" value="Nandip Makwana"/>
              <taggedValue xmi:id="_C1pD0jgPEeiv1bKJKPS_Mg" tag="Description" value="This expression will be useful to check mobile &#xD;&#xA;number of India. This expression will check &#xD;&#xA;various types of number like number in local &#xD;&#xA;format or international number separated by &#xD;&#xA;hyphen(-) or not."/>
              <taggedValue xmi:id="_C1pD0zgPEeiv1bKJKPS_Mg" tag="Purpose" value="+919123456789 ||| +91-9123456789 ||| 919123456789 ||| 09123456789 ||| 91234567898123456789 ||| +91-912345678 ||| +9191234567890"/>
              <taggedValue xmi:id="_C1pD1DgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C1pD1TgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C1pD1jgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C1pD1zgPEeiv1bKJKPS_Mg" body="'(\\+91(-)?|91(-)?|0(-)?)?(9)[0-9]{9}'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEmjgOEeiv1bKJKPS_Mg" name="Phone Brazil">
        <parameters xmi:id="_9IFEmzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEnDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Brazil_0.1.pattern#_mRzFgIycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_C3WUADgPEeiv1bKJKPS_Mg" name="Phone Brazil">
              <taggedValue xmi:id="_C3WUATgPEeiv1bKJKPS_Mg" tag="Author" value="Cleiton Francisco"/>
              <taggedValue xmi:id="_C3WUAjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches Brazilian phone numbers, includes DDD (long-distance call) with or without 0. Accepts characters -, . and [space] as separators."/>
              <taggedValue xmi:id="_C3WUAzgPEeiv1bKJKPS_Mg" tag="Purpose" value="011 5555-1234|||(011) 5555 1234|||(11) 5555.1234|||1155551234(011 5555-1234|||(01) 5555 1234|||(11) 0555.1234|||(11) 5555 abcd"/>
              <taggedValue xmi:id="_C3WUBDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C3WUBTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C3WUBjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C3WUBzgPEeiv1bKJKPS_Mg" body="'^((\(0?[1-9][0-9]\))|(0?[1-9][0-9]))[ -.]?([1-9][0-9]{3})[ -.]?([0-9]{4})$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEnTgOEeiv1bKJKPS_Mg" name="Phone Number">
        <parameters xmi:id="_9IFEnjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEnzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Number_0.1.pattern#_S7m6oIyhEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_C44lEDgPEeiv1bKJKPS_Mg" name="Phone Number">
              <taggedValue xmi:id="_C44lETgPEeiv1bKJKPS_Mg" tag="Author" value="Tim N Tousley"/>
              <taggedValue xmi:id="_C44lEjgPEeiv1bKJKPS_Mg" tag="Description" value="Very flexible phone number entry. -- There are many valid ways to enter a phone number, and often there is other data that a restrictive Regex pattern will not abide. -- This pattern accepts any number of letters, commas, pound signs, slashes, spaces, periods, parenthesis, hyphens, plus signs, and asterisks... but amongst it scans for a minimum of 7 digits (modify {7} to adjust the minimum number of required digits (i.e. 10 for area code + phone number, 18 for long international numbers). -- This pattern does not attempt to restrict the entered phone number format in any way, but instead just verfies that enough digits for one was entered. -- Data in excess of the 7 required digits is allowed. -- I've posted another submission that forces compliance for US phone numbers."/>
              <taggedValue xmi:id="_C44lEzgPEeiv1bKJKPS_Mg" tag="Purpose" value="1234567 ||| 12345678 ||| (555) 987-6543 ext 210 ||| 999-666-7777-x1967123456 ||| 555-123"/>
              <taggedValue xmi:id="_C44lFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C44lFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C44lFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C44lFzgPEeiv1bKJKPS_Mg" body="'^([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){7}[0-9a-zA-Z,#/ \.\(\)\-\+\*]*$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEoDgOEeiv1bKJKPS_Mg" name="Blank text">
        <parameters xmi:id="_9IFEoTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEojgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Blank_text_0.1.pattern#_N7yi0Gk3Ed2I1bT57-sHUw"/>
            <builtInPatterns xmi:id="_C6fHkDgPEeiv1bKJKPS_Mg" name="Blank text">
              <taggedValue xmi:id="_C6fHkTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_C6fHkjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with only white spaces"/>
              <taggedValue xmi:id="_C6fHkzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search for blank text"/>
              <taggedValue xmi:id="_C6fHlDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C6fHlTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C6fHljgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C6fHlzgPEeiv1bKJKPS_Mg" body="'^[[:blank:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C6fHmDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C6fHmTgPEeiv1bKJKPS_Mg" body="'^\s*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEozgOEeiv1bKJKPS_Mg" name="Empty text">
        <parameters xmi:id="_9IFEpDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEpTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Empty_text_0.1.pattern#_vZ6_IGk6Ed2I1bT57-sHUw"/>
            <builtInPatterns xmi:id="_C775EDgPEeiv1bKJKPS_Mg" name="Empty text">
              <taggedValue xmi:id="_C775ETgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_C775EjgPEeiv1bKJKPS_Mg" tag="Description" value="Will matches values with only whitespaces or tabulation character. Regexp class: [:space:]"/>
              <taggedValue xmi:id="_C775EzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Identify values with only space characters"/>
              <taggedValue xmi:id="_C775FDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C775FTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C775FjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C775FzgPEeiv1bKJKPS_Mg" body="'^[[:space:]]*$'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C775GDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C775GTgPEeiv1bKJKPS_Mg" body="'^[\n|\t|\v|\f]*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEpjgOEeiv1bKJKPS_Mg" name="Home Row Text">
        <parameters xmi:id="_9IFEpzgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEqDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Home_Row_Text_0.1.pattern#_e4vUoYyZEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_C9djEDgPEeiv1bKJKPS_Mg" name="Home Row Text">
              <taggedValue xmi:id="_C9djETgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_C9djEjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with random sequences at least 3 consonants such as &quot;smqljfmj&quot;"/>
              <taggedValue xmi:id="_C9djEzgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search random sequences with keys from the home row"/>
              <taggedValue xmi:id="_C9djFDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C9djFTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C9djFjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C9djFzgPEeiv1bKJKPS_Mg" body="'[qsdfghjklmQSDFGHJKLM]{3,}'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEqTgOEeiv1bKJKPS_Mg" name="Linux Path Verify">
        <parameters xmi:id="_9IFEqjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEqzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Linux_Path_Verify_0.1.pattern#_IqpTEIyfEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_C_ZcwDgPEeiv1bKJKPS_Mg" name="Linux Path Verify">
              <taggedValue xmi:id="_C_ZcwTgPEeiv1bKJKPS_Mg" tag="Author" value="Brandon Vasquez"/>
              <taggedValue xmi:id="_C_ZcwjgPEeiv1bKJKPS_Mg" tag="Description" value="This expressions was written for C#. Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also  will only match files that have extensions consisting of 2, 3, or 4 characters. Currently fails with _ . or - in the path, this will be updated at some point."/>
              <taggedValue xmi:id="_C_ZcwzgPEeiv1bKJKPS_Mg" tag="Purpose" value="/mnt/share/|||/home/.BASH|||/mnt/share/pic.jpeg|||/mnt/share/install.shmnt/share|||//mnt///share//|||/mnt/share/install.installer|||/home\user"/>
              <taggedValue xmi:id="_C_ZcxDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_C_ZcxTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_C_ZcxjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_C_ZcxzgPEeiv1bKJKPS_Mg" body="'^/{1}(((/{1}\.{1})?[a-zA-Z0-9 ]+/?)+(\.{1}[a-zA-Z0-9]{2,4})?)$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFErDgOEeiv1bKJKPS_Mg" name="No special chart">
        <parameters xmi:id="_9IFErTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFErjgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/No_special_chart_0.1.pattern#_6rm3QIycEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_DA7GwDgPEeiv1bKJKPS_Mg" name="No special chart">
              <taggedValue xmi:id="_DA7GwTgPEeiv1bKJKPS_Mg" tag="Author" value="Mohammed Rafiq .M"/>
              <taggedValue xmi:id="_DA7GwjgPEeiv1bKJKPS_Mg" tag="Description" value="Allow only 3 charcters or number without any special characters"/>
              <taggedValue xmi:id="_DA7GwzgPEeiv1bKJKPS_Mg" tag="Purpose" value="QDE|||QDE#RF"/>
              <taggedValue xmi:id="_DA7GxDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_DA7GxTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DA7GxjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DA7GxzgPEeiv1bKJKPS_Mg" body="'^[A-Za-z0-9]{3}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFErzgOEeiv1bKJKPS_Mg" name="Random sequence of text">
        <parameters xmi:id="_9IFEsDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEsTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Random_sequence_of_text_0.1.pattern#_gDqDcP9eEd2mwaQf90ozSg"/>
            <builtInPatterns xmi:id="_DDDNsDgPEeiv1bKJKPS_Mg" name="Random sequence of text">
              <taggedValue xmi:id="_DDDNsTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_DDDNsjgPEeiv1bKJKPS_Mg" tag="Description" value="Matches text with random sequences at least 4 consonants such as &quot;smqljfmj&quot;"/>
              <taggedValue xmi:id="_DDDNszgPEeiv1bKJKPS_Mg" tag="Purpose" value="Search random sequences"/>
              <taggedValue xmi:id="_DDDNtDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_DDDNtTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DDDNtjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DDDNtzgPEeiv1bKJKPS_Mg" body="'[zrtypqsdfghjklmwxcvbnZRTYPQSDFGHJKLMWXCVBN]{4,}$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEsjgOEeiv1bKJKPS_Mg" name="Starts with blank">
        <parameters xmi:id="_9IFEszgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEtDgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_blank_0.1.pattern#_18GtIIyaEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_DEk3sDgPEeiv1bKJKPS_Mg" name="Starts with blank">
              <taggedValue xmi:id="_DEk3sTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_DEk3sjgPEeiv1bKJKPS_Mg" tag="Description" value="matches: '  aa'&#xA;does not match: 'aa'"/>
              <taggedValue xmi:id="_DEk3szgPEeiv1bKJKPS_Mg" tag="Purpose" value="detect data starting with blank characters"/>
              <taggedValue xmi:id="_DEk3tDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_DEk3tTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DEk3tjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DEk3tzgPEeiv1bKJKPS_Mg" body="'^[[:blank:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DEk3uDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DEk3uTgPEeiv1bKJKPS_Mg" body="'^\s+.*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEtTgOEeiv1bKJKPS_Mg" name="Starts with space">
        <parameters xmi:id="_9IFEtjgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEtzgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_space_0.1.pattern#_scYqYIyaEd6Dle_8xC0lwg"/>
            <builtInPatterns xmi:id="_DGGhsDgPEeiv1bKJKPS_Mg" name="Starts with space">
              <taggedValue xmi:id="_DGGhsTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_DGGhsjgPEeiv1bKJKPS_Mg" tag="Description" value="matches: '&#x9;sklqjf', ' dqd'&#xA;non-matches: 'dsm:kljf'"/>
              <taggedValue xmi:id="_DGGhszgPEeiv1bKJKPS_Mg" tag="Purpose" value="detect whitespace at the begining of a data"/>
              <taggedValue xmi:id="_DGGhtDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_DGGhtTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DGGhtjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DGGhtzgPEeiv1bKJKPS_Mg" body="'^[[:space:]]'" language="SQL"/>
              </components>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DGGhuDgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DGGhuTgPEeiv1bKJKPS_Mg" body="'^[\n|\t|\v|\f]+[^(\n|\t|\v|\f)]*$'" language="Java"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEuDgOEeiv1bKJKPS_Mg" name="Starts with uppercase">
        <parameters xmi:id="_9IFEuTgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEujgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_uppercase_0.1.pattern#_53rX8AMvEeKk6OZDw5mXOQ"/>
            <builtInPatterns xmi:id="_DIMMYDgPEeiv1bKJKPS_Mg" name="Starts with uppercase">
              <taggedValue xmi:id="_DIMMYTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia@talend.com"/>
              <taggedValue xmi:id="_DIMMYjgPEeiv1bKJKPS_Mg" tag="Description" value="Will match when the first character of a text is an uppercase letter. For example, &quot;Axel&quot;, &quot;Street&quot; will match.&#xA;But &quot;31&quot;, &quot;john doe&quot;, &quot;3RD FLOOR&quot;, &quot;street&quot; will not match."/>
              <taggedValue xmi:id="_DIMMYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="identify words in uppercase"/>
              <taggedValue xmi:id="_DIMMZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_DIMMZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DIMMZjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DIMMZzgPEeiv1bKJKPS_Mg" body="'^[A-Z]+'" language="SQL" modificationDate="2012-09-20 16:31:53"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_9IFEuzgOEeiv1bKJKPS_Mg" name="Uppercased Single Word">
        <parameters xmi:id="_9IFEvDgOEeiv1bKJKPS_Mg">
          <dataValidDomain xmi:id="_9IFEvTgOEeiv1bKJKPS_Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Uppercased_Single_Word_0.1.pattern#_FyTwIHnTEd2weu9skTiCqA"/>
            <builtInPatterns xmi:id="_DJ3nYDgPEeiv1bKJKPS_Mg" name="Uppercased Single Word">
              <taggedValue xmi:id="_DJ3nYTgPEeiv1bKJKPS_Mg" tag="Author" value="scorreia"/>
              <taggedValue xmi:id="_DJ3nYjgPEeiv1bKJKPS_Mg" tag="Description" value="Will match when all characters of a word are uppercased. For example, &quot;AXEL&quot;, &quot;STREET&quot; will match.&#xA;But &quot;31&quot;, &quot;JOHN DOE&quot;, &quot;3RD FLOOR&quot;, &quot;street&quot; will not match."/>
              <taggedValue xmi:id="_DJ3nYzgPEeiv1bKJKPS_Mg" tag="Purpose" value="identify words in uppercase"/>
              <taggedValue xmi:id="_DJ3nZDgPEeiv1bKJKPS_Mg" tag="Status" value="Draft"/>
              <taggedValue xmi:id="_DJ3nZTgPEeiv1bKJKPS_Mg" tag="Validation_Status" value="true"/>
              <components xsi:type="dataquality.domain.pattern:RegularExpression" xmi:id="_DJ3nZjgPEeiv1bKJKPS_Mg" expressionType="REGEXP">
                <expression xmi:id="_DJ3nZzgPEeiv1bKJKPS_Mg" body="'^[A-Z]*$'" language="SQL"/>
              </components>
            </builtInPatterns>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="relational:TdColumn" href="../../../metadata/connections/EZCAP_ECD_0.1.item#_zflmFjSXEeiA5eC6W0k7dg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
    </results>
    <parameters xmi:id="_kV_qiTgOEeiv1bKJKPS_Mg" dataFilter="_zPCiYTgOEeiv1bKJKPS_Mg" analysisType="Multiple Column Analysis"/>
    <contextType xmi:id="_zO9p4DgOEeiv1bKJKPS_Mg" confirmationNeeded="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <dataquality.domain:Domain xmi:id="_zPCiYTgOEeiv1bKJKPS_Mg" name="Member_column_Analysis">
    <ranges xmi:id="_zPCiYjgOEeiv1bKJKPS_Mg">
      <expressions xmi:id="_zPCiYzgOEeiv1bKJKPS_Mg">
        <expression xsi:type="relational:TdExpression" xmi:id="_zPCiZDgOEeiv1bKJKPS_Mg" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
